{"version":3,"sources":["_helpers/fetch-wrapper.js","_helpers/history.js","_helpers/role.js","_helpers/alerttype.js","_services/account.service.js","_services/page.service.js","_services/comment.service.js","_services/file.service.js","store/storeModel.js","store/pagesStoreModel.js","store/accountsStoreModel.js","store/alertsStoreModel.js","store/index.js","_components/Alert.js","_components/Nav.js","_components/PrivateRoute.js","home/index.js","profile/Details.js","profile/Update.js","profile/index.js","admin/Overview.js","admin/users/List.js","admin/users/AddEdit.js","admin/users/index.js","admin/index.js","account/Login.js","account/Register.js","account/VerifyEmail.js","account/ForgotPassword.js","account/ResetPassword.js","account/index.js","page/PageSummary.js","page/Pages.js","page/Comment.js","page/Comments.js","page/PageDisplay.js","page/MarkdownEditor.js","page/FileUploader.js","page/PageEdit.js","page/Page.js","page/CommentEdit.js","app/index.js","index.js"],"names":["fetchWrapper","get","url","requestOptions","method","headers","authHeader","fetch","then","handleResponse","post","body","console","log","credentials","JSON","stringify","put","delete","user","json","localStorage","getItem","parse","isLoggedIn","jwtToken","isApiUrl","startsWith","process","Authorization","response","text","data","ok","error","message","statusText","Promise","reject","history","createBrowserHistory","Role","AlertType","baseUrl","accountService","login","email","password","logout","push","refreshToken","register","params","verifyEmail","token","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","getById","id","create","update","x","pageService","a","pages","page","newPage","updatedPage","pageId","res","baseUrlComment","comment","updatedComment","commentService","newComment","_id","fileService","uploadFile","formData","storeModel","pStore","addLoadedPages","action","state","createComment","content","userName","userId","createPage","title","slug","subtitle","comments","removePage","filter","p","editComment","clearComment","setPage","map","addPage","replaceComment","c","removeComment","addComment","loadPages","thunk","actions","payload","loadPage","helpers","localState","getState","smallPage","find","updatePageContent","toUpdate","deletePage","saveComment","deleteComment","aStore","accounts","account","editAccount","refreshTokenTimeout","addAccount","setItem","window","addNewAccount","setAccount","setEditAccount","replaceAccount","removeAccount","acc","setAccounts","clearAccount","startRefreshTokenTimer","atob","split","timeout","Date","exp","getTime","now","setTimeout","stopRefreshTokenTimer","clearTimeout","refreshAction","getAllAccounts","accs","getAccountById","createAccount","newAccount","updateAccount","deleteAccount","iStore","alerts","setAlertInternal","alert","removeAlert","clear","Math","floor","random","autoClose","undefined","success","type","info","warn","store","createStore","Alert","fade","useStoreState","s","useStoreActions","cssClasses","classes","alertTypeClass","join","length","className","index","key","onClick","dangerouslySetInnerHTML","__html","defaultProps","Nav","exact","to","href","target","role","variant","path","component","AdminNav","match","PrivateRoute","Component","roles","rest","render","props","indexOf","pathname","from","location","Home","Details","Update","alertSuccess","alertError","initialValues","validationSchema","Yup","shape","required","min","when","schema","oneOf","useState","isDeleting","setIsDeleting","onSubmit","fields","setStatus","setSubmitting","options","keepAfterRouteChange","catch","errors","touched","isSubmitting","name","disabled","confirm","style","width","Profile","Overview","List","users","useEffect","whiteSpace","colSpan","AddEdit","isAddMode","concat","createUser","updateUser","setFieldValue","as","value","Users","Admin","Login","clearAlerts","Register","firstName","lastName","acceptTerms","VerifyEmail","EmailStatus","emailStatus","setEmailStatus","queryString","search","replace","getBody","ForgotPassword","finally","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","getForm","Account","PageSummary","useHistory","Card","Body","Title","Subtitle","Pages","Container","Row","Col","Comment","Text","Comments","PageDisplay","createNewComment","source","escapeHtml","MarkdownEditor","val","updatedValue","height","onChange","e","d","v","current","FileUploader","file","setFile","filename","setFilename","preventDefault","FormData","append","encType","files","htmlFor","PageEdit","defaultValues","useForm","handleSubmit","eduRef","useRef","para","ref","rows","Page","useParams","modus","setModus","showConfirmation","setShowConfirmation","Modal","show","onHide","Header","closeButton","Footer","Button","CommentEdit","updateComment","App","useLocation","slice","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23f8e6d2.chunk.js","sourcesContent":["export const fetchWrapper = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: _delete,\r\n};\r\n\r\nfunction get(url) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction post(url, body) {\r\n  console.log(\"PPPPPPPPPPPPPP\", url);\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction put(url, body) {\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// prefixed with underscored because delete is a reserved word in javascript\r\nfunction _delete(url) {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// helper functions\r\n\r\nfunction authHeader(url) {\r\n  let user;\r\n  const json = localStorage.getItem(\"account\");\r\n  console.log(json);\r\n  if (json) {\r\n    user = JSON.parse(json);\r\n    console.log(user);\r\n  }\r\n\r\n  //const user = window.account;\r\n  console.log(\"***************************\", user);\r\n\r\n  const isLoggedIn = user && user.jwtToken;\r\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\r\n  if (isLoggedIn && isApiUrl) {\r\n    console.log(\"Token added\");\r\n    return { Authorization: `Bearer ${user.jwtToken}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n\r\n    if (!response.ok) {\r\n      /*       if ([401, 403].includes(response.status) && user) {\r\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n        accountxxxService.logout();\r\n      } */\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const Role = {\r\n    Admin: 'Admin',\r\n    User: 'User'    \r\n}","export const AlertType = {\r\n  Success: \"Success\",\r\n  Error: \"Error\",\r\n  Info: \"Info\",\r\n  Warning: \"Warning\",\r\n};\r\n","import { fetchWrapper, history } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/accounts`;\r\n\r\nexport const accountService = {\r\n  login,\r\n  logout,\r\n  refreshToken,\r\n  register,\r\n  verifyEmail,\r\n  forgotPassword,\r\n  validateResetToken,\r\n  resetPassword,\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n\r\nfunction login(email, password) {\r\n  return fetchWrapper.post(`${baseUrl}/authenticate`, { email, password });\r\n}\r\n\r\nfunction logout() {\r\n  // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\r\n  fetchWrapper.post(`${baseUrl}/revoke-token`, {});\r\n\r\n  history.push(\"/\"); // where should this go?????\r\n}\r\n\r\nfunction refreshToken() {\r\n  return fetchWrapper.post(`${baseUrl}/refresh-token`, {});\r\n}\r\n\r\nfunction register(params) {\r\n  return fetchWrapper.post(`${baseUrl}/register`, params);\r\n}\r\n\r\nfunction verifyEmail(token) {\r\n  return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\r\n}\r\n\r\nfunction forgotPassword(email) {\r\n  return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\r\n}\r\n\r\nfunction validateResetToken(token) {\r\n  return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\r\n}\r\n\r\nfunction resetPassword({ token, password, confirmPassword }) {\r\n  return fetchWrapper.post(`${baseUrl}/reset-password`, {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n  });\r\n}\r\n\r\nfunction getAll() {\r\n  return fetchWrapper.get(baseUrl);\r\n}\r\n\r\nfunction getById(id) {\r\n  return fetchWrapper.get(`${baseUrl}/${id}`);\r\n}\r\n\r\nfunction create(params) {\r\n  return fetchWrapper.post(baseUrl, params);\r\n}\r\n\r\nfunction update(id, params) {\r\n  return fetchWrapper.put(`${baseUrl}/${id}`, params);\r\n}\r\n\r\n// prefixed with underscore because 'delete' is a reserved word in javascript\r\nfunction _delete(id) {\r\n  return fetchWrapper.delete(`${baseUrl}/${id}`).then((x) => {\r\n    // auto logout if the logged in user deleted their own record\r\n    /*     if (id === .value.id) {\r\n      logout();\r\n    } */\r\n    return x;\r\n  });\r\n}\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/pages`;\r\n\r\nconst getAll = async () => {\r\n  let pages = await fetch(baseUrl);\r\n  pages = await pages.json();\r\n  return pages;\r\n};\r\n\r\nconst getById = async (id) => {\r\n  let page = await fetch(baseUrl + \"/\" + id);\r\n  page = await page.json();\r\n  return page;\r\n};\r\nconst create = async (page) => {\r\n  const newPage = fetchWrapper.post(`${baseUrl}`, page);\r\n  return newPage;\r\n};\r\n\r\nconst update = async (id, page) => {\r\n  let updatedPage = await fetchWrapper.put(`${baseUrl}/${id}`, page);\r\n  return updatedPage;\r\n};\r\n\r\nconst _delete = async (pageId) => {\r\n  let res = await fetchWrapper.delete(`${baseUrl}/${pageId}`);\r\n  return res;\r\n};\r\n\r\nexport const pageService = {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrlComment = `${process.env.REACT_APP_API_URL}/comments`;\r\n\r\nconst update = async (pageId, comment) => {\r\n  let updatedComment = await fetchWrapper.put(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return updatedComment;\r\n};\r\n\r\nconst create = async (pageId, comment) => {\r\n  let newComment = await fetchWrapper.post(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return newComment;\r\n};\r\n\r\nconst _delete = async (pageId, comment) => {\r\n  let res = await fetchWrapper.delete(\r\n    `${baseUrlComment}/${pageId}/${comment._id}`\r\n  );\r\n\r\n  return res;\r\n};\r\n\r\nexport const commentService = {\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","const baseUrl = `${process.env.REACT_APP_API_URL}/files/upload`;\r\n\r\nexport const fileService = {\r\n  uploadFile: async (formData) => {\r\n    console.log(\"file upload service\");\r\n\r\n    try {\r\n      let response = await fetch(baseUrl, {\r\n        method: \"POST\",\r\n\r\n        body: formData,\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(response);\r\n      const message = '&lt;img src=\"' + response + '\" width=\"10%\" &gt;';\r\n      return message;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n","import pagesStoreModel from \"./pagesStoreModel\";\r\nimport accountStoreModel from \"./accountsStoreModel\";\r\nimport alertsStoreModel from \"./alertsStoreModel\";\r\n\r\nconst storeModel = {\r\n  pStore: pagesStoreModel,\r\n  aStore: accountStoreModel,\r\n  iStore: alertsStoreModel,\r\n};\r\n\r\nexport default storeModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { pageService } from \"../_services\";\r\nimport { commentService } from \"../_services\";\r\n\r\nconst pagesStoreModel = {\r\n  pages: [],\r\n  page: null,\r\n  comment: null,\r\n\r\n  addLoadedPages: action((state, pages) => {\r\n    state.pages = pages;\r\n  }),\r\n\r\n  createComment: action((state, user) => {\r\n    const newComment = {\r\n      content: \"\",\r\n      userName: user.userName,\r\n      userId: user.id,\r\n    };\r\n    state.comment = newComment;\r\n  }),\r\n\r\n  createPage: action((state) => {\r\n    const newPage = {\r\n      title: \"New Page Title\",\r\n      slug: \"newPage\",\r\n      subtitle: \"\",\r\n      content: \"\",\r\n      comments: [],\r\n    };\r\n    state.page = newPage;\r\n  }),\r\n\r\n  removePage: action((state, page) => {\r\n    state.pages = state.pages.filter((p) => p._id !== page._id);\r\n    state.page = null;\r\n  }),\r\n\r\n  editComment: action((state, comment) => {\r\n    state.comment = comment;\r\n  }),\r\n\r\n  clearComment: action((state) => {\r\n    state.comment = null;\r\n  }),\r\n\r\n  setPage: action((state, page) => {\r\n    state.page = page;\r\n    state.pages = state.pages.map((p) => (p._id === page._id ? page : p));\r\n  }),\r\n\r\n  addPage: action((state, page) => {\r\n    state.pages.push(page);\r\n    state.page = page;\r\n  }),\r\n\r\n  replaceComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.map((c) =>\r\n      c._id == comment._id ? comment : c\r\n    );\r\n  }),\r\n\r\n  removeComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.filter(\r\n      (c) => c._id !== comment._id\r\n    );\r\n  }),\r\n\r\n  addComment: action((state, comment) => {\r\n    state.page.comments.push(comment);\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  loadPages: thunk(async (actions, payload) => {\r\n    const pages = await pageService.getAll();\r\n    actions.addLoadedPages(pages);\r\n  }),\r\n\r\n  loadPage: thunk(async (actions, slug, helpers) => {\r\n    const localState = helpers.getState();\r\n    /*     if (localState.cachedPages.has(slug)) {\r\n      console.log(\"using Cached version\");\r\n      actions.setPage(localState.cachedPages.get(slug));\r\n      return;\r\n    } */\r\n\r\n    const smallPage = localState.pages.find((p) => p.slug === slug);\r\n\r\n    if (!smallPage) return;\r\n    const page = await pageService.getById(smallPage._id);\r\n    actions.setPage(page);\r\n  }),\r\n\r\n  updatePageContent: thunk(async (actions, payload, helpers) => {\r\n    const { _id, slug, title, subtitle, content } = payload;\r\n    const localState = helpers.getState();\r\n    const toUpdate = {\r\n      slug,\r\n      title,\r\n      subtitle,\r\n      content,\r\n    };\r\n\r\n    if (_id) {\r\n      // this is an update\r\n      const updatedPage = await pageService.update(_id, toUpdate);\r\n      actions.setPage(updatedPage);\r\n    } else {\r\n      const newPage = await pageService.create(toUpdate);\r\n      actions.addPage(newPage);\r\n    }\r\n\r\n    //alertService.success(\"Page was saved successfully\");\r\n  }),\r\n\r\n  deletePage: thunk(async (actions, page, helpers) => {\r\n    if (page._id) {\r\n      await pageService.delete(page._id);\r\n      actions.removePage(page);\r\n    }\r\n  }),\r\n\r\n  saveComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    console.log(comment);\r\n    if (comment._id) {\r\n      // this is an update\r\n      console.log(localState.page._id);\r\n      const updatedComment = await commentService.update(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n      actions.replaceComment(updatedComment);\r\n    } else {\r\n      const updatedComment = await commentService.create(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n\r\n      actions.addComment(updatedComment);\r\n    }\r\n  }),\r\n\r\n  deleteComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    if (comment._id) {\r\n      await commentService.delete(localState.page._id, comment);\r\n      actions.removeComment(comment);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default pagesStoreModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { accountService } from \"../_services\";\r\n\r\nconst accountsStoreModels = {\r\n  accounts: [],\r\n  account: null,\r\n  editAccount: null,\r\n  refreshTokenTimeout: null,\r\n\r\n  addAccount: action((state, account) => {\r\n    state.account = account;\r\n    localStorage.setItem(\"account\", JSON.stringify(account));\r\n    window.account = account;\r\n  }),\r\n\r\n  addNewAccount: action((state, account) => {\r\n    state.accounts.push(account);\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setAccount: action((state, account) => {\r\n    console.log(\"Account\", account);\r\n    localStorage.setItem(\"account\", JSON.stringify(account));\r\n    state.account = account;\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setEditAccount: action((state, account) => {\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  replaceAccount: action((state, account) => {\r\n    state.accounts = state.accounts.map((a) =>\r\n      a.email === account.email ? account : a\r\n    );\r\n    if (state.account.email === account.email) {\r\n      state.actions.setAccount(account);\r\n    }\r\n  }),\r\n\r\n  removeAccount: action((state, id) => {\r\n    const acc = state.accounts.filter((a) => a.id !== id);\r\n    if (state.account.id === id) {\r\n      state.actions.setAccount(acc);\r\n    }\r\n  }),\r\n\r\n  setAccounts: action((state, accounts) => {\r\n    state.accounts = accounts;\r\n  }),\r\n\r\n  clearAccount: action((state) => {\r\n    localStorage.setItem(\"account\", JSON.stringify({}));\r\n    state.account = null;\r\n    window.account = null;\r\n  }),\r\n\r\n  // Actions\r\n  addLoadedPages: action((state, pages) => {\r\n    state.pages = pages;\r\n  }),\r\n\r\n  startRefreshTokenTimer: action((state, refreshToken) => {\r\n    // parse json object from base64 encoded jwt token\r\n    const jwtToken = JSON.parse(atob(state.account.jwtToken.split(\".\")[1]));\r\n\r\n    // set a timeout to refresh the token a minute before it expires\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n\r\n    state.refreshTokenTimeout = setTimeout(() => {\r\n      refreshToken(refreshToken);\r\n    }, timeout);\r\n  }),\r\n\r\n  stopRefreshTokenTimer: action((state, pages) => {\r\n    clearTimeout(state.refreshTokenTimeout);\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  login: thunk(async (actions, payload) => {\r\n    const { email, password, refreshAction } = payload;\r\n    console.log(email);\r\n    const acc = await accountService.login(email, password);\r\n    actions.setAccount(acc);\r\n    actions.startRefreshTokenTimer(refreshAction);\r\n  }),\r\n\r\n  logout: thunk(async (actions) => {\r\n    await accountService.logout();\r\n    actions.stopRefreshTokenTimer();\r\n    actions.clearAccount();\r\n  }),\r\n\r\n  refreshToken: thunk(async (actions, refreshAction) => {\r\n    const acc = await accountService.refreshToken();\r\n    actions.setAccount(acc);\r\n    actions.startRefreshTokenTimer(refreshAction);\r\n  }),\r\n\r\n  register: thunk(async (actions, payload) => {\r\n    await accountService.register(payload);\r\n  }),\r\n\r\n  verifyEmail: thunk(async (actions, token) => {\r\n    await accountService.verifyEmail(token);\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, email) => {\r\n    await accountService.forgotPassword(email);\r\n  }),\r\n\r\n  validateResetToken: thunk(async (actions, token) => {\r\n    await accountService.validateResetToken(token);\r\n  }),\r\n\r\n  resetPassword: thunk(async (actions, payload) => {\r\n    const { token, password, confirmPassword } = payload;\r\n    await accountService.resetPassword(token, password, confirmPassword);\r\n  }),\r\n\r\n  getAllAccounts: thunk(async (actions) => {\r\n    const accs = await accountService.getAll();\r\n    actions.setAccounts(accs);\r\n  }),\r\n\r\n  getAccountById: thunk(async (actions, id) => {\r\n    const acc = await accountService.getById(id);\r\n    actions.setEditAccount(acc);\r\n  }),\r\n\r\n  createAccount: thunk(async (actions, newAccount) => {\r\n    const acc = await accountService.create(newAccount);\r\n    actions.addNewAccount(acc);\r\n  }),\r\n\r\n  updateAccount: thunk(async (actions, payload) => {\r\n    const { id, params } = payload;\r\n    const acc = await accountService.update(id, params);\r\n    actions.replaceAccount(acc);\r\n  }),\r\n\r\n  deleteAccount: thunk(async (actions, id) => {\r\n    await accountService.delete(id);\r\n    actions.removeAccount(id);\r\n  }),\r\n};\r\n\r\nexport default accountsStoreModels;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst alertsStoreModel = {\r\n  alerts: [],\r\n\r\n  // Actions\r\n\r\n  setAlertInternal: action((state, alert) => {\r\n    state.alerts.push(alert);\r\n  }),\r\n\r\n  removeAlert: action((state, alert) => {\r\n    state.alerts = state.alerts.filter((x) => x.id !== alert.id);\r\n  }),\r\n\r\n  clear: action((state) => {\r\n    state.alerts = [];\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  alert: thunk(async (actions, alert) => {\r\n    alert.id = Math.floor(Math.random() * 10000);\r\n    alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\r\n    actions.setAlertInternal(alert);\r\n    if (alert.autoClose) {\r\n      setTimeout(() => actions.removeAlert(alert), 3500);\r\n    }\r\n  }),\r\n\r\n  success: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Success;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  error: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Error;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  info: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Info;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  warn: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Warning;\r\n    await actions.alert(alert);\r\n  }),\r\n};\r\n\r\nexport default alertsStoreModel;\r\n","import { createStore } from \"easy-peasy\";\r\nimport storeModel from \"./storeModel\";\r\n\r\nconst store = createStore(storeModel);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  fade: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"default-alert\",\r\n  fade: true,\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n  const alerts = useStoreState((s) => s.iStore.alerts);\r\n  const removeAlert = useStoreActions((a) => a.iStore.removeAlert);\r\n\r\n  function cssClasses(alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n\r\n  if (!alerts.length) return null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"m-3\">\r\n        {alerts.map((alert, index) => (\r\n          <div key={index} className={cssClasses(alert)}>\r\n            <a className=\"close\" onClick={() => removeAlert(alert)}>\r\n              &times;\r\n            </a>\r\n            <span dangerouslySetInnerHTML={{ __html: alert.message }}></span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };\r\n","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { history, Role } from \"../_helpers\";\r\n\r\nfunction Nav() {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const logout = useStoreActions((a) => a.aStore.logout);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-info larger\">\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <NavLink exact to=\"/\" className=\"nav-item nav-link\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/content\" className=\"nav-item nav-link\">\r\n            Documentation\r\n          </NavLink>\r\n          <a\r\n            className=\"nav-item nav-link\"\r\n            href=\"http://localhost:4000/api-docs\"\r\n            target=\"_blank\"\r\n          >\r\n            API-Documentation\r\n          </a>\r\n          <NavLink to=\"/profile\" className=\"nav-item nav-link\">\r\n            Profile\r\n          </NavLink>\r\n          {user && user.role === Role.Admin && (\r\n            <NavLink to=\"/admin\" className=\"nav-item nav-link\">\r\n              Admin\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n        <div className=\"navbar-nav ml-auto\">\r\n          {user && (\r\n            <span className=\"navbar-text mr-4\">User: {user.userName}</span>\r\n          )}\r\n          {user && (\r\n            <a onClick={() => logout()} className=\"nav-item nav-link \">\r\n              Logout\r\n            </a>\r\n          )}\r\n          {!user && (\r\n            <a\r\n              className=\"nav-item nav-link\"\r\n              onClick={() => history.push(\"/account/login\")}\r\n              variant=\"outline-success\"\r\n            >\r\n              Login\r\n            </a>\r\n          )}\r\n        </div>\r\n      </nav>\r\n\r\n      <Route path=\"/admin\" component={AdminNav} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AdminNav({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <nav className=\"admin-nav navbar navbar-expand navbar-light\">\r\n      <div className=\"navbar-nav\">\r\n        <NavLink to={`${path}/users`} className=\"nav-item nav-link\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport { Nav };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n  const account = useStoreState((s) => s.aStore.account);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(\"Private Route\");\r\n        if (!account) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/account/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n          //return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (roles && roles.indexOf(account.role) === -1) {\r\n          // role not authorized so redirect to home page\r\n          return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // authorized so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"m-4\">\r\n      <div className=\"container\">\r\n        <h1 className=\"mb-4  display-4\">Reference App MERN-Stack</h1>\r\n        <h3>A simple app to manage technical documentation.</h3>\r\n        <div className=\"larger\">\r\n          <p>\r\n            It is the purpose of this application to be used as a correct and\r\n            well coded example of the implementation of a CRUD application with\r\n            autherization and messaging system.\r\n          </p>\r\n          <p>\r\n            If your are building an app you can always go to this app an find a\r\n            good and working implementation of the basic functionality needed to\r\n            build such an app.\r\n          </p>\r\n        </div>\r\n\r\n        <h3>Functionality of the App</h3>\r\n        <ul className=\"larger feature\">\r\n          <li>\r\n            The documentation pages can be entered in the markdown syntax, which\r\n            supports many formatting options including including pictures in the\r\n            documents. Pictures can be uploaded and included into the\r\n            documentation.\r\n          </li>\r\n          <li>\r\n            The authorization includes login, sign-up, email verification,\r\n            password reset, user-roles, user can edit their profile and an\r\n            administrator can add, edit and delete all the users.\r\n          </li>\r\n          <li>\r\n            The application is built on the Redux pattern and uses Easy-Peasy to\r\n            implement it\r\n          </li>\r\n          <li>For each documentation page the users can leave comments.</li>\r\n          <li>\r\n            A User can view all the pages even when he is not logged in. A user\r\n            must me logged in to leave a comment.\r\n          </li>\r\n          <li>\r\n            A user can edit and/or delete his comments but can not edit or\r\n            delete comments made by other users\r\n          </li>\r\n          <li>\r\n            Pages can be added, edited and deleted only by users who belong to\r\n            the admin group.\r\n          </li>\r\n          <li>\r\n            Pages can be added, edited and deleted only by users who belong to\r\n            the admin group.\r\n          </li>\r\n          <li>\r\n            An administrator can edit and delete comments even if they were made\r\n            by another user.\r\n          </li>\r\n          <li>\r\n            The swagger documentation of the underlying api can be accessed via\r\n            the menu.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Home };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Details({ match }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Profile</h1>\r\n      <p>\r\n        <strong>Name: </strong> {user.userName}\r\n        <br />\r\n        <strong>Email: </strong> {user.email}\r\n      </p>\r\n      <p>\r\n        <Link to={`${path}/update`}>Update Profile</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Details };\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Update({ history }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const initialValues = {\r\n    userName: user.userName,\r\n    email: user.email,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string().min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) return schema.required(\"Confirm Password is required\");\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    update(user.id, fields)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          options: { keepAfterRouteChange: true },\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  function onDelete() {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      setIsDeleting(true);\r\n\r\n      deleteAccount(user.id).then(() =>\r\n        alertSuccess(\"Account deleted successfully\")\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h1>Update Profile</h1>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Username</label>\r\n              <Field\r\n                name=\"userName\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.userName && touched.userName ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"userName\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <Field\r\n              name=\"email\"\r\n              type=\"text\"\r\n              className={\r\n                \"form-control\" +\r\n                (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n              }\r\n            />\r\n            <ErrorMessage\r\n              name=\"email\"\r\n              component=\"div\"\r\n              className=\"invalid-feedback\"\r\n            />\r\n          </div>\r\n          <h3 className=\"pt-3\">Change Password</h3>\r\n          <p>Leave blank to keep the same password</p>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group col\">\r\n              <label>Confirm Password</label>\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.confirmPassword && touched.confirmPassword\r\n                    ? \" is-invalid\"\r\n                    : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"confirmPassword\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary mr-2\"\r\n            >\r\n              {isSubmitting && (\r\n                <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n              )}\r\n              Update\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDelete()}\r\n              className=\"btn btn-danger\"\r\n              style={{ width: \"75px\" }}\r\n              disabled={isDeleting}\r\n            >\r\n              {isDeleting ? (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              ) : (\r\n                <span>Delete</span>\r\n              )}\r\n            </button>\r\n            <Link to=\".\" className=\"btn btn-link\">\r\n              Cancel\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { Update };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { Details } from './Details';\r\nimport { Update } from './Update';\r\n\r\nfunction Profile({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <div className=\"p-4\">\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path={path} component={Details} />\r\n                    <Route path={`${path}/update`} component={Update} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Profile };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Overview({ match }) {\r\n    const { path } = match;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin</h1>\r\n            <p>This section can only be accessed by administrators.</p>\r\n            <p><Link to={`${path}/users`}>Manage Users</Link></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Overview };","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction List({ match }) {\r\n  const users = useStoreState((s) => s.aStore.accounts);\r\n  const getAllAccounts = useStoreActions((a) => a.aStore.getAllAccounts);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const { path } = match;\r\n\r\n  useEffect(() => {\r\n    getAllAccounts();\r\n  }, []);\r\n\r\n  function deleteUser(id) {\r\n    deleteAccount(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <p>All users from secure (admin only) api end point:</p>\r\n      <Link to={`${path}/add`} className=\"btn btn-sm btn-success mb-2\">\r\n        Add User\r\n      </Link>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"30%\" }}>Username</th>\r\n            <th style={{ width: \"30%\" }}>Email</th>\r\n            <th style={{ width: \"30%\" }}>Role</th>\r\n            <th style={{ width: \"10%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users &&\r\n            users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.userName}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.role}</td>\r\n                <td style={{ whiteSpace: \"nowrap\" }}>\r\n                  <Link\r\n                    to={`${path}/edit/${user.id}`}\r\n                    className=\"btn btn-sm btn-primary mr-1\"\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                  <button\r\n                    onClick={() => deleteUser(user.id)}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    style={{ width: \"60px\" }}\r\n                    disabled={user.isDeleting}\r\n                  >\r\n                    {user.isDeleting ? (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    ) : (\r\n                      <span>Delete</span>\r\n                    )}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          {!users && (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">\r\n                <span className=\"spinner-border spinner-border-lg align-center\"></span>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { List };\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction AddEdit({ history, match }) {\r\n  const user = useStoreState((s) => s.aStore.editAccount);\r\n  const create = useStoreActions((a) => a.aStore.createAccount);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const getById = useStoreActions((a) => a.aStore.getAccountById);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const { id } = match.params;\r\n  const isAddMode = !id;\r\n\r\n  useEffect(() => {\r\n    if (!isAddMode) {\r\n      getById(id);\r\n    }\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    userName: user ? user.userName : \"\",\r\n    email: user ? user.email : \"\",\r\n    role: user ? user.role : \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    role: Yup.string().required(\"Role is required\"),\r\n    password: Yup.string()\r\n      .concat(isAddMode ? Yup.string().required(\"Password is required\") : null)\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) return schema.required(\"Confirm Password is required\");\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    if (isAddMode) {\r\n      createUser(fields, setSubmitting);\r\n    } else {\r\n      updateUser(id, fields, setSubmitting);\r\n    }\r\n  }\r\n\r\n  function createUser(fields, setSubmitting) {\r\n    create(fields)\r\n      .then(() => {\r\n        alertSuccess(\"User added successfully\", {\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError(error);\r\n      });\r\n  }\r\n\r\n  function updateUser(id, fields, setSubmitting) {\r\n    update(id, fields)\r\n      .then(() => {\r\n        alertSuccess(\"Update successful\", {\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"..\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting, setFieldValue }) => {\r\n        return (\r\n          <Form>\r\n            <h1>{isAddMode ? \"Add User\" : \"Edit User\"}</h1>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Last Name</label>\r\n                <Field\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.userName && touched.userName ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"lastName\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-7\">\r\n                <label>Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Role</label>\r\n                <Field\r\n                  name=\"role\"\r\n                  as=\"select\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.role && touched.role ? \" is-invalid\" : \"\")\r\n                  }\r\n                >\r\n                  <option value=\"\"></option>\r\n                  <option value=\"User\">User</option>\r\n                  <option value=\"Admin\">Admin</option>\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"role\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {!isAddMode && (\r\n              <div>\r\n                <h3 className=\"pt-3\">Change Password</h3>\r\n                <p>Leave blank to keep the same password</p>\r\n              </div>\r\n            )}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Confirm Password</label>\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.confirmPassword && touched.confirmPassword\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"confirmPassword\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {isSubmitting && (\r\n                  <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                )}\r\n                Save\r\n              </button>\r\n              <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\r\n                Cancel\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { AddEdit };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { List } from './List';\r\nimport { AddEdit } from './AddEdit';\r\n\r\nfunction Users({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={path} component={List} />\r\n            <Route path={`${path}/add`} component={AddEdit} />\r\n            <Route path={`${path}/edit/:id`} component={AddEdit} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport { Users };","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Overview } from \"./Overview\";\r\nimport { Users } from \"./users\";\r\n\r\nfunction Admin({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path={path} component={Overview} />\r\n          <Route path={`${path}/users`} component={Users} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Admin };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Login({ history, location }) {\r\n  const login = useStoreActions((a) => a.aStore.login);\r\n  const refreshAction = useStoreActions((a) => a.aStore.refreshToken);\r\n\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  function onSubmit({ email, password }, { setSubmitting }) {\r\n    clearAlerts();\r\n    console.log(email);\r\n    login({ email, password, refreshAction })\r\n      .then(() => {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        history.push(from);\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h3 className=\"card-header\">Login</h3>\r\n          <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isSubmitting && (\r\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  )}\r\n                  Login\r\n                </button>\r\n                <Link to=\"register\" className=\"btn btn-link\">\r\n                  Register\r\n                </Link>\r\n              </div>\r\n              <div className=\"form-group col text-right\">\r\n                <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Register({ history }) {\r\n  const register = useStoreActions((a) => a.aStore.register);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    acceptTerms: false,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    register(fields)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message:\r\n            \"Registration successful, please check your email for verification instructions\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h3 className=\"card-header\">Register</h3>\r\n          <div className=\"card-body\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Username</label>\r\n                <Field\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.userName && touched.userName ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"userName\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Confirm Password</label>\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.confirmPassword && touched.confirmPassword\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"confirmPassword\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {isSubmitting && (\r\n                  <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                )}\r\n                Register\r\n              </button>\r\n              <Link to=\"login\" className=\"btn btn-link\">\r\n                Cancel\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { Register };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction VerifyEmail({ history }) {\r\n  const verifyEmail = useStoreActions((a) => a.aStore.verifyEmail);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const EmailStatus = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n  };\r\n\r\n  const [emailStatus, setEmailStatus] = useState(EmailStatus.Verifying);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    verifyEmail(token)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Verification successful, you can now login\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch(() => {\r\n        setEmailStatus(EmailStatus.Failed);\r\n      });\r\n  }, []);\r\n\r\n  function getBody() {\r\n    switch (emailStatus) {\r\n      case EmailStatus.Verifying:\r\n        return <div>Verifying...</div>;\r\n      case EmailStatus.Failed:\r\n        return (\r\n          <div>\r\n            Verification failed, you can also verify your account using the{\" \"}\r\n            <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Verify Email</h3>\r\n      <div className=\"card-body\">{getBody()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { VerifyEmail };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction ForgotPassword() {\r\n  const forgotPassword = useStoreActions((a) => a.aStore.forgotPassword);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  });\r\n\r\n  function onSubmit({ email }, { setSubmitting }) {\r\n    clearAlerts();\r\n    forgotPassword(email)\r\n      .then(() =>\r\n        alertSuccess({\r\n          message: \"Please check your email for password reset instructions\",\r\n        })\r\n      )\r\n      .catch((error) => alertError({ message: error }))\r\n      .finally(() => setSubmitting(false));\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h3 className=\"card-header\">Forgot Password</h3>\r\n          <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isSubmitting && (\r\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  )}\r\n                  Submit\r\n                </button>\r\n                <Link to=\"login\" className=\"btn btn-link\">\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { ForgotPassword };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction ResetPassword({ history }) {\r\n  const validateResetToken = useStoreActions(\r\n    (a) => a.aStore.validateResetToken\r\n  );\r\n\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const resetPassword = useStoreActions((a) => a.aStore.resetPassword);\r\n  const TokenStatus = {\r\n    Validating: \"Validating\",\r\n    Valid: \"Valid\",\r\n    Invalid: \"Invalid\",\r\n  };\r\n\r\n  const [token, setToken] = useState(null);\r\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    validateResetToken(token)\r\n      .then(() => {\r\n        setToken(token);\r\n        setTokenStatus(TokenStatus.Valid);\r\n      })\r\n      .catch(() => {\r\n        setTokenStatus(TokenStatus.Invalid);\r\n      });\r\n  }, []);\r\n\r\n  function getForm() {\r\n    const initialValues = {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n      password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm Password is required\"),\r\n    });\r\n\r\n    function onSubmit({ password, confirmPassword }, { setSubmitting }) {\r\n      clearAlerts();\r\n      resetPassword({ token, password, confirmPassword })\r\n        .then(() => {\r\n          alertSuccess({\r\n            message: \"Password reset successful, you can now login\",\r\n            options: { keepAfterRouteChange: true },\r\n          });\r\n          history.push(\"login\");\r\n        })\r\n        .catch((error) => {\r\n          setSubmitting(false);\r\n          alertError({ message: error });\r\n        });\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ errors, touched, isSubmitting }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Confirm Password</label>\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.confirmPassword && touched.confirmPassword\r\n                    ? \" is-invalid\"\r\n                    : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"confirmPassword\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isSubmitting && (\r\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  )}\r\n                  Reset Password\r\n                </button>\r\n                <Link to=\"/login\" className=\"btn btn-link\">\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n\r\n  function getBody() {\r\n    switch (tokenStatus) {\r\n      case TokenStatus.Valid:\r\n        return getForm();\r\n      case TokenStatus.Invalid:\r\n        return (\r\n          <div>\r\n            Token validation failed, if the token has expired you can get a new\r\n            one at the <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      case TokenStatus.Validating:\r\n        return <div>Validating token...</div>;\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Reset Password</h3>\r\n      <div className=\"card-body\">{getBody()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ResetPassword };\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nimport { Login } from \"./Login\";\r\nimport { Register } from \"./Register\";\r\nimport { VerifyEmail } from \"./VerifyEmail\";\r\nimport { ForgotPassword } from \"./ForgotPassword\";\r\nimport { ResetPassword } from \"./ResetPassword\";\r\n\r\nfunction Account({ history, match }) {\r\n  const { path } = match;\r\n  const account = useStoreState((s) => s.aStore.account);\r\n\r\n  useEffect(() => {\r\n    // redirect to home if already logged in\r\n    if (account) {\r\n      //  history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8 offset-sm-2 mt-5\">\r\n          <div className=\"card m-3\">\r\n            <Switch>\r\n              <Route path={`${path}/login`} component={Login} />\r\n              <Route path={`${path}/register`} component={Register} />\r\n              <Route path={`${path}/verify-email`} component={VerifyEmail} />\r\n              <Route\r\n                path={`${path}/forgot-password`}\r\n                component={ForgotPassword}\r\n              />\r\n              <Route\r\n                path={`${path}/reset-password`}\r\n                component={ResetPassword}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Account };\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function PageSummary({ page }) {\r\n  const history = useHistory();\r\n  console.log(page);\r\n\r\n  return (\r\n    <Card\r\n      className=\"mb-3 mx-5 p-3\"\r\n      onClick={() => history.push(\"/topic/\" + page.slug)}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{page.title}</Card.Title>\r\n        <Card.Subtitle>{page.subtitle}</Card.Subtitle>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport PageSummary from \"./PageSummary\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Pages() {\r\n  const pages = useStoreState((s) => s.pStore.pages);\r\n  const createPage = useStoreActions((a) => a.pStore.createPage);\r\n  const history = useHistory();\r\n\r\n  const addPageHandler = () => {\r\n    createPage();\r\n    history.push(\"/topic/newPage\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"float-right btn btn-light\" onClick={addPageHandler}>\r\n        <MdAdd />\r\n      </button>\r\n      <Container className=\"w-auto mt-5 \">\r\n        <h2 className=\"mb-3 ml-5\">Documentation</h2>\r\n        {pages.map((p) => (\r\n          <Row key={p._id}>\r\n            <Col>\r\n              <PageSummary page={p} />\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function Comment({ data }) {\r\n  const history = useHistory();\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const editComment = useStoreActions((a) => a.pStore.editComment);\r\n  const deleteComment = useStoreActions((a) => a.pStore.deleteComment);\r\n\r\n  const handleEdit = () => {\r\n    editComment(data);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteComment(data);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <Card.Title>Comment by {data.userName}</Card.Title>\r\n        <Card.Text>{data.content}</Card.Text>\r\n        {user && (user.id == data.userId || user.role == \"Admin\") ? (\r\n          <div className=\"float-right\">\r\n            <button className=\"btn btn-light\" onClick={handleEdit}>\r\n              <MdModeEdit />\r\n            </button>{\" \"}\r\n            <button className=\"btn btn-light\" onClick={handleDelete}>\r\n              <MdDelete />\r\n            </button>{\" \"}\r\n          </div>\r\n        ) : null}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function Comments({ comments } = []) {\r\n  return (\r\n    <>\r\n      {comments.map((c) => (\r\n        <Comment key={c._id} data={c} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Comments from \"../page/Comments\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function PageDisplay() {\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const createNewComment = useStoreActions((a) => a.pStore.createComment);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCommentHandler = () => {\r\n    createNewComment(user);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{page.title}</h2>\r\n\r\n      <ReactMarkdown\r\n        source={page.content}\r\n        escapeHtml={false}\r\n        className=\"mb-4\"\r\n      />\r\n      <div className=\"mt-5\"></div>\r\n      <hr className=\"mt-3 mb-3\" />\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h4 className=\"mt-5\">Comments</h4>\r\n          </Col>\r\n          {user ? (\r\n            <Col>\r\n              <button\r\n                className=\"float-right btn btn-light\"\r\n                onClick={addCommentHandler}\r\n              >\r\n                <MdAdd />\r\n              </button>\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n      </div>\r\n\r\n      <Comments\r\n        className=\"float-none\"\r\n        comments={page.comments ? page.comments : []}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport MarkdownEditor2 from \"@uiw/react-markdown-editor\";\r\nimport * as Showdown from \"showdown\";\r\n\r\n//import \"react-mde/lib/styles/css/react-mde-all.css\";\r\n//  onChange={updateMarkdown}\r\n/* \r\nconst converter = new Showdown.Converter({\r\n  tables: true,\r\n  simplifiedAutoLink: true,\r\n  strikethrough: true,\r\n  tasklists: true,\r\n}); */\r\n\r\nexport default function MarkdownEditor({ val, updatedValue }) {\r\n  const [value, setValue] = useState(val);\r\n\r\n  const updateMarkdown = (e, d, v) => {\r\n    updatedValue.current = v;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MarkdownEditor2 value={value} height=\"300\" onChange={updateMarkdown} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { fileService } from \"../_services\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nexport const FileUploader = () => {\r\n  const [file, setFile] = useState();\r\n  const [filename, setFilename] = useState(\"Choose image to upload\");\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    console.log(formData);\r\n    const message = await fileService.uploadFile(formData);\r\n    alertSuccess({ message: message, autoClose: false });\r\n    setFilename(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n      <div className=\"custom-file \">\r\n        <input\r\n          type=\"file\"\r\n          className=\"custom-file-input\"\r\n          id=\"customFile\"\r\n          onChange={onChange}\r\n        />\r\n        <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n          {filename}\r\n        </label>\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Upload\"\r\n        className=\"btn,  btn-light btn-block mt-3  float-left\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport MarkdownEditor from \"./MarkdownEditor\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { FileUploader } from \"./FileUploader\";\r\n\r\nexport default function PageEdit({ page }) {\r\n  //const page = useStoreState((state) => state.pStore.page);\r\n  const updatePageContent = useStoreActions(\r\n    (actions) => actions.pStore.updatePageContent\r\n  );\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    slug: \"\",\r\n    subtitle: \"\",\r\n  };\r\n\r\n  //     <input type=\"submit\"  className=\"btn btn-primary\" />\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n  const eduRef = useRef();\r\n\r\n  if (!page) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  defaultValues.title = page.title;\r\n  defaultValues.subtitle = page.subtitle;\r\n  defaultValues.slug = page.slug;\r\n\r\n  const onSubmit = (data) => {\r\n    const para = {\r\n      _id: page._id,\r\n      slug: data.slug,\r\n      title: data.title,\r\n      subtitle: data.subtitle,\r\n      content: eduRef?.current,\r\n    };\r\n\r\n    console.log(para);\r\n    updatePageContent(para);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <button type=\"submit\" className=\"btn btn-light float-right \">\r\n          <MdSave />\r\n        </button>\r\n        <div className=\"form-group input-group-lg\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            id=\"title\"\r\n            className=\"form-control\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"slug\">Slug</label>\r\n          <input\r\n            id=\"slug\"\r\n            className=\"form-control\"\r\n            name=\"slug\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Subtitle</label>\r\n          <textarea\r\n            id=\"subtitle\"\r\n            rows=\"4\"\r\n            name=\"subtitle\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          {\" \"}\r\n          <label htmlFor=\"content\">Content</label>\r\n          <MarkdownEditor\r\n            id=\"content\"\r\n            val={page.content}\r\n            updatedValue={eduRef}\r\n          />{\" \"}\r\n        </div>\r\n      </form>\r\n      <FileUploader className=\"m-3\" />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PageDisplay from \"./PageDisplay\";\r\nimport PageEdit from \"./PageEdit\";\r\nimport Modal from \"react-bootstrap/modal\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\n\r\nexport default function Page() {\r\n  let { slug } = useParams();\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((state) => state.aStore.account);\r\n  const loadPage = useStoreActions((a) => a.pStore.loadPage);\r\n  const deletePage = useStoreActions((a) => a.pStore.deletePage);\r\n  const [modus, setModus] = useState(\"show\");\r\n  const [showConfirmation, setShowConfirmation] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (slug === \"NewPage\") {\r\n      setModus(\"edit\");\r\n      return;\r\n    }\r\n    loadPage(slug);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!page) {\r\n    return <div>still loading</div>;\r\n  }\r\n\r\n  const toogleEdit = () => {\r\n    if (modus === \"edit\") {\r\n      setModus(\"show\");\r\n      return;\r\n    }\r\n\r\n    setModus(\"edit\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (showConfirmation) return;\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const deleteConfirmed = () => {\r\n    deletePage(page);\r\n    setShowConfirmation(false);\r\n    history.push(\"/content\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"w-auto mt-5 \">\r\n        {user?.role === \"Admin\" ? (\r\n          <div className=\"float-right\">\r\n            {modus === \"show\" ? (\r\n              <button className=\"btn btn-light\" onClick={handleDelete}>\r\n                <MdDelete />\r\n              </button>\r\n            ) : null}\r\n\r\n            <button className=\"btn btn-light\" onClick={toogleEdit}>\r\n              <MdModeEdit />\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        {modus === \"show\" ? <PageDisplay /> : null}\r\n        {modus === \"edit\" ? <PageEdit page={page} /> : null}\r\n      </Container>\r\n      <Modal show={showConfirmation} onHide={() => setShowConfirmation(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirmation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Do you really want to delete this page?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => setShowConfirmation(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirmed}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function CommentEdit() {\r\n  const comment = useStoreState((s) => s.pStore.comment);\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const updateComment = useStoreActions((a) => a.pStore.saveComment);\r\n  const clearComment = useStoreActions((a) => a.pStore.clearComment);\r\n  const history = useHistory();\r\n\r\n  const defaultValues = {\r\n    content: comment?.content,\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const updatedComment = { ...comment, content: data.content };\r\n    updateComment(updatedComment);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    clearComment();\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n\r\n  return (\r\n    <Container className=\"w-auto mt-5 \">\r\n      <h3>Edit Comment</h3>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"content\">Comment</label>\r\n          <textarea\r\n            id=\"content\"\r\n            rows=\"4\"\r\n            name=\"content\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n        <button onClick={onCancel} className=\"btn btn-secondary ml-2 \">\r\n          Cancel{\" \"}\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Role } from \"../_helpers\";\r\nimport { Nav, PrivateRoute, Alert } from \"../_components\";\r\nimport { Home } from \"../home\";\r\nimport { Profile } from \"../profile\";\r\nimport { Admin } from \"../admin\";\r\nimport { Account } from \"../account\";\r\nimport Pages from \"../page/Pages\";\r\nimport Page from \"../page/Page\";\r\nimport CommentEdit from \"../page/CommentEdit\";\r\n\r\nfunction App() {\r\n  const { pathname } = useLocation();\r\n  const loadPages = useStoreActions((actions) => actions.pStore.loadPages);\r\n  const setAccount = useStoreActions((actions) => actions.aStore.setAccount);\r\n  const refreshToken = useStoreActions(\r\n    (actions) => actions.aStore.refreshToken\r\n  );\r\n\r\n  /*   useEffect(() => {\r\n    const subscription = accountXXXXService.user.subscribe((x) => {\r\n      setUser(x);\r\n      addAccount(x);\r\n    });\r\n    return subscription.unsubscribe;\r\n  }, []);\r\n */\r\n  useEffect(() => {\r\n    refreshToken();\r\n    loadPages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"app-container bg-light\"}>\r\n      <Nav />\r\n      <Alert />\r\n      <Switch>\r\n        <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/content\" component={Pages} />\r\n        <Route path=\"/topic/:slug\" component={Page} />\r\n\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\r\n        <Route path=\"/account\" component={Account} />\r\n        <Route path=\"/comment\" component={CommentEdit} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport { history } from \"./_helpers\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport store from \"./store\";\r\nimport { App } from \"./app\";\r\n\r\nimport \"./styles.css\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"app\")\r\n);\r\n"],"sourceRoot":""}