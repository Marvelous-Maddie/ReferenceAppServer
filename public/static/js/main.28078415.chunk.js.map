{"version":3,"sources":["_helpers/fetch-wrapper.js","_helpers/history.js","_helpers/role.js","_helpers/alerttype.js","_services/account.service.js","_services/page.service.js","_services/comment.service.js","_services/file.service.js","store/storeModel.js","store/pagesStoreModel.js","store/accountsStoreModel.js","store/alertsStoreModel.js","store/index.js","_components/Alert.js","_components/Nav.js","_components/PrivateRoute.js","home/index.js","profile/Details.js","profile/Update.js","profile/index.js","admin/Overview.js","admin/users/List.js","admin/users/AddEdit.js","admin/users/index.js","admin/index.js","account/Login.js","account/Register.js","account/VerifyEmail.js","account/ForgotPassword.js","account/ResetPassword.js","account/index.js","page/PageSummary.js","page/Pages.js","page/Comment.js","page/Comments.js","page/PageDisplay.js","page/MarkdownEditor.js","page/FileUploader.js","page/PageEdit.js","page/Page.js","page/CommentEdit.js","app/index.js","index.js"],"names":["fetchWrapper","get","url","requestOptions","method","headers","authHeader","fetch","then","handleResponse","post","body","credentials","JSON","stringify","put","delete","user","window","account","isLoggedIn","jwtToken","isApiUrl","startsWith","process","console","log","Authorization","response","text","data","parse","ok","error","message","statusText","Promise","reject","history","createBrowserHistory","Role","AlertType","baseUrl","accountService","login","email","password","logout","push","refreshToken","register","params","verifyEmail","token","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","getById","id","create","update","x","pageService","a","pages","json","page","newPage","updatedPage","pageId","res","baseUrlComment","comment","updatedComment","commentService","newComment","_id","fileService","uploadFile","formData","storeModel","pStore","addLoadedPages","action","state","createComment","content","userName","userId","createPage","title","slug","subtitle","comments","removePage","filter","p","editComment","clearComment","setPage","map","addPage","replaceComment","c","removeComment","addComment","loadPages","thunk","actions","payload","loadPage","helpers","localState","getState","smallPage","find","updatePageContent","toUpdate","deletePage","saveComment","deleteComment","aStore","accounts","editAccount","refreshTokenTimeout","addAccount","addNewAccount","setAccount","setEditAccount","replaceAccount","removeAccount","acc","setAccounts","clearAccount","refreshTheToken","refreshAction","getAllAccounts","accs","getAccountById","createAccount","newAccount","updateAccount","deleteAccount","iStore","alerts","setAlertInternal","alert","removeAlert","clear","Math","floor","random","autoClose","undefined","setTimeout","success","type","info","warn","store","createStore","Alert","fade","useStoreState","s","useStoreActions","cssClasses","classes","alertTypeClass","join","length","className","index","key","onClick","dangerouslySetInnerHTML","__html","defaultProps","Nav","apiDocPath","exact","to","href","target","role","variant","path","component","AdminNav","match","PrivateRoute","Component","roles","rest","render","props","indexOf","pathname","from","location","Home","Details","Update","alertSuccess","alertError","initialValues","validationSchema","Yup","shape","required","min","when","schema","oneOf","useState","isDeleting","setIsDeleting","onSubmit","fields","setStatus","setSubmitting","options","keepAfterRouteChange","catch","errors","touched","isSubmitting","name","disabled","confirm","style","width","Profile","Overview","List","users","useHistory","useEffect","whiteSpace","editUser","colSpan","AddEdit","isAddMode","userValues","concat","createUser","updateUser","setFieldValue","as","value","Users","Admin","Login","clearAlerts","Register","firstName","lastName","acceptTerms","VerifyEmail","EmailStatus","emailStatus","setEmailStatus","queryString","search","replace","getBody","ForgotPassword","finally","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","getForm","Account","PageSummary","Card","Body","Title","Subtitle","Pages","Container","Row","Col","Comment","Text","Comments","PageDisplay","createNewComment","source","escapeHtml","MarkdownEditor","val","updatedValue","height","onChange","e","d","v","current","FileUploader","file","setFile","filename","setFilename","preventDefault","FormData","append","encType","files","htmlFor","PageEdit","defaultValues","useForm","handleSubmit","eduRef","useRef","para","ref","rows","Page","useParams","modus","setModus","showConfirmation","setShowConfirmation","Modal","show","onHide","Header","closeButton","Footer","Button","CommentEdit","updateComment","App","useLocation","atob","split","timeout","Date","exp","getTime","now","clearTimeout","slice","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28078415.chunk.js","sourcesContent":["export const fetchWrapper = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: _delete,\r\n};\r\n\r\nfunction get(url) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction post(url, body) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction put(url, body) {\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// prefixed with underscored because delete is a reserved word in javascript\r\nfunction _delete(url) {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// helper functions\r\n\r\nfunction authHeader(url) {\r\n  /* let user;\r\n   const json = localStorage.getItem(\"account\");\r\n  console.log(json);\r\n  if (json) {\r\n    user = JSON.parse(json);\r\n    console.log(user);\r\n  } */\r\n\r\n  const user = window.account;\r\n\r\n  const isLoggedIn = user && user.jwtToken;\r\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\r\n  if (isLoggedIn && isApiUrl) {\r\n    console.log(\"Token added\");\r\n    console.log(window.account);\r\n    return { Authorization: `Bearer ${user.jwtToken}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n\r\n    if (!response.ok) {\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const Role = {\r\n    Admin: 'Admin',\r\n    User: 'User'    \r\n}","export const AlertType = {\r\n  Success: \"Success\",\r\n  Error: \"Error\",\r\n  Info: \"Info\",\r\n  Warning: \"Warning\",\r\n};\r\n","import { fetchWrapper, history } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/accounts`;\r\n\r\nexport const accountService = {\r\n  login,\r\n  logout,\r\n  refreshToken,\r\n  register,\r\n  verifyEmail,\r\n  forgotPassword,\r\n  validateResetToken,\r\n  resetPassword,\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n\r\nfunction login(email, password) {\r\n  return fetchWrapper.post(`${baseUrl}/authenticate`, { email, password });\r\n}\r\n\r\nfunction logout() {\r\n  // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\r\n  fetchWrapper.post(`${baseUrl}/revoke-token`, {});\r\n\r\n  history.push(\"/\"); // where should this go?????\r\n}\r\n\r\nfunction refreshToken() {\r\n  return fetchWrapper.post(`${baseUrl}/refresh-token`, {});\r\n}\r\n\r\nfunction register(params) {\r\n  return fetchWrapper.post(`${baseUrl}/register`, params);\r\n}\r\n\r\nfunction verifyEmail(token) {\r\n  return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\r\n}\r\n\r\nfunction forgotPassword(email) {\r\n  return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\r\n}\r\n\r\nfunction validateResetToken(token) {\r\n  return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\r\n}\r\n\r\nfunction resetPassword({ token, password, confirmPassword }) {\r\n  return fetchWrapper.post(`${baseUrl}/reset-password`, {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n  });\r\n}\r\n\r\nfunction getAll() {\r\n  return fetchWrapper.get(baseUrl);\r\n}\r\n\r\nfunction getById(id) {\r\n  return fetchWrapper.get(`${baseUrl}/${id}`);\r\n}\r\n\r\nfunction create(params) {\r\n  return fetchWrapper.post(baseUrl, params);\r\n}\r\n\r\nfunction update(id, params) {\r\n  console.log(params);\r\n  return fetchWrapper.put(`${baseUrl}/${id}`, params);\r\n}\r\n\r\n// prefixed with underscore because 'delete' is a reserved word in javascript\r\nfunction _delete(id) {\r\n  return fetchWrapper.delete(`${baseUrl}/${id}`).then((x) => {\r\n    // auto logout if the logged in user deleted their own record\r\n    /*     if (id === .value.id) {\r\n      logout();\r\n    } */\r\n    return x;\r\n  });\r\n}\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/pages`;\r\n\r\nconst getAll = async () => {\r\n  let pages = await fetch(baseUrl);\r\n  pages = await pages.json();\r\n  return pages;\r\n};\r\n\r\nconst getById = async (id) => {\r\n  let page = await fetch(baseUrl + \"/\" + id);\r\n  page = await page.json();\r\n  return page;\r\n};\r\nconst create = async (page) => {\r\n  const newPage = fetchWrapper.post(`${baseUrl}`, page);\r\n  return newPage;\r\n};\r\n\r\nconst update = async (id, page) => {\r\n  let updatedPage = await fetchWrapper.put(`${baseUrl}/${id}`, page);\r\n  return updatedPage;\r\n};\r\n\r\nconst _delete = async (pageId) => {\r\n  let res = await fetchWrapper.delete(`${baseUrl}/${pageId}`);\r\n  return res;\r\n};\r\n\r\nexport const pageService = {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrlComment = `${process.env.REACT_APP_API_URL}/comments`;\r\n\r\nconst update = async (pageId, comment) => {\r\n  let updatedComment = await fetchWrapper.put(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return updatedComment;\r\n};\r\n\r\nconst create = async (pageId, comment) => {\r\n  let newComment = await fetchWrapper.post(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return newComment;\r\n};\r\n\r\nconst _delete = async (pageId, comment) => {\r\n  let res = await fetchWrapper.delete(\r\n    `${baseUrlComment}/${pageId}/${comment._id}`\r\n  );\r\n\r\n  return res;\r\n};\r\n\r\nexport const commentService = {\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","const baseUrl = `${process.env.REACT_APP_API_URL}/files/upload`;\r\n\r\nexport const fileService = {\r\n  uploadFile: async (formData) => {\r\n    console.log(\"file upload service\");\r\n\r\n    try {\r\n      let response = await fetch(baseUrl, {\r\n        method: \"POST\",\r\n\r\n        body: formData,\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(response);\r\n      const message = '&lt;img src=\"' + response + '\" width=\"10%\" &gt;';\r\n      return message;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n","import pagesStoreModel from \"./pagesStoreModel\";\r\nimport accountStoreModel from \"./accountsStoreModel\";\r\nimport alertsStoreModel from \"./alertsStoreModel\";\r\n\r\nconst storeModel = {\r\n  pStore: pagesStoreModel,\r\n  aStore: accountStoreModel,\r\n  iStore: alertsStoreModel,\r\n};\r\n\r\nexport default storeModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { pageService } from \"../_services\";\r\nimport { commentService } from \"../_services\";\r\n\r\nconst pagesStoreModel = {\r\n  pages: [],\r\n  page: null,\r\n  comment: null,\r\n\r\n  addLoadedPages: action((state, pages) => {\r\n    state.pages = pages;\r\n  }),\r\n\r\n  createComment: action((state, user) => {\r\n    const newComment = {\r\n      content: \"\",\r\n      userName: user.userName,\r\n      userId: user.id,\r\n    };\r\n    state.comment = newComment;\r\n  }),\r\n\r\n  createPage: action((state) => {\r\n    const newPage = {\r\n      title: \"New Page Title\",\r\n      slug: \"newPage\",\r\n      subtitle: \"\",\r\n      content: \"\",\r\n      comments: [],\r\n    };\r\n    state.page = newPage;\r\n  }),\r\n\r\n  removePage: action((state, page) => {\r\n    state.pages = state.pages.filter((p) => p._id !== page._id);\r\n    state.page = null;\r\n  }),\r\n\r\n  editComment: action((state, comment) => {\r\n    state.comment = comment;\r\n  }),\r\n\r\n  clearComment: action((state) => {\r\n    state.comment = null;\r\n  }),\r\n\r\n  setPage: action((state, page) => {\r\n    state.page = page;\r\n    state.pages = state.pages.map((p) => (p._id === page._id ? page : p));\r\n  }),\r\n\r\n  addPage: action((state, page) => {\r\n    state.pages.push(page);\r\n    state.page = page;\r\n  }),\r\n\r\n  replaceComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.map((c) =>\r\n      c._id === comment._id ? comment : c\r\n    );\r\n  }),\r\n\r\n  removeComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.filter(\r\n      (c) => c._id !== comment._id\r\n    );\r\n  }),\r\n\r\n  addComment: action((state, comment) => {\r\n    state.page.comments.push(comment);\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  loadPages: thunk(async (actions, payload) => {\r\n    const pages = await pageService.getAll();\r\n    actions.addLoadedPages(pages);\r\n  }),\r\n\r\n  loadPage: thunk(async (actions, slug, helpers) => {\r\n    const localState = helpers.getState();\r\n    /*     if (localState.cachedPages.has(slug)) {\r\n      console.log(\"using Cached version\");\r\n      actions.setPage(localState.cachedPages.get(slug));\r\n      return;\r\n    } */\r\n\r\n    const smallPage = localState.pages.find((p) => p.slug === slug);\r\n\r\n    if (!smallPage) return;\r\n    const page = await pageService.getById(smallPage._id);\r\n    actions.setPage(page);\r\n  }),\r\n\r\n  updatePageContent: thunk(async (actions, payload, helpers) => {\r\n    const { _id, slug, title, subtitle, content } = payload;\r\n    const toUpdate = {\r\n      slug,\r\n      title,\r\n      subtitle,\r\n      content,\r\n    };\r\n\r\n    if (_id) {\r\n      // this is an update\r\n      const updatedPage = await pageService.update(_id, toUpdate);\r\n      actions.setPage(updatedPage);\r\n    } else {\r\n      const newPage = await pageService.create(toUpdate);\r\n      actions.addPage(newPage);\r\n    }\r\n  }),\r\n\r\n  deletePage: thunk(async (actions, page, helpers) => {\r\n    if (page._id) {\r\n      await pageService.delete(page._id);\r\n      actions.removePage(page);\r\n    }\r\n  }),\r\n\r\n  saveComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    console.log(comment);\r\n    if (comment._id) {\r\n      // this is an update\r\n      console.log(localState.page._id);\r\n      const updatedComment = await commentService.update(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n      actions.replaceComment(updatedComment);\r\n    } else {\r\n      const updatedComment = await commentService.create(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n\r\n      actions.addComment(updatedComment);\r\n    }\r\n  }),\r\n\r\n  deleteComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    if (comment._id) {\r\n      await commentService.delete(localState.page._id, comment);\r\n      actions.removeComment(comment);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default pagesStoreModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { accountService } from \"../_services\";\r\n\r\nconst accountsStoreModels = {\r\n  accounts: [],\r\n  account: null,\r\n  editAccount: null,\r\n  refreshTokenTimeout: null,\r\n  refreshToken: null,\r\n\r\n  // Actions\r\n\r\n  addAccount: action((state, account) => {\r\n    state.account = account;\r\n    state.refreshToken = account?.jwtToken;\r\n    //localStorage.setItem(\"account\", JSON.stringify(account));\r\n    window.account = account;\r\n  }),\r\n\r\n  addNewAccount: action((state, account) => {\r\n    state.accounts.push(account);\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setAccount: action((state, account) => {\r\n    console.log(\"Account\", account);\r\n    //localStorage.setItem(\"account\", JSON.stringify(account));\r\n    state.account = account;\r\n    state.refreshToken = account?.jwtToken;\r\n    state.editAccount = account;\r\n    window.account = account;\r\n  }),\r\n\r\n  setEditAccount: action((state, account) => {\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  replaceAccount: action((state, account) => {\r\n    state.accounts = state.accounts.map((a) =>\r\n      a.id === account.id || !a.id ? account : a\r\n    );\r\n    if (state.account.id === account.id || !state.account.id) {\r\n      state.account = account;\r\n      state.refreshToken = account?.jwtToken;\r\n      state.editAccount = account;\r\n    }\r\n  }),\r\n\r\n  removeAccount: action((state, id) => {\r\n    const acc = state.accounts.filter((a) => a.id !== id);\r\n    if (state.account.id === id) {\r\n      state.account = acc;\r\n      state.editAccount = acc;\r\n    }\r\n  }),\r\n\r\n  setAccounts: action((state, accounts) => {\r\n    state.accounts = accounts;\r\n  }),\r\n\r\n  clearAccount: action((state) => {\r\n    //localStorage.setItem(\"account\", JSON.stringify({}));\r\n    state.account = null;\r\n    state.refreshToken = null;\r\n    window.account = null;\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  login: thunk(async (actions, payload) => {\r\n    const { email, password } = payload;\r\n    console.log(email);\r\n    const acc = await accountService.login(email, password);\r\n    actions.setAccount(acc);\r\n  }),\r\n\r\n  logout: thunk(async (actions) => {\r\n    await accountService.logout();\r\n    actions.clearAccount();\r\n  }),\r\n\r\n  refreshTheToken: thunk(async (actions, refreshAction) => {\r\n    const acc = await accountService.refreshToken();\r\n    actions.setAccount(acc);\r\n  }),\r\n\r\n  register: thunk(async (actions, payload) => {\r\n    await accountService.register(payload);\r\n  }),\r\n\r\n  verifyEmail: thunk(async (actions, token) => {\r\n    await accountService.verifyEmail(token);\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, email) => {\r\n    await accountService.forgotPassword(email);\r\n  }),\r\n\r\n  validateResetToken: thunk(async (actions, token) => {\r\n    await accountService.validateResetToken(token);\r\n  }),\r\n\r\n  resetPassword: thunk(async (actions, payload) => {\r\n    const { token, password, confirmPassword } = payload;\r\n    await accountService.resetPassword(token, password, confirmPassword);\r\n  }),\r\n\r\n  getAllAccounts: thunk(async (actions) => {\r\n    const accs = await accountService.getAll();\r\n    actions.setAccounts(accs);\r\n  }),\r\n\r\n  getAccountById: thunk(async (actions, id) => {\r\n    const acc = await accountService.getById(id);\r\n    actions.setEditAccount(acc);\r\n  }),\r\n\r\n  createAccount: thunk(async (actions, newAccount) => {\r\n    console.log(newAccount);\r\n    const acc = await accountService.create(newAccount);\r\n    console.log(acc);\r\n    actions.addNewAccount(acc);\r\n  }),\r\n\r\n  updateAccount: thunk(async (actions, payload) => {\r\n    const { id, params } = payload;\r\n    const acc = await accountService.update(id, params);\r\n    actions.replaceAccount(acc);\r\n  }),\r\n\r\n  deleteAccount: thunk(async (actions, id) => {\r\n    await accountService.delete(id);\r\n    actions.removeAccount(id);\r\n  }),\r\n};\r\n\r\nexport default accountsStoreModels;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst alertsStoreModel = {\r\n  alerts: [],\r\n\r\n  // Actions\r\n\r\n  setAlertInternal: action((state, alert) => {\r\n    state.alerts.push(alert);\r\n  }),\r\n\r\n  removeAlert: action((state, alert) => {\r\n    state.alerts = state.alerts.filter((x) => x.id !== alert.id);\r\n  }),\r\n\r\n  clear: action((state) => {\r\n    state.alerts = [];\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  alert: thunk(async (actions, alert) => {\r\n    alert.id = Math.floor(Math.random() * 10000);\r\n    alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\r\n    actions.setAlertInternal(alert);\r\n    if (alert.autoClose) {\r\n      setTimeout(() => actions.removeAlert(alert), 3500);\r\n    }\r\n  }),\r\n\r\n  success: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Success;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  error: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Error;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  info: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Info;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  warn: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Warning;\r\n    await actions.alert(alert);\r\n  }),\r\n};\r\n\r\nexport default alertsStoreModel;\r\n","import { createStore } from \"easy-peasy\";\r\nimport storeModel from \"./storeModel\";\r\n\r\nconst store = createStore(storeModel);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  fade: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"default-alert\",\r\n  fade: true,\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n  const alerts = useStoreState((s) => s.iStore.alerts);\r\n  const removeAlert = useStoreActions((a) => a.iStore.removeAlert);\r\n\r\n  function cssClasses(alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n\r\n  if (!alerts.length) return null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"m-3\">\r\n        {alerts.map((alert, index) => (\r\n          <div key={index} className={cssClasses(alert)}>\r\n            <button className=\"close\" onClick={() => removeAlert(alert)}>\r\n              &times;\r\n            </button>\r\n            <span dangerouslySetInnerHTML={{ __html: alert.message }}></span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };\r\n","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { history, Role } from \"../_helpers\";\r\n\r\nfunction Nav() {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const logout = useStoreActions((a) => a.aStore.logout);\r\n  const apiDocPath = `${process.env.REACT_APP_API_URL}/api/api-docs`;\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-info larger\">\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <NavLink exact to=\"/\" className=\"nav-item nav-link\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/content\" className=\"nav-item nav-link\">\r\n            Documentation\r\n          </NavLink>\r\n          <a className=\"nav-item nav-link\" href={apiDocPath} target=\"_blank\">\r\n            API-Documentation\r\n          </a>\r\n          <NavLink to=\"/profile\" className=\"nav-item nav-link\">\r\n            Profile\r\n          </NavLink>\r\n          {user && user.role === Role.Admin && (\r\n            <NavLink to=\"/admin\" className=\"nav-item nav-link\">\r\n              Admin\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n        <div className=\"navbar-nav ml-auto\">\r\n          {user && (\r\n            <span className=\"navbar-text mr-4\">User: {user.userName}</span>\r\n          )}\r\n          {user && (\r\n            <a onClick={() => logout()} className=\"nav-item nav-link \">\r\n              Logout\r\n            </a>\r\n          )}\r\n          {!user && (\r\n            <a\r\n              className=\"nav-item nav-link\"\r\n              onClick={() => history.push(\"/account/login\")}\r\n              variant=\"outline-success\"\r\n            >\r\n              Login\r\n            </a>\r\n          )}\r\n        </div>\r\n      </nav>\r\n\r\n      <Route path=\"/admin\" component={AdminNav} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AdminNav({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <nav className=\"admin-nav navbar navbar-expand navbar-light\">\r\n      <div className=\"navbar-nav\">\r\n        <NavLink to={`${path}/users`} className=\"nav-item nav-link\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport { Nav };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n  const account = useStoreState((s) => s.aStore.account);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(\"Private Route\");\r\n        if (!account) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/account/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n          //return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (roles && roles.indexOf(account.role) === -1) {\r\n          // role not authorized so redirect to home page\r\n          return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // authorized so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"m-4\">\r\n      <div className=\"container\">\r\n        <h1 className=\"mb-4  display-4\">Reference App MERN-Stack</h1>\r\n        <h3>A simple app to manage technical documentation.</h3>\r\n        <div className=\"larger\">\r\n          <p>\r\n            It is the purpose of this application to be used as a correct and\r\n            well coded example of the implementation of a CRUD application with\r\n            autherization and messaging system.\r\n          </p>\r\n          <p>\r\n            If your are building an app you can always go to this app an find a\r\n            good and working implementation of the basic functionality needed to\r\n            build such an app.\r\n          </p>\r\n        </div>\r\n\r\n        <h3>Functionality of the App</h3>\r\n        <ul className=\"larger feature\">\r\n          <li>\r\n            The documentation pages can be entered in the markdown syntax, which\r\n            supports many formatting options including including pictures in the\r\n            documents. Pictures can be uploaded and included into the\r\n            documentation.\r\n          </li>\r\n          <li>\r\n            The authorization includes login, sign-up, email verification,\r\n            password reset, user-roles, user can edit their profile and an\r\n            administrator can add, edit and delete all the users.\r\n          </li>\r\n          <li>\r\n            The application is built on the Redux pattern and uses Easy-Peasy to\r\n            implement it\r\n          </li>\r\n          <li>For each documentation page the users can leave comments.</li>\r\n          <li>\r\n            A User can view all the pages even when he is not logged in. A user\r\n            must me logged in to leave a comment.\r\n          </li>\r\n          <li>\r\n            A user can edit and/or delete his comments but can not edit or\r\n            delete comments made by other users\r\n          </li>\r\n          <li>\r\n            Pages can be added, edited and deleted only by users who belong to\r\n            the admin group.\r\n          </li>\r\n          <li>\r\n            Pages can be added, edited and deleted only by users who belong to\r\n            the admin group.\r\n          </li>\r\n          <li>\r\n            An administrator can edit and delete comments even if they were made\r\n            by another user.\r\n          </li>\r\n          <li>\r\n            The swagger documentation of the underlying api can be accessed via\r\n            the menu.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Home };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction Details({ match }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Profile</h1>\r\n      <p>\r\n        <strong>Name: </strong> {user.userName}\r\n        <br />\r\n        <strong>Email: </strong> {user.email}\r\n      </p>\r\n      <p>\r\n        <Link to={`${path}/update`}>Update Profile</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Details };\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Update({ history }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const initialValues = {\r\n    userName: user.userName,\r\n    email: user.email,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string().min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) return schema.required(\"Confirm Password is required\");\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    console.log(user.id);\r\n    console.log(fields);\r\n    update({ id: user.id, params: fields })\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          options: { keepAfterRouteChange: true },\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  function onDelete() {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      setIsDeleting(true);\r\n\r\n      deleteAccount(user.id).then(() =>\r\n        alertSuccess(\"Account deleted successfully\")\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h1>Update Profile</h1>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Username</label>\r\n              <Field\r\n                name=\"userName\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.userName && touched.userName ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"userName\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <Field\r\n              name=\"email\"\r\n              type=\"text\"\r\n              className={\r\n                \"form-control\" +\r\n                (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n              }\r\n            />\r\n            <ErrorMessage\r\n              name=\"email\"\r\n              component=\"div\"\r\n              className=\"invalid-feedback\"\r\n            />\r\n          </div>\r\n          <h3 className=\"pt-3\">Change Password</h3>\r\n          <p>Leave blank to keep the same password</p>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group col\">\r\n              <label>Confirm Password</label>\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.confirmPassword && touched.confirmPassword\r\n                    ? \" is-invalid\"\r\n                    : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"confirmPassword\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"btn btn-primary mr-2\"\r\n            >\r\n              {isSubmitting && (\r\n                <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n              )}\r\n              Update\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDelete()}\r\n              className=\"btn btn-danger\"\r\n              style={{ width: \"75px\" }}\r\n              disabled={isDeleting}\r\n            >\r\n              {isDeleting ? (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              ) : (\r\n                <span>Delete</span>\r\n              )}\r\n            </button>\r\n            <Link to=\".\" className=\"btn btn-link\">\r\n              Cancel\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { Update };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { Details } from './Details';\r\nimport { Update } from './Update';\r\n\r\nfunction Profile({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <div className=\"p-4\">\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path={path} component={Details} />\r\n                    <Route path={`${path}/update`} component={Update} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Profile };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Overview({ match }) {\r\n    const { path } = match;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin</h1>\r\n            <p>This section can only be accessed by administrators.</p>\r\n            <p><Link to={`${path}/users`}>Manage Users</Link></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Overview };","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction List({ match }) {\r\n  const users = useStoreState((s) => s.aStore.accounts);\r\n  const getAllAccounts = useStoreActions((a) => a.aStore.getAllAccounts);\r\n  const setEditAccount = useStoreActions((a) => a.aStore.setEditAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const { path } = match;\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAllAccounts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function deleteUser(id) {\r\n    deleteAccount(id);\r\n  }\r\n\r\n  function editUser(user) {\r\n    setEditAccount(user);\r\n    history.push(`${path}/edit/${user.id}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <p>All users from secure (admin only) api end point:</p>\r\n      <Link to={`${path}/add`} className=\"btn btn-sm btn-success mb-2\">\r\n        Add User\r\n      </Link>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"30%\" }}>Username</th>\r\n            <th style={{ width: \"30%\" }}>Email</th>\r\n            <th style={{ width: \"30%\" }}>Role</th>\r\n            <th style={{ width: \"10%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users &&\r\n            users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.userName}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.role}</td>\r\n                <td style={{ whiteSpace: \"nowrap\" }}>\r\n                  <button\r\n                    onClick={() => editUser(user)}\r\n                    style={{ width: \"60px\" }}\r\n                    className=\"btn btn-sm btn-primary mr-1\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => deleteUser(user.id)}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    style={{ width: \"60px\" }}\r\n                    disabled={user.isDeleting}\r\n                  >\r\n                    {user.isDeleting ? (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    ) : (\r\n                      <span>Delete</span>\r\n                    )}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          {!users && (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">\r\n                <span className=\"spinner-border spinner-border-lg align-center\"></span>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { List };\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction AddEdit({ history, match }) {\r\n  const user = useStoreState((s) => s.aStore.editAccount);\r\n  const create = useStoreActions((a) => a.aStore.createAccount);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const getById = useStoreActions((a) => a.aStore.getAccountById);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const id = match.params.id;\r\n  const isAddMode = !id;\r\n\r\n  useEffect(() => {\r\n    if (!isAddMode) {\r\n      getById(id);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const emptyValues = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const userValues = {\r\n    userName: user?.userName,\r\n    email: user?.email,\r\n    role: user?.role,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const initialValues = isAddMode ? emptyValues : userValues;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    role: Yup.string().required(\"Role is required\"),\r\n    password: Yup.string()\r\n      .concat(isAddMode ? Yup.string().required(\"Password is required\") : null)\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) return schema.required(\"Confirm Password is required\");\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    if (isAddMode) {\r\n      createUser(fields, setSubmitting);\r\n    } else {\r\n      updateUser(id, fields, setSubmitting);\r\n    }\r\n  }\r\n\r\n  function createUser(fields, setSubmitting) {\r\n    create(fields)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"User added successfully\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  function updateUser(id, fields, setSubmitting) {\r\n    update({ id: id, params: fields })\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"..\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting, setFieldValue }) => {\r\n        return (\r\n          <Form>\r\n            <h1>{isAddMode ? \"Add User\" : \"Edit User\"}</h1>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>User Name</label>\r\n                <Field\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.userName && touched.userName ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"userName\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-7\">\r\n                <label>Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Role</label>\r\n                <Field\r\n                  name=\"role\"\r\n                  as=\"select\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.role && touched.role ? \" is-invalid\" : \"\")\r\n                  }\r\n                >\r\n                  <option value=\"\"></option>\r\n                  <option value=\"User\">User</option>\r\n                  <option value=\"Admin\">Admin</option>\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"role\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {!isAddMode && (\r\n              <div>\r\n                <h3 className=\"pt-3\">Change Password</h3>\r\n                <p>Leave blank to keep the same password</p>\r\n              </div>\r\n            )}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Confirm Password</label>\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.confirmPassword && touched.confirmPassword\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"confirmPassword\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {isSubmitting && (\r\n                  <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                )}\r\n                Save\r\n              </button>\r\n              <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\r\n                Cancel\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { AddEdit };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { List } from './List';\r\nimport { AddEdit } from './AddEdit';\r\n\r\nfunction Users({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={path} component={List} />\r\n            <Route path={`${path}/add`} component={AddEdit} />\r\n            <Route path={`${path}/edit/:id`} component={AddEdit} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport { Users };","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Overview } from \"./Overview\";\r\nimport { Users } from \"./users\";\r\n\r\nfunction Admin({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path={path} component={Overview} />\r\n          <Route path={`${path}/users`} component={Users} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Admin };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Login({ history, location }) {\r\n  const login = useStoreActions((a) => a.aStore.login);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  function onSubmit({ email, password }, { setSubmitting }) {\r\n    clearAlerts();\r\n    console.log(email);\r\n    login({ email, password })\r\n      .then(() => {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        history.push(from);\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h3 className=\"card-header\">Login</h3>\r\n          <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isSubmitting && (\r\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  )}\r\n                  Login\r\n                </button>\r\n                <Link to=\"register\" className=\"btn btn-link\">\r\n                  Register\r\n                </Link>\r\n              </div>\r\n              <div className=\"form-group col text-right\">\r\n                <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Register({ history }) {\r\n  const register = useStoreActions((a) => a.aStore.register);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    acceptTerms: false,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    register(fields)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message:\r\n            \"Registration successful, please check your email for verification instructions\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h3 className=\"card-header\">Register</h3>\r\n          <div className=\"card-body\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Username</label>\r\n                <Field\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.userName && touched.userName ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"userName\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label>Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Confirm Password</label>\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.confirmPassword && touched.confirmPassword\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"confirmPassword\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {isSubmitting && (\r\n                  <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                )}\r\n                Register\r\n              </button>\r\n              <Link to=\"login\" className=\"btn btn-link\">\r\n                Cancel\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { Register };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction VerifyEmail({ history }) {\r\n  const verifyEmail = useStoreActions((a) => a.aStore.verifyEmail);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const EmailStatus = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n  };\r\n\r\n  const [emailStatus, setEmailStatus] = useState(EmailStatus.Verifying);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    verifyEmail(token)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Verification successful, you can now login\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch(() => {\r\n        setEmailStatus(EmailStatus.Failed);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function getBody() {\r\n    switch (emailStatus) {\r\n      case EmailStatus.Verifying:\r\n        return <div>Verifying...</div>;\r\n      case EmailStatus.Failed:\r\n        return (\r\n          <div>\r\n            Verification failed, you can also verify your account using the{\" \"}\r\n            <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Verify Email</h3>\r\n      <div className=\"card-body\">{getBody()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { VerifyEmail };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction ForgotPassword() {\r\n  const forgotPassword = useStoreActions((a) => a.aStore.forgotPassword);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  });\r\n\r\n  function onSubmit({ email }, { setSubmitting }) {\r\n    clearAlerts();\r\n    forgotPassword(email)\r\n      .then(() =>\r\n        alertSuccess({\r\n          message: \"Please check your email for password reset instructions\",\r\n        })\r\n      )\r\n      .catch((error) => alertError({ message: error }))\r\n      .finally(() => setSubmitting(false));\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched, isSubmitting }) => (\r\n        <Form>\r\n          <h3 className=\"card-header\">Forgot Password</h3>\r\n          <div className=\"card-body\">\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isSubmitting && (\r\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  )}\r\n                  Submit\r\n                </button>\r\n                <Link to=\"login\" className=\"btn btn-link\">\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport { ForgotPassword };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction ResetPassword({ history }) {\r\n  const validateResetToken = useStoreActions(\r\n    (a) => a.aStore.validateResetToken\r\n  );\r\n\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const resetPassword = useStoreActions((a) => a.aStore.resetPassword);\r\n  const TokenStatus = {\r\n    Validating: \"Validating\",\r\n    Valid: \"Valid\",\r\n    Invalid: \"Invalid\",\r\n  };\r\n\r\n  const [token, setToken] = useState(null);\r\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    validateResetToken(token)\r\n      .then(() => {\r\n        setToken(token);\r\n        setTokenStatus(TokenStatus.Valid);\r\n      })\r\n      .catch(() => {\r\n        setTokenStatus(TokenStatus.Invalid);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function getForm() {\r\n    const initialValues = {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n      password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm Password is required\"),\r\n    });\r\n\r\n    function onSubmit({ password, confirmPassword }, { setSubmitting }) {\r\n      clearAlerts();\r\n      resetPassword({ token, password, confirmPassword })\r\n        .then(() => {\r\n          alertSuccess({\r\n            message: \"Password reset successful, you can now login\",\r\n            options: { keepAfterRouteChange: true },\r\n          });\r\n          history.push(\"login\");\r\n        })\r\n        .catch((error) => {\r\n          setSubmitting(false);\r\n          alertError({ message: error });\r\n        });\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ errors, touched, isSubmitting }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Confirm Password</label>\r\n              <Field\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.confirmPassword && touched.confirmPassword\r\n                    ? \" is-invalid\"\r\n                    : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"confirmPassword\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isSubmitting && (\r\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  )}\r\n                  Reset Password\r\n                </button>\r\n                <Link to=\"/login\" className=\"btn btn-link\">\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n\r\n  function getBody() {\r\n    switch (tokenStatus) {\r\n      case TokenStatus.Valid:\r\n        return getForm();\r\n      case TokenStatus.Invalid:\r\n        return (\r\n          <div>\r\n            Token validation failed, if the token has expired you can get a new\r\n            one at the <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      case TokenStatus.Validating:\r\n        return <div>Validating token...</div>;\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Reset Password</h3>\r\n      <div className=\"card-body\">{getBody()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ResetPassword };\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nimport { Login } from \"./Login\";\r\nimport { Register } from \"./Register\";\r\nimport { VerifyEmail } from \"./VerifyEmail\";\r\nimport { ForgotPassword } from \"./ForgotPassword\";\r\nimport { ResetPassword } from \"./ResetPassword\";\r\n\r\nfunction Account({ history, match }) {\r\n  const { path } = match;\r\n  const account = useStoreState((s) => s.aStore.account);\r\n\r\n  useEffect(() => {\r\n    // redirect to home if already logged in\r\n    if (account) {\r\n      history.push(\"/\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8 offset-sm-2 mt-5\">\r\n          <div className=\"card m-3\">\r\n            <Switch>\r\n              <Route path={`${path}/login`} component={Login} />\r\n              <Route path={`${path}/register`} component={Register} />\r\n              <Route path={`${path}/verify-email`} component={VerifyEmail} />\r\n              <Route\r\n                path={`${path}/forgot-password`}\r\n                component={ForgotPassword}\r\n              />\r\n              <Route\r\n                path={`${path}/reset-password`}\r\n                component={ResetPassword}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Account };\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function PageSummary({ page }) {\r\n  const history = useHistory();\r\n  console.log(page);\r\n\r\n  return (\r\n    <Card\r\n      className=\"mb-3 mx-5 p-3\"\r\n      onClick={() => history.push(\"/topic/\" + page.slug)}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{page.title}</Card.Title>\r\n        <Card.Subtitle>{page.subtitle}</Card.Subtitle>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport PageSummary from \"./PageSummary\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Pages() {\r\n  const pages = useStoreState((s) => s.pStore.pages);\r\n  const createPage = useStoreActions((a) => a.pStore.createPage);\r\n  const history = useHistory();\r\n\r\n  const addPageHandler = () => {\r\n    createPage();\r\n    history.push(\"/topic/newPage\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"float-right btn btn-light\" onClick={addPageHandler}>\r\n        <MdAdd />\r\n      </button>\r\n      <Container className=\"w-auto mt-5 \">\r\n        <h2 className=\"mb-3 ml-5\">Documentation</h2>\r\n        {pages.map((p) => (\r\n          <Row key={p._id}>\r\n            <Col>\r\n              <PageSummary page={p} />\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function Comment({ data }) {\r\n  const history = useHistory();\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const editComment = useStoreActions((a) => a.pStore.editComment);\r\n  const deleteComment = useStoreActions((a) => a.pStore.deleteComment);\r\n\r\n  const handleEdit = () => {\r\n    editComment(data);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteComment(data);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <Card.Title>Comment by {data.userName}</Card.Title>\r\n        <Card.Text>{data.content}</Card.Text>\r\n        {user && (user.id === data.userId || user.role === \"Admin\") ? (\r\n          <div className=\"float-right\">\r\n            <button className=\"btn btn-light\" onClick={handleEdit}>\r\n              <MdModeEdit />\r\n            </button>{\" \"}\r\n            <button className=\"btn btn-light\" onClick={handleDelete}>\r\n              <MdDelete />\r\n            </button>{\" \"}\r\n          </div>\r\n        ) : null}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function Comments({ comments } = []) {\r\n  return (\r\n    <>\r\n      {comments.map((c) => (\r\n        <Comment key={c._id} data={c} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Comments from \"../page/Comments\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function PageDisplay() {\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const createNewComment = useStoreActions((a) => a.pStore.createComment);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCommentHandler = () => {\r\n    createNewComment(user);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{page.title}</h2>\r\n\r\n      <ReactMarkdown\r\n        source={page.content}\r\n        escapeHtml={false}\r\n        className=\"mb-4\"\r\n      />\r\n      <div className=\"mt-5\"></div>\r\n      <hr className=\"mt-3 mb-3\" />\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h4 className=\"mt-5\">Comments</h4>\r\n          </Col>\r\n          {user ? (\r\n            <Col>\r\n              <button\r\n                className=\"float-right btn btn-light\"\r\n                onClick={addCommentHandler}\r\n              >\r\n                <MdAdd />\r\n              </button>\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n      </div>\r\n\r\n      <Comments\r\n        className=\"float-none\"\r\n        comments={page.comments ? page.comments : []}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MarkdownEditor2 from \"@uiw/react-markdown-editor\";\r\n\r\nexport default function MarkdownEditor({ val, updatedValue }) {\r\n  const updateMarkdown = (e, d, v) => {\r\n    updatedValue.current = v;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MarkdownEditor2 value={val} height=\"300\" onChange={updateMarkdown} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { fileService } from \"../_services\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nexport const FileUploader = () => {\r\n  const [file, setFile] = useState();\r\n  const [filename, setFilename] = useState(\"Choose image to upload\");\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    console.log(formData);\r\n    const message = await fileService.uploadFile(formData);\r\n    alertSuccess({ message: message, autoClose: false });\r\n    setFilename(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n      <div className=\"custom-file \">\r\n        <input\r\n          type=\"file\"\r\n          className=\"custom-file-input\"\r\n          id=\"customFile\"\r\n          onChange={onChange}\r\n        />\r\n        <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n          {filename}\r\n        </label>\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Upload\"\r\n        className=\"btn,  btn-light btn-block mt-3  float-left\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport MarkdownEditor from \"./MarkdownEditor\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { FileUploader } from \"./FileUploader\";\r\n\r\nexport default function PageEdit({ page }) {\r\n  //const page = useStoreState((state) => state.pStore.page);\r\n  const updatePageContent = useStoreActions(\r\n    (actions) => actions.pStore.updatePageContent\r\n  );\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    slug: \"\",\r\n    subtitle: \"\",\r\n  };\r\n\r\n  //     <input type=\"submit\"  className=\"btn btn-primary\" />\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n  const eduRef = useRef();\r\n\r\n  if (!page) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  defaultValues.title = page.title;\r\n  defaultValues.subtitle = page.subtitle;\r\n  defaultValues.slug = page.slug;\r\n\r\n  const onSubmit = (data) => {\r\n    const para = {\r\n      _id: page._id,\r\n      slug: data.slug,\r\n      title: data.title,\r\n      subtitle: data.subtitle,\r\n      content: eduRef?.current,\r\n    };\r\n\r\n    console.log(para);\r\n    updatePageContent(para);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <button type=\"submit\" className=\"btn btn-light float-right \">\r\n          <MdSave />\r\n        </button>\r\n        <div className=\"form-group input-group-lg\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            id=\"title\"\r\n            className=\"form-control\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"slug\">Slug</label>\r\n          <input\r\n            id=\"slug\"\r\n            className=\"form-control\"\r\n            name=\"slug\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Subtitle</label>\r\n          <textarea\r\n            id=\"subtitle\"\r\n            rows=\"4\"\r\n            name=\"subtitle\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          {\" \"}\r\n          <label htmlFor=\"content\">Content</label>\r\n          <MarkdownEditor\r\n            id=\"content\"\r\n            val={page.content}\r\n            updatedValue={eduRef}\r\n          />{\" \"}\r\n        </div>\r\n      </form>\r\n      <FileUploader className=\"m-3\" />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PageDisplay from \"./PageDisplay\";\r\nimport PageEdit from \"./PageEdit\";\r\nimport Modal from \"react-bootstrap/modal\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\n\r\nexport default function Page() {\r\n  let { slug } = useParams();\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((state) => state.aStore.account);\r\n  const loadPage = useStoreActions((a) => a.pStore.loadPage);\r\n  const deletePage = useStoreActions((a) => a.pStore.deletePage);\r\n  const [modus, setModus] = useState(\"show\");\r\n  const [showConfirmation, setShowConfirmation] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (slug === \"NewPage\") {\r\n      setModus(\"edit\");\r\n      return;\r\n    }\r\n    loadPage(slug);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!page) {\r\n    return <div>still loading</div>;\r\n  }\r\n\r\n  const toogleEdit = () => {\r\n    if (modus === \"edit\") {\r\n      setModus(\"show\");\r\n      return;\r\n    }\r\n\r\n    setModus(\"edit\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (showConfirmation) return;\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const deleteConfirmed = () => {\r\n    deletePage(page);\r\n    setShowConfirmation(false);\r\n    history.push(\"/content\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"w-auto mt-5 \">\r\n        {user?.role === \"Admin\" ? (\r\n          <div className=\"float-right\">\r\n            {modus === \"show\" ? (\r\n              <button className=\"btn btn-light\" onClick={handleDelete}>\r\n                <MdDelete />\r\n              </button>\r\n            ) : null}\r\n\r\n            <button className=\"btn btn-light\" onClick={toogleEdit}>\r\n              <MdModeEdit />\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        {modus === \"show\" ? <PageDisplay /> : null}\r\n        {modus === \"edit\" ? <PageEdit page={page} /> : null}\r\n      </Container>\r\n      <Modal show={showConfirmation} onHide={() => setShowConfirmation(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirmation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Do you really want to delete this page?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => setShowConfirmation(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirmed}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function CommentEdit() {\r\n  const comment = useStoreState((s) => s.pStore.comment);\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const updateComment = useStoreActions((a) => a.pStore.saveComment);\r\n  const clearComment = useStoreActions((a) => a.pStore.clearComment);\r\n  const history = useHistory();\r\n\r\n  const defaultValues = {\r\n    content: comment?.content,\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const updatedComment = { ...comment, content: data.content };\r\n    updateComment(updatedComment);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    clearComment();\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n\r\n  return (\r\n    <Container className=\"w-auto mt-5 \">\r\n      <h3>Edit Comment</h3>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"content\">Comment</label>\r\n          <textarea\r\n            id=\"content\"\r\n            rows=\"4\"\r\n            name=\"content\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n        <button onClick={onCancel} className=\"btn btn-secondary ml-2 \">\r\n          Cancel{\" \"}\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport { Role } from \"../_helpers\";\r\nimport { Nav, PrivateRoute, Alert } from \"../_components\";\r\nimport { Home } from \"../home\";\r\nimport { Profile } from \"../profile\";\r\nimport { Admin } from \"../admin\";\r\nimport { Account } from \"../account\";\r\nimport Pages from \"../page/Pages\";\r\nimport Page from \"../page/Page\";\r\nimport CommentEdit from \"../page/CommentEdit\";\r\n\r\nfunction App() {\r\n  const { pathname } = useLocation();\r\n  const loadPages = useStoreActions((a) => a.pStore.loadPages);\r\n  const refreshToken = useStoreState((s) => s.aStore.refreshToken);\r\n  const refreshTheToken = useStoreActions((a) => a.aStore.refreshTheToken);\r\n\r\n  useEffect(() => {\r\n    let refreshTokenTimeout;\r\n    if (refreshToken) {\r\n      const jwtToken = JSON.parse(atob(refreshToken.split(\".\")[1]));\r\n\r\n      const expires = new Date(jwtToken.exp * 1000);\r\n      const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n\r\n      refreshTokenTimeout = setTimeout(() => {\r\n        refreshTheToken();\r\n      }, timeout);\r\n    }\r\n    return () => clearTimeout(refreshTokenTimeout);\r\n  }, [refreshToken, refreshTheToken]);\r\n\r\n  useEffect(() => {\r\n    refreshTheToken();\r\n    loadPages();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"app-container bg-light\"}>\r\n      <Nav />\r\n      <Alert />\r\n      <Switch>\r\n        <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/content\" component={Pages} />\r\n        <Route path=\"/topic/:slug\" component={Page} />\r\n\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\r\n        <Route path=\"/account\" component={Account} />\r\n        <Route path=\"/comment\" component={CommentEdit} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport { history } from \"./_helpers\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport store from \"./store\";\r\nimport { App } from \"./app\";\r\n\r\nimport \"./styles.css\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"app\")\r\n);\r\n"],"sourceRoot":""}