{"version":3,"sources":["_helpers/fetch-wrapper.js","_helpers/history.js","_helpers/role.js","_helpers/alerttype.js","_services/account.service.js","_services/page.service.js","_services/comment.service.js","_services/file.service.js","store/storeModel.js","store/pagesStoreModel.js","store/accountsStoreModel.js","store/alertsStoreModel.js","store/index.js","_components/Alert.js","_components/Nav.js","_components/PrivateRoute.js","_components/InputControls.js","home/index.js","profile/Details.js","profile/Update.js","profile/index.js","admin/Overview.js","admin/users/List.js","admin/users/AddEdit.js","admin/users/index.js","admin/index.js","account/Login.js","account/Register.js","account/VerifyEmail.js","account/ForgotPassword.js","account/ResetPassword.js","account/index.js","page/PageSummary.js","page/Pages.js","page/Comment.js","page/Comments.js","page/PageDisplay.js","page/MarkdownEditor.js","page/FileUploader.js","page/PageEdit.js","page/Page.js","page/CommentEdit.js","app/index.js","index.js"],"names":["token","fetchWrapper","get","url","requestOptions","method","headers","authHeader","fetch","then","handleResponse","post","body","credentials","JSON","stringify","put","delete","setToken","jwtToken","isApiUrl","startsWith","process","Authorization","response","text","data","parse","ok","error","message","statusText","Promise","reject","history","createBrowserHistory","Role","AlertType","baseUrl","accountService","login","email","password","logout","push","refreshToken","register","params","verifyEmail","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","getById","id","create","update","console","log","x","pageService","a","pages","json","page","newPage","updatedPage","pageId","res","baseUrlComment","comment","updatedComment","commentService","newComment","_id","fileService","uploadFile","formData","storeModel","pStore","addLoadedPages","action","state","createComment","user","content","userName","userId","createPage","account","title","slug","subtitle","ownerId","ownerName","comments","removePage","filter","p","editComment","clearComment","setPage","map","addPage","replaceComment","c","removeComment","addComment","loadPages","thunk","actions","payload","loadPage","helpers","localState","getState","smallPage","find","updatePageContent","toUpdate","deletePage","saveComment","deleteComment","aStore","accounts","editAccount","refreshTokenTimeout","addAccount","window","addNewAccount","setAccount","setEditAccount","replaceAccount","removeAccount","acc","setAccounts","clearAccount","refreshTheToken","refreshAction","getAllAccounts","accs","getAccountById","createAccount","newAccount","updateAccount","deleteAccount","iStore","alerts","setAlertInternal","alert","removeAlert","clear","Math","floor","random","autoClose","undefined","setTimeout","success","type","info","warn","store","createStore","Alert","fade","useStoreState","s","useStoreActions","cssClasses","classes","alertTypeClass","join","length","className","index","key","onClick","dangerouslySetInnerHTML","__html","defaultProps","Nav","exact","to","role","PrivateRoute","Component","component","roles","rest","render","props","indexOf","pathname","from","location","Input","name","label","formMethods","errors","ref","Select","options","value","Submit","leftChildren","rightChildren","children","isSubmitting","Array","isArray","posright","disabled","React","Children","child","Home","apiDocPath","src","alt","href","Details","match","path","validationSchema","Yup","shape","required","min","when","schema","oneOf","Update","alertSuccess","alertError","initialValues","useForm","defaultValues","mode","resolver","yupResolver","handleSubmit","useState","isDeleting","setIsDeleting","onSubmit","fields","setStatus","setSubmitting","keepAfterRouteChange","catch","confirm","style","width","Profile","Overview","List","users","useHistory","useEffect","whiteSpace","editUser","colSpan","AddEdit","isAddMode","userValues","concat","createUser","updateUser","Users","Admin","Login","clearAlerts","Register","registerUser","VerifyEmail","EmailStatus","emailStatus","setEmailStatus","queryString","search","replace","getBody","ForgotPassword","ResetPassword","TokenStatus","tokenStatus","setTokenStatus","getForm","Account","PageSummary","Card","Body","Title","Subtitle","Pages","Container","Row","Col","Comment","Text","Comments","PageDisplay","createNewComment","source","escapeHtml","MarkdownEditor","val","updatedValue","height","onChange","e","d","v","current","FileUploader","file","setFile","filename","setFilename","preventDefault","FormData","append","encType","target","files","htmlFor","PageEdit","setModus","eduRef","useRef","para","rows","Page","useParams","modus","showConfirmation","setShowConfirmation","Modal","show","onHide","Header","closeButton","Footer","Button","variant","CommentEdit","updateComment","App","useLocation","atob","split","timeout","Date","exp","getTime","now","clearTimeout","slice","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2eefd1.chunk.js","sourcesContent":["let token = null;\r\nexport const fetchWrapper = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: _delete,\r\n  setToken,\r\n};\r\n\r\nfunction get(url) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction post(url, body) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction put(url, body) {\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// prefixed with underscored because delete is a reserved word in javascript\r\nfunction _delete(url) {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// helper functions +\r\n\r\nfunction authHeader(url) {\r\n  /*   let user;\r\n  const json = localStorage.getItem(\"account\");\r\n  console.log(json);\r\n  if (json) {\r\n    user = JSON.parse(json);\r\n    console.log(user);\r\n  } */\r\n\r\n  //const user = window.account;\r\n\r\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\r\n  if (token && isApiUrl) {\r\n    return { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n\r\n    if (!response.ok) {\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n\r\nfunction setToken(jwtToken) {\r\n  token = jwtToken;\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const Role = {\r\n    Admin: 'Admin',\r\n    User: 'User'    \r\n}","export const AlertType = {\r\n  Success: \"Success\",\r\n  Error: \"Error\",\r\n  Info: \"Info\",\r\n  Warning: \"Warning\",\r\n};\r\n","import { fetchWrapper, history } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/accounts`;\r\n\r\nexport const accountService = {\r\n  login,\r\n  logout,\r\n  refreshToken,\r\n  register,\r\n  verifyEmail,\r\n  forgotPassword,\r\n  validateResetToken,\r\n  resetPassword,\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n  setToken,\r\n};\r\n\r\nfunction login(email, password) {\r\n  return fetchWrapper.post(`${baseUrl}/authenticate`, { email, password });\r\n}\r\n\r\nfunction logout() {\r\n  // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\r\n  fetchWrapper.post(`${baseUrl}/revoke-token`, {});\r\n\r\n  history.push(\"/\"); // where should this go?????\r\n}\r\n\r\nfunction refreshToken() {\r\n  return fetchWrapper.post(`${baseUrl}/refresh-token`, {});\r\n}\r\n\r\nfunction register(params) {\r\n  return fetchWrapper.post(`${baseUrl}/register`, params);\r\n}\r\n\r\nfunction verifyEmail(token) {\r\n  return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\r\n}\r\n\r\nfunction forgotPassword(email) {\r\n  return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\r\n}\r\n\r\nfunction validateResetToken(token) {\r\n  return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\r\n}\r\n\r\nfunction resetPassword({ token, password, confirmPassword }) {\r\n  return fetchWrapper.post(`${baseUrl}/reset-password`, {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n  });\r\n}\r\n\r\nfunction getAll() {\r\n  return fetchWrapper.get(baseUrl);\r\n}\r\n\r\nfunction getById(id) {\r\n  return fetchWrapper.get(`${baseUrl}/${id}`);\r\n}\r\n\r\nfunction create(params) {\r\n  return fetchWrapper.post(baseUrl, params);\r\n}\r\n\r\nfunction update(id, params) {\r\n  console.log(params);\r\n  return fetchWrapper.put(`${baseUrl}/${id}`, params);\r\n}\r\n\r\n// prefixed with underscore because 'delete' is a reserved word in javascript\r\nfunction _delete(id) {\r\n  return fetchWrapper.delete(`${baseUrl}/${id}`).then((x) => {\r\n    // auto logout if the logged in user deleted their own record\r\n    /*     if (id === .value.id) {\r\n      logout();\r\n    } */\r\n    return x;\r\n  });\r\n}\r\n\r\nfunction setToken(jwtToken) {\r\n  fetchWrapper.setToken(jwtToken);\r\n}\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/pages`;\r\n\r\nconst getAll = async () => {\r\n  let pages = await fetch(baseUrl);\r\n  pages = await pages.json();\r\n  return pages;\r\n};\r\n\r\nconst getById = async (id) => {\r\n  let page = await fetch(baseUrl + \"/\" + id);\r\n  page = await page.json();\r\n  return page;\r\n};\r\nconst create = async (page) => {\r\n  const newPage = fetchWrapper.post(`${baseUrl}`, page);\r\n  return newPage;\r\n};\r\n\r\nconst update = async (id, page) => {\r\n  let updatedPage = await fetchWrapper.put(`${baseUrl}/${id}`, page);\r\n  return updatedPage;\r\n};\r\n\r\nconst _delete = async (pageId) => {\r\n  let res = await fetchWrapper.delete(`${baseUrl}/${pageId}`);\r\n  return res;\r\n};\r\n\r\nexport const pageService = {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrlComment = `${process.env.REACT_APP_API_URL}/comments`;\r\n\r\nconst update = async (pageId, comment) => {\r\n  let updatedComment = await fetchWrapper.put(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return updatedComment;\r\n};\r\n\r\nconst create = async (pageId, comment) => {\r\n  let newComment = await fetchWrapper.post(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return newComment;\r\n};\r\n\r\nconst _delete = async (pageId, comment) => {\r\n  let res = await fetchWrapper.delete(\r\n    `${baseUrlComment}/${pageId}/${comment._id}`\r\n  );\r\n\r\n  return res;\r\n};\r\n\r\nexport const commentService = {\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","const baseUrl = `${process.env.REACT_APP_API_URL}/files/upload`;\r\n\r\nexport const fileService = {\r\n  uploadFile: async (formData) => {\r\n    console.log(\"file upload service\");\r\n\r\n    try {\r\n      let response = await fetch(baseUrl, {\r\n        method: \"POST\",\r\n\r\n        body: formData,\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(response);\r\n      const message = '&lt;img src=\"' + response + '\" width=\"10%\" &gt;';\r\n      return message;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n","import pagesStoreModel from \"./pagesStoreModel\";\r\nimport accountStoreModel from \"./accountsStoreModel\";\r\nimport alertsStoreModel from \"./alertsStoreModel\";\r\n\r\nconst storeModel = {\r\n  pStore: pagesStoreModel,\r\n  aStore: accountStoreModel,\r\n  iStore: alertsStoreModel,\r\n};\r\n\r\nexport default storeModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { pageService } from \"../_services\";\r\nimport { commentService } from \"../_services\";\r\n\r\nconst pagesStoreModel = {\r\n  pages: [],\r\n  page: null,\r\n  comment: null,\r\n\r\n  addLoadedPages: action((state, pages) => {\r\n    state.pages = pages;\r\n  }),\r\n\r\n  createComment: action((state, user) => {\r\n    const newComment = {\r\n      content: \"\",\r\n      userName: user.userName,\r\n      userId: user.id,\r\n    };\r\n    state.comment = newComment;\r\n  }),\r\n\r\n  createPage: action((state, account) => {\r\n    const newPage = {\r\n      title: \"New Page Title\",\r\n      slug: \"newPage\",\r\n      subtitle: \"\",\r\n      content: \"\",\r\n      ownerId: account.id,\r\n      ownerName: account.userName,\r\n      comments: [],\r\n    };\r\n    state.page = newPage;\r\n  }),\r\n\r\n  removePage: action((state, page) => {\r\n    state.pages = state.pages.filter((p) => p._id !== page._id);\r\n    state.page = null;\r\n  }),\r\n\r\n  editComment: action((state, comment) => {\r\n    state.comment = comment;\r\n  }),\r\n\r\n  clearComment: action((state) => {\r\n    state.comment = null;\r\n  }),\r\n\r\n  setPage: action((state, page) => {\r\n    state.page = page;\r\n    state.pages = state.pages.map((p) => (p._id === page._id ? page : p));\r\n  }),\r\n\r\n  addPage: action((state, page) => {\r\n    state.pages.push(page);\r\n    state.page = page;\r\n  }),\r\n\r\n  replaceComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.map((c) =>\r\n      c._id === comment._id ? comment : c\r\n    );\r\n  }),\r\n\r\n  removeComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.filter(\r\n      (c) => c._id !== comment._id\r\n    );\r\n  }),\r\n\r\n  addComment: action((state, comment) => {\r\n    state.page.comments.push(comment);\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  loadPages: thunk(async (actions, payload) => {\r\n    const pages = await pageService.getAll();\r\n    actions.addLoadedPages(pages);\r\n  }),\r\n\r\n  loadPage: thunk(async (actions, slug, helpers) => {\r\n    const localState = helpers.getState();\r\n\r\n    const smallPage = localState.pages.find((p) => p.slug === slug);\r\n\r\n    if (!smallPage) return;\r\n    const page = await pageService.getById(smallPage._id);\r\n    actions.setPage(page);\r\n  }),\r\n\r\n  updatePageContent: thunk(async (actions, payload, helpers) => {\r\n    const { _id, slug, title, subtitle, content, ownerName, ownerId } = payload;\r\n    const toUpdate = {\r\n      slug,\r\n      title,\r\n      subtitle,\r\n      content,\r\n    };\r\n\r\n    if (_id) {\r\n      // this is an update\r\n      const updatedPage = await pageService.update(_id, toUpdate);\r\n      actions.setPage(updatedPage);\r\n    } else {\r\n      toUpdate.ownerName = ownerName;\r\n      toUpdate.ownerId = ownerId;\r\n      const newPage = await pageService.create(toUpdate);\r\n      actions.addPage(newPage);\r\n    }\r\n  }),\r\n\r\n  deletePage: thunk(async (actions, page, helpers) => {\r\n    if (page._id) {\r\n      await pageService.delete(page._id);\r\n      actions.removePage(page);\r\n    }\r\n  }),\r\n\r\n  saveComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    console.log(comment);\r\n    if (comment._id) {\r\n      // this is an update\r\n      console.log(localState.page._id);\r\n      const updatedComment = await commentService.update(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n      actions.replaceComment(updatedComment);\r\n    } else {\r\n      const updatedComment = await commentService.create(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n\r\n      actions.addComment(updatedComment);\r\n    }\r\n  }),\r\n\r\n  deleteComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    if (comment._id) {\r\n      await commentService.delete(localState.page._id, comment);\r\n      actions.removeComment(comment);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default pagesStoreModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { accountService } from \"../_services\";\r\n\r\nconst accountsStoreModels = {\r\n  accounts: [],\r\n  account: null,\r\n  editAccount: null,\r\n  refreshTokenTimeout: null,\r\n  refreshToken: null,\r\n\r\n  // Actions\r\n\r\n  addAccount: action((state, account) => {\r\n    state.account = account;\r\n    state.refreshToken = account?.jwtToken;\r\n    accountService.setToken(account?.jwtToken);\r\n    window.account = account;\r\n  }),\r\n\r\n  addNewAccount: action((state, account) => {\r\n    state.accounts.push(account);\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setAccount: action((state, account) => {\r\n    console.log(\"Account\", account);\r\n    accountService.setToken(account?.jwtToken);\r\n    state.account = account;\r\n    state.refreshToken = account?.jwtToken;\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setEditAccount: action((state, account) => {\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  replaceAccount: action((state, account) => {\r\n    state.accounts = state.accounts.map((a) =>\r\n      a.id === account.id || !a.id ? account : a\r\n    );\r\n    if (state.account.id === account.id || !state.account.id) {\r\n      state.account = account;\r\n      state.refreshToken = account?.jwtToken;\r\n      accountService.setToken(account?.jwtToken);\r\n      state.editAccount = account;\r\n    }\r\n  }),\r\n\r\n  removeAccount: action((state, id) => {\r\n    const acc = state.accounts.filter((a) => a.id !== id);\r\n    if (state.account.id === id) {\r\n      state.account = acc;\r\n      state.editAccount = acc;\r\n    }\r\n  }),\r\n\r\n  setAccounts: action((state, accounts) => {\r\n    state.accounts = accounts;\r\n  }),\r\n\r\n  clearAccount: action((state) => {\r\n    accountService.setToken(null);\r\n    state.account = null;\r\n    state.refreshToken = null;\r\n    window.account = null;\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  login: thunk(async (actions, payload) => {\r\n    const { email, password } = payload;\r\n    console.log(email);\r\n    const acc = await accountService.login(email, password);\r\n    actions.setAccount(acc);\r\n  }),\r\n\r\n  logout: thunk(async (actions) => {\r\n    await accountService.logout();\r\n    actions.clearAccount();\r\n  }),\r\n\r\n  refreshTheToken: thunk(async (actions, refreshAction) => {\r\n    const acc = await accountService.refreshToken();\r\n    actions.setAccount(acc);\r\n  }),\r\n\r\n  register: thunk(async (actions, payload) => {\r\n    await accountService.register(payload);\r\n  }),\r\n\r\n  verifyEmail: thunk(async (actions, token) => {\r\n    await accountService.verifyEmail(token);\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, email) => {\r\n    await accountService.forgotPassword(email);\r\n  }),\r\n\r\n  validateResetToken: thunk(async (actions, token) => {\r\n    await accountService.validateResetToken(token);\r\n  }),\r\n\r\n  resetPassword: thunk(async (actions, payload) => {\r\n    const { token, password, confirmPassword } = payload;\r\n    await accountService.resetPassword(token, password, confirmPassword);\r\n  }),\r\n\r\n  getAllAccounts: thunk(async (actions) => {\r\n    const accs = await accountService.getAll();\r\n    actions.setAccounts(accs);\r\n  }),\r\n\r\n  getAccountById: thunk(async (actions, id) => {\r\n    const acc = await accountService.getById(id);\r\n    actions.setEditAccount(acc);\r\n  }),\r\n\r\n  createAccount: thunk(async (actions, newAccount) => {\r\n    console.log(newAccount);\r\n    const acc = await accountService.create(newAccount);\r\n    console.log(acc);\r\n    actions.addNewAccount(acc);\r\n  }),\r\n\r\n  updateAccount: thunk(async (actions, payload) => {\r\n    const { id, params } = payload;\r\n    const acc = await accountService.update(id, params);\r\n    actions.replaceAccount(acc);\r\n  }),\r\n\r\n  deleteAccount: thunk(async (actions, id) => {\r\n    await accountService.delete(id);\r\n    actions.removeAccount(id);\r\n  }),\r\n};\r\n\r\nexport default accountsStoreModels;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst alertsStoreModel = {\r\n  alerts: [],\r\n\r\n  // Actions\r\n\r\n  setAlertInternal: action((state, alert) => {\r\n    state.alerts.push(alert);\r\n  }),\r\n\r\n  removeAlert: action((state, alert) => {\r\n    state.alerts = state.alerts.filter((x) => x.id !== alert.id);\r\n  }),\r\n\r\n  clear: action((state) => {\r\n    state.alerts = [];\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  alert: thunk(async (actions, alert) => {\r\n    alert.id = Math.floor(Math.random() * 10000);\r\n    alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\r\n    actions.setAlertInternal(alert);\r\n    if (alert.autoClose) {\r\n      setTimeout(() => actions.removeAlert(alert), 3500);\r\n    }\r\n  }),\r\n\r\n  success: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Success;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  error: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Error;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  info: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Info;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  warn: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Warning;\r\n    await actions.alert(alert);\r\n  }),\r\n};\r\n\r\nexport default alertsStoreModel;\r\n","import { createStore } from \"easy-peasy\";\r\nimport storeModel from \"./storeModel\";\r\n\r\nconst store = createStore(storeModel);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  fade: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"default-alert\",\r\n  fade: true,\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n  const alerts = useStoreState((s) => s.iStore.alerts);\r\n  const removeAlert = useStoreActions((a) => a.iStore.removeAlert);\r\n\r\n  function cssClasses(alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n\r\n  if (!alerts.length) return null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"m-3\">\r\n        {alerts.map((alert, index) => (\r\n          <div key={index} className={cssClasses(alert)}>\r\n            <button className=\"close\" onClick={() => removeAlert(alert)}>\r\n              &times;\r\n            </button>\r\n            <span dangerouslySetInnerHTML={{ __html: alert.message }}></span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };\r\n","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { history, Role } from \"../_helpers\";\r\n\r\nfunction Nav() {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const logout = useStoreActions((a) => a.aStore.logout);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-info larger\">\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <NavLink exact to=\"/\" className=\"nav-item nav-link\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/content\" className=\"nav-item nav-link\">\r\n            Documentation\r\n          </NavLink>\r\n\r\n          {user && user.role === Role.Admin && (\r\n            <NavLink to=\"/admin\" className=\"nav-item nav-link\">\r\n              Admin\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n        <div className=\"navbar-nav ml-auto\">\r\n          {user && (\r\n            <NavLink to=\"/profile\" className=\"nav-item nav-link\">\r\n              User: {user.userName}\r\n            </NavLink>\r\n          )}\r\n          {user && (\r\n            <NavLink\r\n              exact\r\n              to=\"/account/login\"\r\n              onClick={() => logout()}\r\n              className=\"nav-item nav-link \"\r\n            >\r\n              Logout\r\n            </NavLink>\r\n          )}\r\n          {!user && (\r\n            <NavLink className=\"nav-item nav-link\" to=\"/account/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Nav };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n  const account = useStoreState((s) => s.aStore.account);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(\"Private Route\");\r\n        if (!account) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/account/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n          //return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (roles && roles.indexOf(account.role) === -1) {\r\n          // role not authorized so redirect to home page\r\n          return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // authorized so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\n\r\nexport function Input({ name, label, formMethods, ...rest }) {\r\n  const { register, errors } = formMethods;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label ? label : name}</label>\r\n\r\n      <input\r\n        name={name}\r\n        ref={register}\r\n        {...rest}\r\n        className={\"form-control\" + (errors[name] ? \" is-invalid\" : \"\")}\r\n      />\r\n      <ErrorMessage errors={errors} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Select({ name, label, options, formMethods, ...rest }) {\r\n  const { register, errors } = formMethods;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label ? label : name}</label>\r\n      <select\r\n        name={name}\r\n        ref={register}\r\n        {...rest}\r\n        className={\"form-control\" + (errors[name] ? \" is-invalid\" : \"\")}\r\n      >\r\n        {options.map((value) => (\r\n          <option key={value} value={value}>\r\n            {value}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <ErrorMessage errors={errors} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Submit({ label, formMethods, children, ...rest }) {\r\n  const { isSubmitting } = formMethods;\r\n  console.log(children);\r\n\r\n  let leftChildren;\r\n  let rightChildren;\r\n\r\n  if (Array.isArray(children)) {\r\n    leftChildren = children.filter((c) => c.props.posright !== \"true\");\r\n    rightChildren = children.filter((c) => c.props.posright === \"true\");\r\n  } else {\r\n    leftChildren = [children];\r\n    rightChildren = [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-row\">\r\n      <div className=\"form-group col\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          {isSubmitting && (\r\n            <span className=\"spinner-border spinner-border-sm mr-1\" />\r\n          )}\r\n\r\n          {label}\r\n        </button>\r\n        {React.Children.map(leftChildren, (child) => {\r\n          return child;\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"form-group col text-right\"></div>\r\n      {React.Children.map(rightChildren, (child) => {\r\n        return child;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  const apiDocPath = `${process.env.REACT_APP_API_URL}/api/api-docs`;\r\n  return (\r\n    <div className=\"m-4\">\r\n      <div className=\"container\">\r\n        <h1 className=\"mb-4  display-4\">Reference App MERN-Stack</h1>\r\n        <h3>A simple app to manage technical documentation.</h3>\r\n        <div className=\"larger\">\r\n          <p>\r\n            It is the purpose of this application to be used as a correct and\r\n            well coded example of the implementation of a CRUD application based\r\n            on the MERN-stack including authorization.\r\n          </p>\r\n          <img\r\n            src=\"./images/mernstack.png\"\r\n            alt=\"Mern-Stack\"\r\n            className=\"img-fluid mb-4\"\r\n          />\r\n          <p>\r\n            This CRUD application allows you to manage documentation of the\r\n            system itself. The documentation can be entered as markdown and\r\n            users can leave comments for each document.\r\n          </p>\r\n\r\n          <p>\r\n            In addition of the basic CRUD functionality the app contains the\r\n            following extra elements:\r\n          </p>\r\n          <ul className=\"larger feature\">\r\n            <li>Authorization</li>\r\n            <li>Handling of Markdown</li>\r\n            <li>\r\n              File-upload for pictures (used in Markdown) and storage of those\r\n              pictures in MongoDb\r\n            </li>\r\n            <li>Redux pattern implemented with easy-peasy</li>\r\n            <li>An efficent way to display messages to the user,</li>\r\n          </ul>\r\n        </div>\r\n        <h3 className=\"mt-5\">\r\n          The Swagger specification of the api can be found here :\r\n          <a className=\"nav-item nav-link d-inline\" href={apiDocPath}>\r\n            API-Documentation{\" \"}\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Home };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction Details({ match }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Profile</h1>\r\n      <p>\r\n        <strong>Name: </strong> {user.userName}\r\n        <br />\r\n        <strong>Email: </strong> {user.email}\r\n      </p>\r\n      <p>\r\n        <Link to={`${path}/update`}>Update Profile</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Details };\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string().min(6, \"Password must be at least 6 characters\"),\r\n  confirmPassword: Yup.string()\r\n    .when(\"password\", (password, schema) => {\r\n      if (password) return schema.required(\"Confirm Password is required\");\r\n    })\r\n    .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n});\r\n\r\nfunction Update({ history }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const initialValues = {\r\n    userName: user.userName,\r\n    email: user.email,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const formMethods = useForm({\r\n    defaultValues: initialValues,\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    console.log(user.id);\r\n    console.log(fields);\r\n    update({ id: user.id, params: fields })\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          options: { keepAfterRouteChange: true },\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  function onDelete() {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      setIsDeleting(true);\r\n\r\n      deleteAccount(user.id).then(() =>\r\n        alertSuccess(\"Account deleted successfully\")\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1>Update Profile</h1>\r\n      <Input name=\"userName\" label=\"Username\" formMethods={formMethods} />\r\n      <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n\r\n      <h3 className=\"pt-3\">Change Password</h3>\r\n      <p>Leave blank to keep the same password</p>\r\n      <div className=\"form-row\">\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Submit label=\"Update\" formMethods={formMethods}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onDelete()}\r\n          className=\"btn btn-danger ml-2\"\r\n          style={{ width: \"75px\" }}\r\n          disabled={isDeleting}\r\n        >\r\n          {isDeleting ? (\r\n            <span className=\"spinner-border spinner-border-sm\"></span>\r\n          ) : (\r\n            <span>Delete</span>\r\n          )}\r\n        </button>\r\n        <Link to=\".\" className=\"btn btn-link\">\r\n          Cancel\r\n        </Link>\r\n      </Submit>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Update };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { Details } from './Details';\r\nimport { Update } from './Update';\r\n\r\nfunction Profile({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <div className=\"p-4\">\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path={path} component={Details} />\r\n                    <Route path={`${path}/update`} component={Update} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Profile };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Overview({ match }) {\r\n    const { path } = match;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin</h1>\r\n            <p>This section can only be accessed by administrators.</p>\r\n            <p><Link to={`${path}/users`}>Manage Users</Link></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Overview };","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction List({ match }) {\r\n  const users = useStoreState((s) => s.aStore.accounts);\r\n  const getAllAccounts = useStoreActions((a) => a.aStore.getAllAccounts);\r\n  const setEditAccount = useStoreActions((a) => a.aStore.setEditAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const { path } = match;\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAllAccounts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function deleteUser(id) {\r\n    deleteAccount(id);\r\n  }\r\n\r\n  function editUser(user) {\r\n    setEditAccount(user);\r\n    history.push(`${path}/edit/${user.id}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <p>All users from secure (admin only) api end point:</p>\r\n      <Link to={`${path}/add`} className=\"btn btn-sm btn-success mb-2\">\r\n        Add User\r\n      </Link>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"30%\" }}>Username</th>\r\n            <th style={{ width: \"30%\" }}>Email</th>\r\n            <th style={{ width: \"30%\" }}>Role</th>\r\n            <th style={{ width: \"10%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users &&\r\n            users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.userName}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.role}</td>\r\n                <td style={{ whiteSpace: \"nowrap\" }}>\r\n                  <button\r\n                    onClick={() => editUser(user)}\r\n                    style={{ width: \"60px\" }}\r\n                    className=\"btn btn-sm btn-primary mr-1\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => deleteUser(user.id)}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    style={{ width: \"60px\" }}\r\n                    disabled={user.isDeleting}\r\n                  >\r\n                    {user.isDeleting ? (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    ) : (\r\n                      <span>Delete</span>\r\n                    )}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          {!users && (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">\r\n                <span className=\"spinner-border spinner-border-lg align-center\"></span>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { List };\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\n\r\nimport { Input, Submit, Select } from \"../../_components\";\r\n\r\nfunction AddEdit({ history, match }) {\r\n  const user = useStoreState((s) => s.aStore.editAccount);\r\n  const create = useStoreActions((a) => a.aStore.createAccount);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const getById = useStoreActions((a) => a.aStore.getAccountById);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const id = match.params.id;\r\n  const isAddMode = !id;\r\n\r\n  useEffect(() => {\r\n    if (!isAddMode) {\r\n      getById(id);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const options = [\"\", \"User\", \"Admin\"];\r\n\r\n  const emptyValues = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const userValues = {\r\n    userName: user?.userName,\r\n    email: user?.email,\r\n    role: user?.role,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const initialValues = isAddMode ? emptyValues : userValues;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    role: Yup.string().required(\"Role is required\"),\r\n    password: Yup.string()\r\n      .concat(isAddMode ? Yup.string().required(\"Password is required\") : null)\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) return schema.required(\"Confirm Password is required\");\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    if (isAddMode) {\r\n      createUser(fields, setSubmitting);\r\n    } else {\r\n      updateUser(id, fields, setSubmitting);\r\n    }\r\n  }\r\n\r\n  function createUser(fields, setSubmitting) {\r\n    create(fields)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"User added successfully\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  function updateUser(id, fields, setSubmitting) {\r\n    update({ id: id, params: fields })\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"..\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  const formMethods = useForm({\r\n    defaultValues: initialValues,\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1>{isAddMode ? \"Add User\" : \"Edit User\"}</h1>\r\n\r\n      <Input name=\"userName\" label=\"Username\" formMethods={formMethods} />\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"col-7\">\r\n          <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Select\r\n            name=\"role\"\r\n            label=\"Role\"\r\n            options={options}\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {!isAddMode && (\r\n        <div>\r\n          <h3 className=\"pt-3\">Change Password</h3>\r\n          <p>Leave blank to keep the same password</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Submit label=\"Save\" formMethods={formMethods}>\r\n        <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\r\n          Cancel\r\n        </Link>\r\n      </Submit>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { AddEdit };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { List } from './List';\r\nimport { AddEdit } from './AddEdit';\r\n\r\nfunction Users({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={path} component={List} />\r\n            <Route path={`${path}/add`} component={AddEdit} />\r\n            <Route path={`${path}/edit/:id`} component={AddEdit} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport { Users };","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Overview } from \"./Overview\";\r\nimport { Users } from \"./users\";\r\n\r\nfunction Admin({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path={path} component={Overview} />\r\n          <Route path={`${path}/users`} component={Users} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Admin };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nfunction Login({ history, location }) {\r\n  const login = useStoreActions((a) => a.aStore.login);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit({ email, password }) {\r\n    clearAlerts();\r\n    login({ email, password })\r\n      .then(() => {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        history.push(from);\r\n      })\r\n      .catch((error) => {\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h3 className=\"card-header\">Login</h3>\r\n      <div className=\"card-body\">\r\n        <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          formMethods={formMethods}\r\n          type=\"password\"\r\n        />\r\n        <Submit label=\"Login\" formMethods={formMethods}>\r\n          <Link to=\"register\" className=\"btn btn-link\">\r\n            Register\r\n          </Link>\r\n          <Link\r\n            to=\"forgot-password\"\r\n            className=\"btn btn-link pr-0\"\r\n            posright=\"true\"\r\n          >\r\n            Forgot Password?\r\n          </Link>\r\n        </Submit>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is required\"),\r\n});\r\n\r\nfunction Register({ history }) {\r\n  const registerUser = useStoreActions((a) => a.aStore.register);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit(data) {\r\n    registerUser(data)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message:\r\n            \"Registration successful, please check your email for verification instructions\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch((error) => {\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h3 className=\"card-header\">Register</h3>\r\n      <div className=\"card-body\">\r\n        <Input name=\"userName\" label=\"Username\" formMethods={formMethods} />\r\n        <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              formMethods={formMethods}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Input\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              formMethods={formMethods}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Submit label=\"Register\" formMethods={formMethods}>\r\n          <Link to=\"login\" className=\"btn btn-link\" posright=\"false\">\r\n            Cancel\r\n          </Link>\r\n        </Submit>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Register };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction VerifyEmail({ history }) {\r\n  const verifyEmail = useStoreActions((a) => a.aStore.verifyEmail);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const EmailStatus = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n  };\r\n\r\n  const [emailStatus, setEmailStatus] = useState(EmailStatus.Verifying);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    verifyEmail(token)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Verification successful, you can now login\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch(() => {\r\n        setEmailStatus(EmailStatus.Failed);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function getBody() {\r\n    switch (emailStatus) {\r\n      case EmailStatus.Verifying:\r\n        return <div>Verifying...</div>;\r\n      case EmailStatus.Failed:\r\n        return (\r\n          <div>\r\n            Verification failed, you can also verify your account using the{\" \"}\r\n            <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Verify Email</h3>\r\n      <div className=\"card-body\">{getBody()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { VerifyEmail };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n});\r\n\r\nfunction ForgotPassword() {\r\n  const forgotPassword = useStoreActions((a) => a.aStore.forgotPassword);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit({ email }) {\r\n    clearAlerts();\r\n    forgotPassword(email)\r\n      .then(() =>\r\n        alertSuccess({\r\n          message: \"Please check your email for password reset instructions\",\r\n        })\r\n      )\r\n      .catch((error) => alertError({ message: error }));\r\n    //.finally(() => setSubmitting(false));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h3 className=\"card-header\">Forgot Password</h3>\r\n      <div className=\"card-body\">\r\n        <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n        <Submit label=\"Forgot Password\" formMethods={formMethods}>\r\n          <Link to=\"login\" className=\"btn btn-link\" posright=\"false\">\r\n            Cancel\r\n          </Link>\r\n        </Submit>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { ForgotPassword };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is required\"),\r\n});\r\n\r\nfunction ResetPassword({ history }) {\r\n  const validateResetToken = useStoreActions(\r\n    (a) => a.aStore.validateResetToken\r\n  );\r\n\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const resetPassword = useStoreActions((a) => a.aStore.resetPassword);\r\n\r\n  const TokenStatus = {\r\n    Validating: \"Validating\",\r\n    Valid: \"Valid\",\r\n    Invalid: \"Invalid\",\r\n  };\r\n\r\n  const [token, setToken] = useState(null);\r\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    validateResetToken(token)\r\n      .then(() => {\r\n        setToken(token);\r\n        setTokenStatus(TokenStatus.Valid);\r\n      })\r\n      .catch(() => {\r\n        setTokenStatus(TokenStatus.Invalid);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  function getForm(formMethods) {\r\n    const { handleSubmit } = formMethods;\r\n\r\n    function onSubmit({ password, confirmPassword }, { setSubmitting }) {\r\n      clearAlerts();\r\n      resetPassword({ token, password, confirmPassword })\r\n        .then(() => {\r\n          alertSuccess({\r\n            message: \"Password reset successful, you can now login\",\r\n            options: { keepAfterRouteChange: true },\r\n          });\r\n          history.push(\"login\");\r\n        })\r\n        .catch((error) => {\r\n          setSubmitting(false);\r\n          alertError({ message: error });\r\n        });\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          formMethods={formMethods}\r\n        />\r\n\r\n        <Input\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          formMethods={formMethods}\r\n        />\r\n\r\n        <Submit label=\"Reset Password\" formMethods={formMethods}>\r\n          <Link to=\"login\" className=\"btn btn-link\" posright=\"false\">\r\n            Cancel\r\n          </Link>\r\n        </Submit>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function getBody(formMethods) {\r\n    switch (tokenStatus) {\r\n      case TokenStatus.Valid:\r\n        return getForm(formMethods);\r\n      case TokenStatus.Invalid:\r\n        return (\r\n          <div>\r\n            Token validation failed, if the token has expired you can get a new\r\n            one at the <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      case TokenStatus.Validating:\r\n        return <div>Validating token...</div>;\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Reset Password</h3>\r\n      <div className=\"card-body\">{getBody(formMethods)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ResetPassword };\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nimport { Login } from \"./Login\";\r\nimport { Register } from \"./Register\";\r\nimport { VerifyEmail } from \"./VerifyEmail\";\r\nimport { ForgotPassword } from \"./ForgotPassword\";\r\nimport { ResetPassword } from \"./ResetPassword\";\r\n\r\nfunction Account({ history, match }) {\r\n  const { path } = match;\r\n  const account = useStoreState((s) => s.aStore.account);\r\n\r\n  useEffect(() => {\r\n    // redirect to home if already logged in\r\n    if (account) {\r\n      history.push(\"/\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8 offset-sm-2 mt-5\">\r\n          <div className=\"card m-3\">\r\n            <Switch>\r\n              <Route path={`${path}/login`} component={Login} />\r\n              <Route path={`${path}/register`} component={Register} />\r\n              <Route path={`${path}/verify-email`} component={VerifyEmail} />\r\n              <Route\r\n                path={`${path}/forgot-password`}\r\n                component={ForgotPassword}\r\n              />\r\n              <Route\r\n                path={`${path}/reset-password`}\r\n                component={ResetPassword}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Account };\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function PageSummary({ page }) {\r\n  const history = useHistory();\r\n  console.log(page);\r\n\r\n  return (\r\n    <Card\r\n      className=\"mb-3 mx-5 p-3\"\r\n      onClick={() => history.push(\"/topic/\" + page.slug)}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{page.title}</Card.Title>\r\n        <Card.Subtitle>{page.subtitle}</Card.Subtitle>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport PageSummary from \"./PageSummary\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Pages() {\r\n  const pages = useStoreState((s) => s.pStore.pages);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const createPage = useStoreActions((a) => a.pStore.createPage);\r\n  const history = useHistory();\r\n\r\n  const addPageHandler = () => {\r\n    createPage(user);\r\n    history.push(\"/topic/newPage\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"w-auto mt-5 \">\r\n        {user ? (\r\n          <button\r\n            className=\"float-right btn btn-link mr-5\"\r\n            onClick={addPageHandler}\r\n          >\r\n            <GoPlus className=\"larger mt-1  text-secondary\" />\r\n          </button>\r\n        ) : null}\r\n        <Row>\r\n          <h2 className=\"mb-3 ml-5\">Documentation</h2>\r\n        </Row>\r\n\r\n        {pages.map((p) => (\r\n          <Row key={p._id}>\r\n            <Col>\r\n              <PageSummary page={p} />\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function Comment({ data }) {\r\n  const history = useHistory();\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const editComment = useStoreActions((a) => a.pStore.editComment);\r\n  const deleteComment = useStoreActions((a) => a.pStore.deleteComment);\r\n\r\n  const handleEdit = () => {\r\n    editComment(data);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteComment(data);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <Card.Title>Comment by {data.userName}</Card.Title>\r\n        <Card.Text>{data.content}</Card.Text>\r\n        {user && (user.id === data.userId || user.role === \"Admin\") ? (\r\n          <div className=\"float-right\">\r\n            <button className=\"btn btn-link\" onClick={handleDelete}>\r\n              <MdDelete className=\"larger text-secondary\" />\r\n            </button>{\" \"}\r\n            <button className=\"btn btn-link\" onClick={handleEdit}>\r\n              <MdModeEdit className=\"larger text-secondary\" />\r\n            </button>{\" \"}\r\n          </div>\r\n        ) : null}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function Comments({ comments } = []) {\r\n  return (\r\n    <>\r\n      {comments.map((c) => (\r\n        <Comment key={c._id} data={c} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Comments from \"../page/Comments\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function PageDisplay() {\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const createNewComment = useStoreActions((a) => a.pStore.createComment);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCommentHandler = () => {\r\n    createNewComment(user);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{page.title}</h2>\r\n      {page.ownerName ? <p>created by: {page.ownerName}</p> : null}\r\n\r\n      <ReactMarkdown\r\n        source={page.content}\r\n        escapeHtml={false}\r\n        className=\"mb-4\"\r\n      />\r\n      <div className=\"mt-5\"></div>\r\n      <hr className=\"mt-3 mb-3\" />\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"mt-1\">Comments</h4>\r\n        </Col>\r\n        <Col>\r\n          {user ? (\r\n            <button\r\n              className=\"float-right btn btn-link\"\r\n              onClick={addCommentHandler}\r\n            >\r\n              <GoPlus className=\"larger text-secondary mb-1\" />\r\n            </button>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n\r\n      <Comments\r\n        className=\"float-none\"\r\n        comments={page.comments ? page.comments : []}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MarkdownEditor2 from \"@uiw/react-markdown-editor\";\r\n\r\nexport default function MarkdownEditor({ val, updatedValue }) {\r\n  const updateMarkdown = (e, d, v) => {\r\n    updatedValue.current = v;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MarkdownEditor2 value={val} height=\"300\" onChange={updateMarkdown} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { fileService } from \"../_services\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nexport const FileUploader = () => {\r\n  const [file, setFile] = useState();\r\n  const [filename, setFilename] = useState(\"Choose image to upload\");\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    console.log(formData);\r\n    const message = await fileService.uploadFile(formData);\r\n    alertSuccess({ message: message, autoClose: false });\r\n    setFilename(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n      <div className=\"custom-file \">\r\n        <input\r\n          type=\"file\"\r\n          className=\"custom-file-input\"\r\n          id=\"customFile\"\r\n          onChange={onChange}\r\n        />\r\n        <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n          {filename}\r\n        </label>\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Upload\"\r\n        className=\"btn,  btn-light btn-block mt-3  float-left\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport MarkdownEditor from \"./MarkdownEditor\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { FileUploader } from \"./FileUploader\";\r\n\r\nexport default function PageEdit({ page, setModus }) {\r\n  //const page = useStoreState((state) => state.pStore.page);\r\n  const updatePageContent = useStoreActions(\r\n    (actions) => actions.pStore.updatePageContent\r\n  );\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    slug: \"\",\r\n    subtitle: \"\",\r\n  };\r\n\r\n  //     <input type=\"submit\"  className=\"btn btn-primary\" />\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n  const eduRef = useRef();\r\n\r\n  if (!page) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  defaultValues.title = page.title;\r\n  defaultValues.subtitle = page.subtitle;\r\n  defaultValues.slug = page.slug;\r\n\r\n  const onSubmit = async (data) => {\r\n    const para = {\r\n      _id: page._id,\r\n      slug: data.slug,\r\n      title: data.title,\r\n      subtitle: data.subtitle,\r\n      content: eduRef?.current,\r\n      ownerName: page.ownerName,\r\n      ownerId: page.ownerId,\r\n    };\r\n\r\n    console.log(para);\r\n    await updatePageContent(para);\r\n    setModus(\"show\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <button type=\"submit\" className=\"btn btn-light float-right \">\r\n          <MdSave />\r\n        </button>\r\n        <div className=\"form-group input-group-lg\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            id=\"title\"\r\n            className=\"form-control\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"slug\">Slug</label>\r\n          <input\r\n            id=\"slug\"\r\n            className=\"form-control\"\r\n            name=\"slug\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Subtitle</label>\r\n          <textarea\r\n            id=\"subtitle\"\r\n            rows=\"4\"\r\n            name=\"subtitle\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          {\" \"}\r\n          <label htmlFor=\"content\">Content</label>\r\n          <MarkdownEditor\r\n            id=\"content\"\r\n            val={page.content}\r\n            updatedValue={eduRef}\r\n          />{\" \"}\r\n        </div>\r\n      </form>\r\n      <FileUploader className=\"m-3\" />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PageDisplay from \"./PageDisplay\";\r\nimport PageEdit from \"./PageEdit\";\r\nimport Modal from \"react-bootstrap/modal\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\n\r\nexport default function Page() {\r\n  let { slug } = useParams();\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((state) => state.aStore.account);\r\n  const loadPage = useStoreActions((a) => a.pStore.loadPage);\r\n  const deletePage = useStoreActions((a) => a.pStore.deletePage);\r\n  const [modus, setModus] = useState(\"show\");\r\n  const [showConfirmation, setShowConfirmation] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (slug === \"newPage\") {\r\n      setModus(\"edit\");\r\n      return;\r\n    }\r\n    loadPage(slug);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!page) {\r\n    return <div>still loading</div>;\r\n  }\r\n\r\n  const toogleEdit = () => {\r\n    if (modus === \"edit\") {\r\n      setModus(\"show\");\r\n      return;\r\n    }\r\n\r\n    setModus(\"edit\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (showConfirmation) return;\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const deleteConfirmed = () => {\r\n    deletePage(page);\r\n    setShowConfirmation(false);\r\n    history.push(\"/content\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"w-auto mt-5 \">\r\n        {user && (user?.role === \"Admin\" || user?.id === page.ownerId) ? (\r\n          <div className=\"float-right\">\r\n            {modus === \"show\" ? (\r\n              <button className=\"btn btn-link\" onClick={handleDelete}>\r\n                <MdDelete className=\"larger mt-1 text-secondary\" />\r\n              </button>\r\n            ) : null}\r\n\r\n            {modus === \"show\" ? (\r\n              <button className=\"btn btn-link\" onClick={toogleEdit}>\r\n                <MdModeEdit className=\"larger mt-1 text-secondary\" />\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n        {modus === \"show\" ? <PageDisplay /> : null}\r\n        {modus === \"edit\" ? <PageEdit page={page} setModus={setModus} /> : null}\r\n      </Container>\r\n      <Modal show={showConfirmation} onHide={() => setShowConfirmation(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirmation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Do you really want to delete this page?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => setShowConfirmation(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirmed}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function CommentEdit() {\r\n  const comment = useStoreState((s) => s.pStore.comment);\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const updateComment = useStoreActions((a) => a.pStore.saveComment);\r\n  const clearComment = useStoreActions((a) => a.pStore.clearComment);\r\n  const history = useHistory();\r\n\r\n  const defaultValues = {\r\n    content: comment?.content,\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const updatedComment = { ...comment, content: data.content };\r\n    updateComment(updatedComment);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    clearComment();\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n\r\n  return (\r\n    <Container className=\"w-auto mt-5 \">\r\n      <h3>Edit Comment</h3>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"content\">Comment</label>\r\n          <textarea\r\n            id=\"content\"\r\n            rows=\"4\"\r\n            name=\"content\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n        <button onClick={onCancel} className=\"btn btn-secondary ml-2 \">\r\n          Cancel{\" \"}\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport { Role } from \"../_helpers\";\r\nimport { Nav, PrivateRoute, Alert } from \"../_components\";\r\nimport { Home } from \"../home\";\r\nimport { Profile } from \"../profile\";\r\nimport { Admin } from \"../admin\";\r\nimport { Account } from \"../account\";\r\nimport Pages from \"../page/Pages\";\r\nimport Page from \"../page/Page\";\r\nimport CommentEdit from \"../page/CommentEdit\";\r\n\r\nfunction App() {\r\n  const { pathname } = useLocation();\r\n  const loadPages = useStoreActions((a) => a.pStore.loadPages);\r\n  const refreshToken = useStoreState((s) => s.aStore.refreshToken);\r\n  const refreshTheToken = useStoreActions((a) => a.aStore.refreshTheToken);\r\n\r\n  useEffect(() => {\r\n    let refreshTokenTimeout;\r\n    if (refreshToken) {\r\n      const jwtToken = JSON.parse(atob(refreshToken.split(\".\")[1]));\r\n\r\n      const expires = new Date(jwtToken.exp * 1000);\r\n      const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n\r\n      refreshTokenTimeout = setTimeout(() => {\r\n        refreshTheToken();\r\n      }, timeout);\r\n    }\r\n    return () => clearTimeout(refreshTokenTimeout);\r\n  }, [refreshToken, refreshTheToken]);\r\n\r\n  useEffect(() => {\r\n    refreshTheToken();\r\n    loadPages();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"app-container bg-light\"}>\r\n      <Nav />\r\n      <Alert />\r\n      <Switch>\r\n        <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/content\" component={Pages} />\r\n        <Route path=\"/topic/:slug\" component={Page} />\r\n\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\r\n        <Route path=\"/account\" component={Account} />\r\n        <Route path=\"/comment\" component={CommentEdit} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport { history } from \"./_helpers\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport store from \"./store\";\r\nimport { App } from \"./app\";\r\n\r\nimport \"./styles.css\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"app\")\r\n);\r\n"],"sourceRoot":""}