{"version":3,"sources":["_helpers/fetch-wrapper.js","_helpers/history.js","_helpers/role.js","_helpers/alerttype.js","_services/account.service.js","_services/page.service.js","_services/comment.service.js","_services/file.service.js","store/storeModel.js","store/pagesStoreModel.js","store/accountsStoreModel.js","store/alertsStoreModel.js","store/index.js","_components/Alert.js","_components/Nav.js","_components/PrivateRoute.js","_components/InputControls.js","home/index.js","profile/Details.js","profile/Update.js","profile/index.js","admin/Overview.js","admin/users/List.js","admin/users/AddEdit.js","admin/users/index.js","admin/index.js","account/Login.js","account/Register.js","account/VerifyEmail.js","account/ForgotPassword.js","account/ResetPassword.js","account/index.js","page/PageSummary.js","page/Pages.js","page/Comment.js","page/Comments.js","page/PageDisplay.js","page/MarkdownEditor.js","page/FileUploader.js","page/PageEdit.js","page/Page.js","page/CommentEdit.js","app/index.js","index.js"],"names":["token","fetchWrapper","get","url","requestOptions","method","headers","authHeader","fetch","then","handleResponse","post","body","credentials","JSON","stringify","put","delete","setToken","jwtToken","isApiUrl","startsWith","process","console","log","window","account","Authorization","response","text","data","parse","ok","error","message","statusText","Promise","reject","history","createBrowserHistory","Role","AlertType","baseUrl","accountService","login","email","password","logout","push","refreshToken","register","params","verifyEmail","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","getById","id","create","update","x","pageService","a","pages","json","page","newPage","updatedPage","pageId","res","baseUrlComment","comment","updatedComment","commentService","newComment","_id","fileService","uploadFile","formData","storeModel","pStore","addLoadedPages","action","state","createComment","user","content","userName","userId","createPage","title","slug","subtitle","comments","removePage","filter","p","editComment","clearComment","setPage","map","addPage","replaceComment","c","removeComment","addComment","loadPages","thunk","actions","payload","loadPage","helpers","localState","getState","smallPage","find","updatePageContent","toUpdate","deletePage","saveComment","deleteComment","aStore","accounts","editAccount","refreshTokenTimeout","addAccount","addNewAccount","setAccount","setEditAccount","replaceAccount","removeAccount","acc","setAccounts","clearAccount","refreshTheToken","refreshAction","getAllAccounts","accs","getAccountById","createAccount","newAccount","updateAccount","deleteAccount","iStore","alerts","setAlertInternal","alert","removeAlert","clear","Math","floor","random","autoClose","undefined","setTimeout","success","type","info","warn","store","createStore","Alert","fade","useStoreState","s","useStoreActions","cssClasses","classes","alertTypeClass","join","length","className","index","key","onClick","dangerouslySetInnerHTML","__html","defaultProps","Nav","apiDocPath","exact","to","href","target","role","variant","PrivateRoute","Component","component","roles","rest","render","props","indexOf","pathname","from","location","Input","name","label","formMethods","errors","ref","Select","options","value","Submit","leftChildren","rightChildren","children","isSubmitting","Array","isArray","posright","disabled","React","Children","child","Home","Details","match","path","validationSchema","Yup","shape","required","min","when","schema","oneOf","Update","alertSuccess","alertError","initialValues","useForm","defaultValues","mode","resolver","yupResolver","handleSubmit","useState","isDeleting","setIsDeleting","onSubmit","fields","setStatus","setSubmitting","keepAfterRouteChange","catch","confirm","style","width","Profile","Overview","List","users","useHistory","useEffect","whiteSpace","editUser","colSpan","AddEdit","isAddMode","userValues","concat","createUser","updateUser","Users","Admin","Login","clearAlerts","Register","registerUser","VerifyEmail","EmailStatus","emailStatus","setEmailStatus","queryString","search","replace","getBody","ForgotPassword","ResetPassword","TokenStatus","tokenStatus","setTokenStatus","getForm","Account","PageSummary","Card","Body","Title","Subtitle","Pages","Container","Row","Col","Comment","Text","Comments","PageDisplay","createNewComment","source","escapeHtml","MarkdownEditor","val","updatedValue","height","onChange","e","d","v","current","FileUploader","file","setFile","filename","setFilename","preventDefault","FormData","append","encType","files","htmlFor","PageEdit","eduRef","useRef","para","rows","Page","useParams","modus","setModus","showConfirmation","setShowConfirmation","Modal","show","onHide","Header","closeButton","Footer","Button","CommentEdit","updateComment","App","useLocation","atob","split","timeout","Date","exp","getTime","now","clearTimeout","slice","StrictMode","document","getElementById"],"mappings":"mLAAIA,EAAQ,KACCC,EAAe,CAC1BC,IAOF,SAAaC,GACX,IAAMC,EAAiB,CACrBC,OAAQ,MACRC,QAASC,EAAWJ,IAEtB,OAAOK,MAAML,EAAKC,GAAgBK,KAAKC,IAXvCC,KAcF,SAAcR,EAAKS,GACjB,IAAMR,EAAiB,CACrBC,OAAQ,OACRC,QAAQ,aAAG,eAAgB,oBAAuBC,EAAWJ,IAC7DU,YAAa,UACbD,KAAME,KAAKC,UAAUH,IAEvB,OAAOJ,MAAML,EAAKC,GAAgBK,KAAKC,IApBvCM,IAuBF,SAAab,EAAKS,GAChB,IAAMR,EAAiB,CACrBC,OAAQ,MACRC,QAAQ,aAAG,eAAgB,oBAAuBC,EAAWJ,IAC7DS,KAAME,KAAKC,UAAUH,IAEvB,OAAOJ,MAAML,EAAKC,GAAgBK,KAAKC,IA5BvCO,OAgCF,SAAiBd,GACf,IAAMC,EAAiB,CACrBC,OAAQ,SACRC,QAASC,EAAWJ,IAEtB,OAAOK,MAAML,EAAKC,GAAgBK,KAAKC,IApCvCQ,SA2EF,SAAkBC,GAChBnB,EAAQmB,IAnCV,SAASZ,EAAWJ,GAWlB,IAAMiB,EAAWjB,EAAIkB,WAAWC,+CAChC,OAAItB,GAASoB,GACXG,QAAQC,IAAI,eACZD,QAAQC,IAAIC,OAAOC,SACZ,CAAEC,cAAc,UAAD,OAAY3B,KAE3B,GAIX,SAASU,EAAekB,GACtB,OAAOA,EAASC,OAAOpB,MAAK,SAACoB,GAC3B,IAAMC,EAAOD,GAAQf,KAAKiB,MAAMF,GAEhC,IAAKD,EAASI,GAAI,CAChB,IAAMC,EAASH,GAAQA,EAAKI,SAAYN,EAASO,WACjD,OAAOC,QAAQC,OAAOJ,GAGxB,OAAOH,K,YC3EEQ,EAAUC,cCFVC,EACF,QCDJ,IAAMC,EACF,UADEA,EAEJ,QAFIA,EAGL,OAHKA,EAIF,U,8BCFLC,EAAO,UAAMpB,8CAAN,aAEAqB,EAAiB,CAC5BC,MAgBF,SAAeC,EAAOC,GACpB,OAAO7C,EAAaU,KAAb,UAAqB+B,EAArB,iBAA6C,CAAEG,QAAOC,cAhB7DC,OAmBF,WAEE9C,EAAaU,KAAb,UAAqB+B,EAArB,iBAA6C,IAE7CJ,EAAQU,KAAK,MAtBbC,aAyBF,WACE,OAAOhD,EAAaU,KAAb,UAAqB+B,EAArB,kBAA8C,KAzBrDQ,SA4BF,SAAkBC,GAChB,OAAOlD,EAAaU,KAAb,UAAqB+B,EAArB,aAAyCS,IA5BhDC,YA+BF,SAAqBpD,GACnB,OAAOC,EAAaU,KAAb,UAAqB+B,EAArB,iBAA6C,CAAE1C,WA/BtDqD,eAkCF,SAAwBR,GACtB,OAAO5C,EAAaU,KAAb,UAAqB+B,EAArB,oBAAgD,CAAEG,WAlCzDS,mBAqCF,SAA4BtD,GAC1B,OAAOC,EAAaU,KAAb,UAAqB+B,EAArB,yBAAqD,CAAE1C,WArC9DuD,cAwCF,YAA8D,IAArCvD,EAAoC,EAApCA,MAAO8C,EAA6B,EAA7BA,SAAUU,EAAmB,EAAnBA,gBACxC,OAAOvD,EAAaU,KAAb,UAAqB+B,EAArB,mBAA+C,CACpD1C,QACA8C,WACAU,qBA3CFC,OA+CF,WACE,OAAOxD,EAAaC,IAAIwC,IA/CxBgB,QAkDF,SAAiBC,GACf,OAAO1D,EAAaC,IAAb,UAAoBwC,EAApB,YAA+BiB,KAlDtCC,OAqDF,SAAgBT,GACd,OAAOlD,EAAaU,KAAK+B,EAASS,IArDlCU,OAwDF,SAAgBF,EAAIR,GAElB,OADA5B,QAAQC,IAAI2B,GACLlD,EAAae,IAAb,UAAoB0B,EAApB,YAA+BiB,GAAMR,IAzD5ClC,OA6DF,SAAiB0C,GACf,OAAO1D,EAAagB,OAAb,UAAuByB,EAAvB,YAAkCiB,IAAMlD,MAAK,SAACqD,GAKnD,OAAOA,MAlET5C,SAsEF,SAAkBC,GAChBlB,EAAaiB,SAASC,KCvFxB,IAAMuB,EAAO,UAAMpB,8CAAN,UA4BAyC,EAAc,CACzBN,OA3BU,uCAAG,4BAAAO,EAAA,sEACKxD,MAAMkC,GADX,cACTuB,EADS,gBAECA,EAAMC,OAFP,cAEbD,EAFa,yBAGNA,GAHM,2CAAH,qDA4BVP,QAtBW,uCAAG,WAAOC,GAAP,eAAAK,EAAA,sEACGxD,MAAMkC,EAAU,IAAMiB,GADzB,cACVQ,EADU,gBAEDA,EAAKD,OAFJ,cAEdC,EAFc,yBAGPA,GAHO,2CAAH,sDAuBXP,OAlBU,uCAAG,WAAOO,GAAP,eAAAH,EAAA,6DACPI,EAAUnE,EAAaU,KAAb,UAAqB+B,GAAWyB,GADnC,kBAENC,GAFM,2CAAH,sDAmBVP,OAdU,uCAAG,WAAOF,EAAIQ,GAAX,eAAAH,EAAA,sEACW/D,EAAae,IAAb,UAAoB0B,EAApB,YAA+BiB,GAAMQ,GADhD,cACTE,EADS,yBAENA,GAFM,2CAAH,wDAeVpD,OAVW,uCAAG,WAAOqD,GAAP,eAAAN,EAAA,sEACE/D,EAAagB,OAAb,UAAuByB,EAAvB,YAAkC4B,IADpC,cACVC,EADU,yBAEPA,GAFO,2CAAH,uDCvBPC,EAAc,UAAMlD,8CAAN,aAEduC,EAAM,uCAAG,WAAOS,EAAQG,GAAf,eAAAT,EAAA,sEACc/D,EAAae,IAAb,UACtBwD,EADsB,YACJF,GACrBG,GAHW,cACTC,EADS,yBAKNA,GALM,2CAAH,wDAwBCC,EAAiB,CAC5Bf,OAjBU,uCAAG,WAAOU,EAAQG,GAAf,eAAAT,EAAA,sEACU/D,EAAaU,KAAb,UAClB6D,EADkB,YACAF,GACrBG,GAHW,cACTG,EADS,yBAKNA,GALM,2CAAH,wDAkBVf,SACA5C,OAXW,uCAAG,WAAOqD,EAAQG,GAAf,eAAAT,EAAA,sEACE/D,EAAagB,OAAb,UACXuD,EADW,YACOF,EADP,YACiBG,EAAQI,MAF3B,cACVN,EADU,yBAKPA,GALO,2CAAH,yDCpBP7B,EAAO,UAAMpB,8CAAN,iBAEAwD,EAAc,CACzBC,WAAW,WAAD,4BAAE,WAAOC,GAAP,iBAAAhB,EAAA,6DACVzC,QAAQC,IAAI,uBADF,kBAIahB,MAAMkC,EAAS,CAClCrC,OAAQ,OAERO,KAAMoE,IAPA,cAIJpD,EAJI,gBAUSA,EAASsC,OAVlB,cAURtC,EAVQ,OAWRL,QAAQC,IAAII,GACNM,EAAU,gBAAkBN,EAAW,qBAZrC,kBAaDM,GAbC,yCAeRX,QAAQC,IAAR,MAfQ,kBAgBD,MAhBC,0DAAF,mDAAC,ICOEyD,EANI,CACjBC,OCDsB,CACtBjB,MAAO,GACPE,KAAM,KACNM,QAAS,KAETU,eAAgBC,aAAO,SAACC,EAAOpB,GAC7BoB,EAAMpB,MAAQA,KAGhBqB,cAAeF,aAAO,SAACC,EAAOE,GAC5B,IAAMX,EAAa,CACjBY,QAAS,GACTC,SAAUF,EAAKE,SACfC,OAAQH,EAAK5B,IAEf0B,EAAMZ,QAAUG,KAGlBe,WAAYP,aAAO,SAACC,GAQlBA,EAAMlB,KAPU,CACdyB,MAAO,iBACPC,KAAM,UACNC,SAAU,GACVN,QAAS,GACTO,SAAU,OAKdC,WAAYZ,aAAO,SAACC,EAAOlB,GACzBkB,EAAMpB,MAAQoB,EAAMpB,MAAMgC,QAAO,SAACC,GAAD,OAAOA,EAAErB,MAAQV,EAAKU,OACvDQ,EAAMlB,KAAO,QAGfgC,YAAaf,aAAO,SAACC,EAAOZ,GAC1BY,EAAMZ,QAAUA,KAGlB2B,aAAchB,aAAO,SAACC,GACpBA,EAAMZ,QAAU,QAGlB4B,QAASjB,aAAO,SAACC,EAAOlB,GACtBkB,EAAMlB,KAAOA,EACbkB,EAAMpB,MAAQoB,EAAMpB,MAAMqC,KAAI,SAACJ,GAAD,OAAQA,EAAErB,MAAQV,EAAKU,IAAMV,EAAO+B,QAGpEK,QAASnB,aAAO,SAACC,EAAOlB,GACtBkB,EAAMpB,MAAMjB,KAAKmB,GACjBkB,EAAMlB,KAAOA,KAGfqC,eAAgBpB,aAAO,SAACC,EAAOZ,GAC7BY,EAAMlB,KAAK4B,SAAWV,EAAMlB,KAAK4B,SAASO,KAAI,SAACG,GAAD,OAC5CA,EAAE5B,MAAQJ,EAAQI,IAAMJ,EAAUgC,QAItCC,cAAetB,aAAO,SAACC,EAAOZ,GAC5BY,EAAMlB,KAAK4B,SAAWV,EAAMlB,KAAK4B,SAASE,QACxC,SAACQ,GAAD,OAAOA,EAAE5B,MAAQJ,EAAQI,UAI7B8B,WAAYvB,aAAO,SAACC,EAAOZ,GACzBY,EAAMlB,KAAK4B,SAAS/C,KAAKyB,MAK3BmC,UAAWC,YAAK,uCAAC,WAAOC,EAASC,GAAhB,eAAA/C,EAAA,sEACKD,EAAYN,SADjB,OACTQ,EADS,OAEf6C,EAAQ3B,eAAelB,GAFR,2CAAD,yDAKhB+C,SAAUH,YAAK,uCAAC,WAAOC,EAASjB,EAAMoB,GAAtB,mBAAAjD,EAAA,yDACRkD,EAAaD,EAAQE,WAOrBC,EAAYF,EAAWjD,MAAMoD,MAAK,SAACnB,GAAD,OAAOA,EAAEL,OAASA,KAR5C,iEAWK9B,EAAYL,QAAQ0D,EAAUvC,KAXnC,OAWRV,EAXQ,OAYd2C,EAAQT,QAAQlC,GAZF,2CAAD,2DAefmD,kBAAmBT,YAAK,uCAAC,WAAOC,EAASC,EAASE,GAAzB,6BAAAjD,EAAA,yDACfa,EAAwCkC,EAAxClC,IAAKgB,EAAmCkB,EAAnClB,KAAMD,EAA6BmB,EAA7BnB,MAAOE,EAAsBiB,EAAtBjB,SAAUN,EAAYuB,EAAZvB,QAC9B+B,EAAW,CACf1B,OACAD,QACAE,WACAN,YAGEX,EATmB,gCAWKd,EAAYF,OAAOgB,EAAK0C,GAX7B,OAWflD,EAXe,OAYrByC,EAAQT,QAAQhC,GAZK,wCAcCN,EAAYH,OAAO2D,GAdpB,QAcfnD,EAde,OAerB0C,EAAQP,QAAQnC,GAfK,4CAAD,2DAmBxBoD,WAAYX,YAAK,uCAAC,WAAOC,EAAS3C,EAAM8C,GAAtB,SAAAjD,EAAA,0DACZG,EAAKU,IADO,gCAERd,EAAY9C,OAAOkD,EAAKU,KAFhB,OAGdiC,EAAQd,WAAW7B,GAHL,2CAAD,2DAOjBsD,YAAaZ,YAAK,uCAAC,WAAOC,EAASrC,EAASwC,GAAzB,mBAAAjD,EAAA,yDACXkD,EAAaD,EAAQE,WAC3B5F,QAAQC,IAAIiD,IACRA,EAAQI,IAHK,wBAKftD,QAAQC,IAAI0F,EAAW/C,KAAKU,KALb,SAMcF,EAAed,OAC1CqD,EAAW/C,KAAKU,IAChBJ,GARa,OAMTC,EANS,OAUfoC,EAAQN,eAAe9B,GAVR,yCAYcC,EAAef,OAC1CsD,EAAW/C,KAAKU,IAChBJ,GAda,QAYTC,EAZS,OAiBfoC,EAAQH,WAAWjC,GAjBJ,4CAAD,2DAqBlBgD,cAAeb,YAAK,uCAAC,WAAOC,EAASrC,EAASwC,GAAzB,eAAAjD,EAAA,yDACbkD,EAAaD,EAAQE,YACvB1C,EAAQI,IAFO,gCAGXF,EAAe1D,OAAOiG,EAAW/C,KAAKU,IAAKJ,GAHhC,OAIjBqC,EAAQJ,cAAcjC,GAJL,2CAAD,4DDvIpBkD,OEH0B,CAC1BC,SAAU,GACVlG,QAAS,KACTmG,YAAa,KACbC,oBAAqB,KACrB7E,aAAc,KAId8E,WAAY3C,aAAO,SAACC,EAAO3D,GACzB2D,EAAM3D,QAAUA,EAChB2D,EAAMpC,aAAN,OAAqBvB,QAArB,IAAqBA,OAArB,EAAqBA,EAASP,SAC9BwB,EAAezB,SAAf,OAAwBQ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAASP,UACjCM,OAAOC,QAAUA,KAGnBsG,cAAe5C,aAAO,SAACC,EAAO3D,GAC5B2D,EAAMuC,SAAS5E,KAAKtB,GACpB2D,EAAMwC,YAAcnG,KAGtBuG,WAAY7C,aAAO,SAACC,EAAO3D,GACzBH,QAAQC,IAAI,UAAWE,GACvBiB,EAAezB,SAAf,OAAwBQ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAASP,UACjCkE,EAAM3D,QAAUA,EAChB2D,EAAMpC,aAAN,OAAqBvB,QAArB,IAAqBA,OAArB,EAAqBA,EAASP,SAC9BkE,EAAMwC,YAAcnG,KAGtBwG,eAAgB9C,aAAO,SAACC,EAAO3D,GAC7B2D,EAAMwC,YAAcnG,KAGtByG,eAAgB/C,aAAO,SAACC,EAAO3D,GAC7B2D,EAAMuC,SAAWvC,EAAMuC,SAAStB,KAAI,SAACtC,GAAD,OAClCA,EAAEL,KAAOjC,EAAQiC,IAAOK,EAAEL,GAAeK,EAAVtC,KAE7B2D,EAAM3D,QAAQiC,KAAOjC,EAAQiC,IAAO0B,EAAM3D,QAAQiC,KACpD0B,EAAM3D,QAAUA,EAChB2D,EAAMpC,aAAN,OAAqBvB,QAArB,IAAqBA,OAArB,EAAqBA,EAASP,SAC9BwB,EAAezB,SAAf,OAAwBQ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAASP,UACjCkE,EAAMwC,YAAcnG,MAIxB0G,cAAehD,aAAO,SAACC,EAAO1B,GAC5B,IAAM0E,EAAMhD,EAAMuC,SAAS3B,QAAO,SAACjC,GAAD,OAAOA,EAAEL,KAAOA,KAC9C0B,EAAM3D,QAAQiC,KAAOA,IACvB0B,EAAM3D,QAAU2G,EAChBhD,EAAMwC,YAAcQ,MAIxBC,YAAalD,aAAO,SAACC,EAAOuC,GAC1BvC,EAAMuC,SAAWA,KAGnBW,aAAcnD,aAAO,SAACC,GACpB1C,EAAezB,SAAS,MACxBmE,EAAM3D,QAAU,KAChB2D,EAAMpC,aAAe,KACrBxB,OAAOC,QAAU,QAKnBkB,MAAOiE,YAAK,uCAAC,WAAOC,EAASC,GAAhB,mBAAA/C,EAAA,6DACHnB,EAAoBkE,EAApBlE,MAAOC,EAAaiE,EAAbjE,SACfvB,QAAQC,IAAIqB,GAFD,SAGOF,EAAeC,MAAMC,EAAOC,GAHnC,OAGLuF,EAHK,OAIXvB,EAAQmB,WAAWI,GAJR,2CAAD,yDAOZtF,OAAQ8D,YAAK,uCAAC,WAAOC,GAAP,SAAA9C,EAAA,sEACNrB,EAAeI,SADT,OAEZ+D,EAAQyB,eAFI,2CAAD,uDAKbC,gBAAiB3B,YAAK,uCAAC,WAAOC,EAAS2B,GAAhB,eAAAzE,EAAA,sEACHrB,EAAeM,eADZ,OACfoF,EADe,OAErBvB,EAAQmB,WAAWI,GAFE,2CAAD,yDAKtBnF,SAAU2D,YAAK,uCAAC,WAAOC,EAASC,GAAhB,SAAA/C,EAAA,sEACRrB,EAAeO,SAAS6D,GADhB,2CAAD,yDAIf3D,YAAayD,YAAK,uCAAC,WAAOC,EAAS9G,GAAhB,SAAAgE,EAAA,sEACXrB,EAAeS,YAAYpD,GADhB,2CAAD,yDAIlBqD,eAAgBwD,YAAK,uCAAC,WAAOC,EAASjE,GAAhB,SAAAmB,EAAA,sEACdrB,EAAeU,eAAeR,GADhB,2CAAD,yDAIrBS,mBAAoBuD,YAAK,uCAAC,WAAOC,EAAS9G,GAAhB,SAAAgE,EAAA,sEAClBrB,EAAeW,mBAAmBtD,GADhB,2CAAD,yDAIzBuD,cAAesD,YAAK,uCAAC,WAAOC,EAASC,GAAhB,mBAAA/C,EAAA,6DACXhE,EAAqC+G,EAArC/G,MAAO8C,EAA8BiE,EAA9BjE,SAAUU,EAAoBuD,EAApBvD,gBADN,SAEbb,EAAeY,cAAcvD,EAAO8C,EAAUU,GAFjC,2CAAD,yDAKpBkF,eAAgB7B,YAAK,uCAAC,WAAOC,GAAP,eAAA9C,EAAA,sEACDrB,EAAec,SADd,OACdkF,EADc,OAEpB7B,EAAQwB,YAAYK,GAFA,2CAAD,uDAKrBC,eAAgB/B,YAAK,uCAAC,WAAOC,EAASnD,GAAhB,eAAAK,EAAA,sEACFrB,EAAee,QAAQC,GADrB,OACd0E,EADc,OAEpBvB,EAAQoB,eAAeG,GAFH,2CAAD,yDAKrBQ,cAAehC,YAAK,uCAAC,WAAOC,EAASgC,GAAhB,eAAA9E,EAAA,6DACnBzC,QAAQC,IAAIsH,GADO,SAEDnG,EAAeiB,OAAOkF,GAFrB,OAEbT,EAFa,OAGnB9G,QAAQC,IAAI6G,GACZvB,EAAQkB,cAAcK,GAJH,2CAAD,yDAOpBU,cAAelC,YAAK,uCAAC,WAAOC,EAASC,GAAhB,mBAAA/C,EAAA,6DACXL,EAAeoD,EAAfpD,GAAIR,EAAW4D,EAAX5D,OADO,SAEDR,EAAekB,OAAOF,EAAIR,GAFzB,OAEbkF,EAFa,OAGnBvB,EAAQqB,eAAeE,GAHJ,2CAAD,yDAMpBW,cAAenC,YAAK,uCAAC,WAAOC,EAASnD,GAAhB,SAAAK,EAAA,sEACbrB,EAAe1B,OAAO0C,GADT,OAEnBmD,EAAQsB,cAAczE,GAFH,2CAAD,0DF3HpBsF,OGJuB,CACvBC,OAAQ,GAIRC,iBAAkB/D,aAAO,SAACC,EAAO+D,GAC/B/D,EAAM6D,OAAOlG,KAAKoG,MAGpBC,YAAajE,aAAO,SAACC,EAAO+D,GAC1B/D,EAAM6D,OAAS7D,EAAM6D,OAAOjD,QAAO,SAACnC,GAAD,OAAOA,EAAEH,KAAOyF,EAAMzF,SAG3D2F,MAAOlE,aAAO,SAACC,GACbA,EAAM6D,OAAS,MAKjBE,MAAOvC,YAAK,uCAAC,WAAOC,EAASsC,GAAhB,SAAApF,EAAA,sDACXoF,EAAMzF,GAAK4F,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BL,EAAMM,eAAgCC,IAApBP,EAAMM,WAAiCN,EAAMM,UAC/D5C,EAAQqC,iBAAiBC,GACrBA,EAAMM,WACRE,YAAW,kBAAM9C,EAAQuC,YAAYD,KAAQ,MALpC,2CAAD,yDASZS,QAAShD,YAAK,uCAAC,WAAOC,EAASsC,GAAhB,SAAApF,EAAA,6DACboF,EAAMU,KAAOrH,EADA,SAEPqE,EAAQsC,MAAMA,GAFP,2CAAD,yDAKdnH,MAAO4E,YAAK,uCAAC,WAAOC,EAASsC,GAAhB,SAAApF,EAAA,6DACXoF,EAAMU,KAAOrH,EADF,SAELqE,EAAQsC,MAAMA,GAFT,2CAAD,yDAKZW,KAAMlD,YAAK,uCAAC,WAAOC,EAASsC,GAAhB,SAAApF,EAAA,6DACVoF,EAAMU,KAAOrH,EADH,SAEJqE,EAAQsC,MAAMA,GAFV,2CAAD,yDAKXY,KAAMnD,YAAK,uCAAC,WAAOC,EAASsC,GAAhB,SAAApF,EAAA,6DACVoF,EAAMU,KAAOrH,EADH,SAEJqE,EAAQsC,MAAMA,GAFV,2CAAD,2DCzCEa,EAFDC,YAAYjF,G,QCY1B,SAASkF,EAAT,GAA6B,EAAZxG,GAAY,EAARyG,KAAS,IACtBlB,EAASmB,aAAc,SAACC,GAAD,OAAOA,EAAErB,OAAOC,UACvCG,EAAckB,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOI,eAEpD,SAASmB,EAAWpB,GAAQ,IAAD,EACzB,GAAKA,EAAL,CAEA,IAAMqB,EAAU,CAAC,QAAS,qBAEpBC,GAAc,mBACjBjI,EAAoB,uBADH,cAEjBA,EAAkB,sBAFD,cAGjBA,EAAiB,oBAHA,cAIjBA,EAAoB,uBAJH,GAapB,OANAgI,EAAQzH,KAAK0H,EAAetB,EAAMU,OAE9BV,EAAMgB,MACRK,EAAQzH,KAAK,QAGRyH,EAAQE,KAAK,MAGtB,OAAKzB,EAAO0B,OAGV,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACZ3B,EAAO5C,KAAI,SAAC8C,EAAO0B,GAAR,OACV,yBAAKC,IAAKD,EAAOD,UAAWL,EAAWpB,IACrC,4BAAQyB,UAAU,QAAQG,QAAS,kBAAM3B,EAAYD,KAArD,QAGA,0BAAM6B,wBAAyB,CAAEC,OAAQ9B,EAAMlH,iBAV9B,KAmB7BiI,EAAMgB,aAjDe,CACnBxH,GAAI,gBACJyG,MAAM,G,WCPR,SAASgB,IACP,IAAM7F,EAAO8E,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WACrCqB,EAASwH,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAO5E,UACzCsI,EAAU,UAAM/J,8CAAN,iBAEhB,OACE,6BACE,yBAAKuJ,UAAU,mDACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAASS,OAAK,EAACC,GAAG,IAAIV,UAAU,qBAAhC,QAGA,kBAAC,IAAD,CAASS,OAAK,EAACC,GAAG,WAAWV,UAAU,qBAAvC,iBAGA,uBAAGA,UAAU,oBAAoBW,KAAMH,EAAYI,OAAO,UAA1D,qBAGA,kBAAC,IAAD,CAASF,GAAG,WAAWV,UAAU,qBAAjC,WAGCtF,GAAQA,EAAKmG,OAASlJ,GACrB,kBAAC,IAAD,CAAS+I,GAAG,SAASV,UAAU,qBAA/B,UAKJ,yBAAKA,UAAU,sBACZtF,GACC,0BAAMsF,UAAU,oBAAhB,SAA0CtF,EAAKE,UAEhDF,GACC,uBAAGyF,QAAS,kBAAMjI,KAAU8H,UAAU,sBAAtC,WAIAtF,GACA,uBACEsF,UAAU,oBACVG,QAAS,kBAAM1I,EAAQU,KAAK,mBAC5B2I,QAAQ,mBAHV,Y,YCtCZ,SAASC,EAAT,GAAiE,IAA9BC,EAA6B,EAAxCC,UAAsBC,EAAkB,EAAlBA,MAAUC,EAAQ,qCACxDtK,EAAU2I,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WAC9C,OACE,kBAAC,IAAD,iBACMsK,EADN,CAEEC,OAAQ,SAACC,GAEP,OADA3K,QAAQC,IAAI,iBACPE,EAcDqK,IAA0C,IAAjCA,EAAMI,QAAQzK,EAAQgK,MAE1B,kBAAC,IAAD,CAAUH,GAAI,CAAEa,SAAU,OAI5B,kBAACP,EAAcK,GAjBlB,kBAAC,IAAD,CACEX,GAAI,CACFa,SAAU,iBACV/G,MAAO,CAAEgH,KAAMH,EAAMI,iB,YCd9B,SAASC,EAAT,GAAuD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAgBV,EAAQ,8CACnD9I,EAAqBwJ,EAArBxJ,SAAUyJ,EAAWD,EAAXC,OAElB,OACE,yBAAK9B,UAAU,cACb,+BAAQ4B,GAAgBD,GAExB,yCACEA,KAAMA,EACNI,IAAK1J,GACD8I,EAHN,CAIEnB,UAAW,gBAAkB8B,EAAOH,GAAQ,cAAgB,OAE9D,kBAAC,IAAD,CAAcG,OAAQA,EAAQH,KAAMA,KAKnC,SAASK,EAAT,GAAiE,IAA/CL,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOK,EAAiC,EAAjCA,QAASJ,EAAwB,EAAxBA,YAAgBV,EAAQ,wDAC7D9I,EAAqBwJ,EAArBxJ,SAAUyJ,EAAWD,EAAXC,OAClB,OACE,yBAAK9B,UAAU,cACb,+BAAQ4B,GAAgBD,GACxB,0CACEA,KAAMA,EACNI,IAAK1J,GACD8I,EAHN,CAIEnB,UAAW,gBAAkB8B,EAAOH,GAAQ,cAAgB,MAE3DM,EAAQxG,KAAI,SAACyG,GAAD,OACX,4BAAQhC,IAAKgC,EAAOA,MAAOA,GACxBA,OAIP,kBAAC,IAAD,CAAcJ,OAAQA,EAAQH,KAAMA,KAKnC,SAASQ,EAAT,GAA4D,IAI7DC,EACAC,EALmBT,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaS,EAAqB,EAArBA,SACnCC,GADwD,kDACvCV,EAAjBU,cAcR,OAbA7L,QAAQC,IAAI2L,GAKRE,MAAMC,QAAQH,IAChBF,EAAeE,EAASlH,QAAO,SAACQ,GAAD,MAA4B,SAArBA,EAAEyF,MAAMqB,YAC9CL,EAAgBC,EAASlH,QAAO,SAACQ,GAAD,MAA4B,SAArBA,EAAEyF,MAAMqB,cAE/CN,EAAe,CAACE,GAChBD,EAAgB,IAIhB,yBAAKrC,UAAU,YACb,yBAAKA,UAAU,kBACb,4BACEf,KAAK,SACL0D,SAAUJ,EACVvC,UAAU,mBAETuC,GACC,0BAAMvC,UAAU,0CAGjB4B,GAEFgB,IAAMC,SAASpH,IAAI2G,GAAc,SAACU,GACjC,OAAOA,MAIX,yBAAK9C,UAAU,8BACd4C,IAAMC,SAASpH,IAAI4G,GAAe,SAACS,GAClC,OAAOA,MC7Ef,SAASC,IACP,OACE,yBAAK/C,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAd,4BACA,+EACA,yBAAKA,UAAU,UACb,wMAKA,2LAOF,wDACA,wBAAIA,UAAU,kBACZ,kPAMA,mNAKA,iHAIA,yFACA,yIAIA,kIAIA,mHAIA,mHAIA,qHAIA,gHCvDV,SAASgD,EAAT,GAA6B,IAAVC,EAAS,EAATA,MACXvI,EAAO8E,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WACnCqM,EAASD,EAATC,KAER,OACE,6BACE,0CACA,2BACE,0CADF,IAC2BxI,EAAKE,SAC9B,6BACA,2CAHF,IAG4BF,EAAK1C,OAEjC,2BACE,kBAAC,IAAD,CAAM0I,GAAE,UAAKwC,EAAL,YAAR,oB,oCCTFC,EAAmBC,MAAaC,MAAM,CAC1CzI,SAAUwI,MAAaE,SAAS,wBAChCtL,MAAOoL,MAAapL,MAAM,oBAAoBsL,SAAS,qBACvDrL,SAAUmL,MAAaG,IAAI,EAAG,0CAC9B5K,gBAAiByK,MACdI,KAAK,YAAY,SAACvL,EAAUwL,GAC3B,GAAIxL,EAAU,OAAOwL,EAAOH,SAAS,mCAEtCI,MAAM,CAACN,IAAQ,aAAc,0BAGlC,SAASO,EAAT,GAA8B,IAAZlM,EAAW,EAAXA,QACViD,EAAO8E,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WACrCmC,EAAS0G,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOoB,iBACzCC,EAAgBuB,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOqB,iBAChDyF,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAC/C6E,EAAanE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOhH,SAE7C0M,EAAgB,CACpBlJ,SAAUF,EAAKE,SACf5C,MAAO0C,EAAK1C,MACZC,SAAU,GACVU,gBAAiB,IAGbkJ,EAAckC,YAAQ,CAC1BC,cAAeF,EACfG,KAAM,SACNC,SAAUC,YAAYhB,KAGhBiB,EAAiBvC,EAAjBuC,aApBmB,MAwCSC,oBAAS,GAxClB,mBAwCpBC,EAxCoB,KAwCRC,EAxCQ,KAmD3B,OACE,0BAAMC,SAAUJ,GA9BlB,SAAkBK,EAAlB,GAAyD,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,cACrCD,IACAhO,QAAQC,IAAI+D,EAAK5B,IACjBpC,QAAQC,IAAI8N,GACZzL,EAAO,CAAEF,GAAI4B,EAAK5B,GAAIR,OAAQmM,IAC3B7O,MAAK,WACJgO,EAAa,CACXvM,QAAS,oBACT4K,QAAS,CAAE2C,sBAAsB,KAEnCnN,EAAQU,KAAK,QAEd0M,OAAM,SAACzN,GACNuN,GAAc,GACdd,EAAW,CAAExM,QAASD,WAiBxB,8CACA,kBAACsK,EAAD,CAAOC,KAAK,WAAWC,MAAM,WAAWC,YAAaA,IACrD,kBAACH,EAAD,CAAOC,KAAK,QAAQC,MAAM,QAAQC,YAAaA,IAE/C,wBAAI7B,UAAU,QAAd,mBACA,oEACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC0B,EAAD,CACEC,KAAK,WACLC,MAAM,WACN3C,KAAK,WACL4C,YAAaA,KAGjB,yBAAK7B,UAAU,OACb,kBAAC0B,EAAD,CACEC,KAAK,kBACLC,MAAM,mBACN3C,KAAK,WACL4C,YAAaA,MAKnB,kBAACM,EAAD,CAAQP,MAAM,SAASC,YAAaA,GAClC,4BACE5C,KAAK,SACLkB,QAAS,WAvCXvJ,OAAOkO,QAAQ,mBACjBP,GAAc,GAEdpG,EAAczD,EAAK5B,IAAIlD,MAAK,kBAC1BgO,EAAa,qCAoCX5D,UAAU,sBACV+E,MAAO,CAAEC,MAAO,QAChBrC,SAAU2B,GAETA,EACC,0BAAMtE,UAAU,qCAEhB,yCAGJ,kBAAC,IAAD,CAAMU,GAAG,IAAIV,UAAU,gBAAvB,YCzGR,SAASiF,EAAT,GAA6B,IACjB/B,EADgB,EAATD,MACPC,KAER,OACI,yBAAKlD,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOS,OAAK,EAACyC,KAAMA,EAAMjC,UAAW+B,IACpC,kBAAC,IAAD,CAAOE,KAAI,UAAKA,EAAL,WAAoBjC,UAAW0C,OCX9D,SAASuB,EAAT,GAA8B,IAClBhC,EADiB,EAATD,MACRC,KAER,OACI,6BACI,qCACA,mFACA,2BAAG,kBAAC,IAAD,CAAMxC,GAAE,UAAKwC,EAAL,WAAR,kBCNf,SAASiC,GAAT,GAA0B,IAAVlC,EAAS,EAATA,MACRmC,EAAQ5F,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOC,YACtCc,EAAiB6B,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOe,kBACjDR,EAAiBqC,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOO,kBACjDc,EAAgBuB,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOqB,iBAC9C+E,EAASD,EAATC,KAEFzL,EAAU4N,cAgBhB,OAdAC,qBAAU,WACRzH,MAEC,IAYD,6BACE,qCACA,gFACA,kBAAC,IAAD,CAAM6C,GAAE,UAAKwC,EAAL,QAAiBlD,UAAU,+BAAnC,YAGA,2BAAOA,UAAU,uBACf,+BACE,4BACE,wBAAI+E,MAAO,CAAEC,MAAO,QAApB,YACA,wBAAID,MAAO,CAAEC,MAAO,QAApB,SACA,wBAAID,MAAO,CAAEC,MAAO,QAApB,QACA,wBAAID,MAAO,CAAEC,MAAO,WAGxB,+BACGI,GACCA,EAAM3J,KAAI,SAACf,GAAD,OACR,wBAAIwF,IAAKxF,EAAK5B,IACZ,4BAAK4B,EAAKE,UACV,4BAAKF,EAAK1C,OACV,4BAAK0C,EAAKmG,MACV,wBAAIkE,MAAO,CAAEQ,WAAY,WACvB,4BACEpF,QAAS,kBA9B3B,SAAkBzF,GAChB2C,EAAe3C,GACfjD,EAAQU,KAAR,UAAgB+K,EAAhB,iBAA6BxI,EAAK5B,KA4BH0M,CAAS9K,IACxBqK,MAAO,CAAEC,MAAO,QAChBhF,UAAU,+BAHZ,QAOA,4BACEG,QAAS,kBAzCPrH,EAyCwB4B,EAAK5B,QAxC/CqF,EAAcrF,GADhB,IAAoBA,GA0CFkH,UAAU,wBACV+E,MAAO,CAAEC,MAAO,QAChBrC,SAAUjI,EAAK4J,YAEd5J,EAAK4J,WACJ,0BAAMtE,UAAU,qCAEhB,+CAMVoF,GACA,4BACE,wBAAIK,QAAQ,IAAIzF,UAAU,eACxB,0BAAMA,UAAU,uDClEhC,SAAS0F,GAAT,GAAsC,IAAnBjO,EAAkB,EAAlBA,QAASwL,EAAS,EAATA,MACpBvI,EAAO8E,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOE,eACrCjE,EAAS2G,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOkB,iBACzChF,EAAS0G,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOoB,iBACzCrF,EAAU6G,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOiB,kBAC1C6F,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAC/C6E,EAAanE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOhH,SAE7C0B,EAAKmK,EAAM3K,OAAOQ,GAClB6M,GAAa7M,EAEnBwM,qBAAU,WACHK,GACH9M,EAAQC,KAGT,IAEH,IAUM8M,EAAa,CACjBhL,SAAQ,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAME,SAChB5C,MAAK,OAAE0C,QAAF,IAAEA,OAAF,EAAEA,EAAM1C,MACb6I,KAAI,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAMmG,KACZ5I,SAAU,GACVU,gBAAiB,IAGbmL,EAAgB6B,EAhBF,CAClB/K,SAAU,GACV5C,MAAO,GACP6I,KAAM,GACN5I,SAAU,GACVU,gBAAiB,IAW6BiN,EAE1CzC,EAAmBC,MAAaC,MAAM,CAC1CzI,SAAUwI,MAAaE,SAAS,wBAChCtL,MAAOoL,MAAapL,MAAM,oBAAoBsL,SAAS,qBACvDzC,KAAMuC,MAAaE,SAAS,oBAC5BrL,SAAUmL,MACPyC,OAAOF,EAAYvC,MAAaE,SAAS,wBAA0B,MACnEC,IAAI,EAAG,0CACV5K,gBAAiByK,MACdI,KAAK,YAAY,SAACvL,EAAUwL,GAC3B,GAAIxL,EAAU,OAAOwL,EAAOH,SAAS,mCAEtCI,MAAM,CAACN,IAAQ,aAAc,0BA0ClC,IAAMvB,EAAckC,YAAQ,CAC1BC,cAAeF,EACfG,KAAM,SACNC,SAAUC,YAAYhB,KAGhBiB,EAAiBvC,EAAjBuC,aAER,OACE,0BAAMI,SAAUJ,GAhDlB,SAAkBK,EAAlB,GAAyD,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,cACrCD,IACIiB,EAON,SAAoBlB,EAAQE,GAC1B5L,EAAO0L,GACJ7O,MAAK,WACJgO,EAAa,CACXvM,QAAS,0BACTuN,sBAAsB,IAExBnN,EAAQU,KAAK,QAEd0M,OAAM,SAACzN,GACNuN,GAAc,GACdd,EAAW,CAAExM,QAASD,OAjBxB0O,CAAWrB,EAAQE,GAqBvB,SAAoB7L,EAAI2L,EAAQE,GAC9B3L,EAAO,CAAEF,GAAIA,EAAIR,OAAQmM,IACtB7O,MAAK,WACJgO,EAAa,CACXvM,QAAS,oBACTuN,sBAAsB,IAExBnN,EAAQU,KAAK,SAEd0M,OAAM,SAACzN,GACNuN,GAAc,GACdd,EAAW,CAAExM,QAASD,OA9BxB2O,CAAWjN,EAAI2L,EAAQE,OA4CvB,4BAAKgB,EAAY,WAAa,aAE9B,kBAACjE,EAAD,CAAOC,KAAK,WAAWC,MAAM,WAAWC,YAAaA,IAErD,yBAAK7B,UAAU,YACb,yBAAKA,UAAU,SACb,kBAAC0B,EAAD,CAAOC,KAAK,QAAQC,MAAM,QAAQC,YAAaA,KAEjD,yBAAK7B,UAAU,OACb,kBAACgC,EAAD,CACEL,KAAK,OACLC,MAAM,OACNK,QA/FM,CAAC,GAAI,OAAQ,SAgGnBJ,YAAaA,OAKjB8D,GACA,6BACE,wBAAI3F,UAAU,QAAd,mBACA,qEAIJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC0B,EAAD,CACEC,KAAK,WACLC,MAAM,WACN3C,KAAK,WACL4C,YAAaA,KAGjB,yBAAK7B,UAAU,OACb,kBAAC0B,EAAD,CACEC,KAAK,kBACLC,MAAM,mBACN3C,KAAK,WACL4C,YAAaA,MAKnB,kBAACM,EAAD,CAAQP,MAAM,OAAOC,YAAaA,GAChC,kBAAC,IAAD,CAAMnB,GAAIiF,EAAY,IAAM,KAAM3F,UAAU,gBAA5C,YCtJR,SAASgG,GAAT,GAA2B,IACf9C,EADc,EAATD,MACLC,KAER,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOzC,OAAK,EAACyC,KAAMA,EAAMjC,UAAWkE,KACpC,kBAAC,IAAD,CAAOjC,KAAI,UAAKA,EAAL,QAAiBjC,UAAWyE,KACvC,kBAAC,IAAD,CAAOxC,KAAI,UAAKA,EAAL,aAAsBjC,UAAWyE,MCPxD,SAASO,GAAT,GAA2B,IACjB/C,EADgB,EAATD,MACPC,KAER,OACE,yBAAKlD,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACyC,KAAMA,EAAMjC,UAAWiE,IACpC,kBAAC,IAAD,CAAOhC,KAAI,UAAKA,EAAL,UAAmBjC,UAAW+E,QCNnD,IAAM7C,GAAmBC,MAAaC,MAAM,CAC1CrL,MAAOoL,MAAapL,MAAM,oBAAoBsL,SAAS,qBACvDrL,SAAUmL,MAAaE,SAAS,0BAGlC,SAAS4C,GAAT,GAAuC,IAAtBzO,EAAqB,EAArBA,QAASgK,EAAY,EAAZA,SAClB1J,EAAQ2H,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAO/E,SACxC8L,EAAanE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOhH,SAC7C+O,EAAczG,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOK,SAE9CoD,EAAckC,YAAQ,CAC1BE,KAAM,SACNC,SAAUC,YAAYhB,MAGhBiB,EAAiBvC,EAAjBuC,aAcR,OACE,0BAAMI,SAAUJ,GAblB,YAAwC,IAApBpM,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzBkO,IACApO,EAAM,CAAEC,QAAOC,aACZrC,MAAK,WAAO,IACH4L,GAASC,EAASjH,OAAS,CAAEgH,KAAM,CAAED,SAAU,OAA/CC,KACR/J,EAAQU,KAAKqJ,MAEdqD,OAAM,SAACzN,GACNyM,EAAW,CAAExM,QAASD,WAMxB,wBAAI4I,UAAU,eAAd,SACA,yBAAKA,UAAU,aACb,kBAAC0B,EAAD,CAAOC,KAAK,QAAQC,MAAM,QAAQC,YAAaA,IAC/C,kBAACH,EAAD,CACEC,KAAK,WACLC,MAAM,WACNC,YAAaA,EACb5C,KAAK,aAEP,kBAACkD,EAAD,CAAQP,MAAM,QAAQC,YAAaA,GACjC,kBAAC,IAAD,CAAMnB,GAAG,WAAWV,UAAU,gBAA9B,YAGA,kBAAC,IAAD,CACEU,GAAG,kBACHV,UAAU,oBACV0C,SAAS,QAHX,uBC5CV,IAAMS,GAAmBC,MAAaC,MAAM,CAC1CzI,SAAUwI,MAAaE,SAAS,wBAChCtL,MAAOoL,MAAapL,MAAM,oBAAoBsL,SAAS,qBACvDrL,SAAUmL,MACPG,IAAI,EAAG,0CACPD,SAAS,wBACZ3K,gBAAiByK,MACdM,MAAM,CAACN,IAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAGd,SAAS8C,GAAT,GAAgC,IAAZ3O,EAAW,EAAXA,QACZ4O,EAAe3G,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOzE,YAC/CuL,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAC/C6E,EAAanE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOhH,SAE7CyK,EAAckC,YAAQ,CAC1BE,KAAM,SACNC,SAAUC,YAAYhB,MAGhBiB,EAAiBvC,EAAjBuC,aAiBR,OACE,0BAAMI,SAAUJ,GAhBlB,SAAkBnN,GAChBoP,EAAapP,GACVrB,MAAK,WACJgO,EAAa,CACXvM,QACE,iFACFuN,sBAAsB,IAExBnN,EAAQU,KAAK,YAEd0M,OAAM,SAACzN,GACNyM,EAAW,CAAExM,QAASD,WAMxB,wBAAI4I,UAAU,eAAd,YACA,yBAAKA,UAAU,aACb,kBAAC0B,EAAD,CAAOC,KAAK,WAAWC,MAAM,WAAWC,YAAaA,IACrD,kBAACH,EAAD,CAAOC,KAAK,QAAQC,MAAM,QAAQC,YAAaA,IAE/C,yBAAK7B,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC0B,EAAD,CACEC,KAAK,WACLC,MAAM,WACN3C,KAAK,WACL4C,YAAaA,KAGjB,yBAAK7B,UAAU,OACb,kBAAC0B,EAAD,CACEC,KAAK,kBACLC,MAAM,mBACN3C,KAAK,WACL4C,YAAaA,MAKnB,kBAACM,EAAD,CAAQP,MAAM,WAAWC,YAAaA,GACpC,kBAAC,IAAD,CAAMnB,GAAG,QAAQV,UAAU,eAAe0C,SAAS,SAAnD,a,wBCpEV,SAAS4D,GAAT,GAAmC,IAAZ7O,EAAW,EAAXA,QACfc,EAAcmH,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOvE,eAC9CqL,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAE/CuH,EACO,YADPA,EAEI,SANsB,EASMlC,mBAASkC,GATf,mBASzBC,EATyB,KASZC,EATY,KA+ChC,OApCAnB,qBAAU,WAAO,IACPnQ,EAAUuR,KAAYxP,MAAMN,OAAO6K,SAASkF,QAA5CxR,MAGRsC,EAAQmP,QAAQhQ,OAAO6K,SAASF,UAEhChJ,EAAYpD,GACTS,MAAK,WACJgO,EAAa,CACXvM,QAAS,6CACTuN,sBAAsB,IAExBnN,EAAQU,KAAK,YAEd0M,OAAM,WACL4B,EAAeF,QAGlB,IAmBD,6BACE,wBAAIvG,UAAU,eAAd,gBACA,yBAAKA,UAAU,aAnBnB,WACE,OAAQwG,GACN,KAAKD,EACH,OAAO,6CACT,KAAKA,EACH,OACE,+FACkE,IAChE,kBAAC,IAAD,CAAM7F,GAAG,mBAAT,mBAFF,UAKJ,QACE,OAAO,sCAOmBmG,KC/ClC,IAAM1D,GAAmBC,MAAaC,MAAM,CAC1CrL,MAAOoL,MAAapL,MAAM,oBAAoBsL,SAAS,uBAGzD,SAASwD,KACP,IAAMtO,EAAiBkH,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOtE,kBACjDoL,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAC/C6E,EAAanE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOhH,SAC7C+O,EAAczG,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOK,SAE9CoD,EAAckC,YAAQ,CAC1BE,KAAM,SACNC,SAAUC,YAAYhB,MAGhBiB,EAAiBvC,EAAjBuC,aAcR,OACE,0BAAMI,SAAUJ,GAblB,YAA8B,IAAVpM,EAAS,EAATA,MAClBmO,IACA3N,EAAeR,GACZpC,MAAK,kBACJgO,EAAa,CACXvM,QAAS,+DAGZwN,OAAM,SAACzN,GAAD,OAAWyM,EAAW,CAAExM,QAASD,WAMxC,wBAAI4I,UAAU,eAAd,mBACA,yBAAKA,UAAU,aACb,kBAAC0B,EAAD,CAAOC,KAAK,QAAQC,MAAM,QAAQC,YAAaA,IAC/C,kBAACM,EAAD,CAAQP,MAAM,kBAAkBC,YAAaA,GAC3C,kBAAC,IAAD,CAAMnB,GAAG,QAAQV,UAAU,eAAe0C,SAAS,SAAnD,aClCV,IAAMS,GAAmBC,MAAaC,MAAM,CAC1CpL,SAAUmL,MACPG,IAAI,EAAG,0CACPD,SAAS,wBACZ3K,gBAAiByK,MACdM,MAAM,CAACN,IAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAGd,SAASyD,GAAT,GAAqC,IAAZtP,EAAW,EAAXA,QACjBgB,EAAqBiH,aACzB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOrE,sBAGZmL,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAC/C6E,EAAanE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOhH,SAC7C+O,EAAczG,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOK,SAE9C/F,EAAgBgH,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOpE,iBAEhDsO,EACQ,aADRA,EAEG,QAFHA,EAGK,UAduB,EAiBR3C,mBAAS,MAjBD,mBAiB3BlP,EAjB2B,KAiBpBkB,EAjBoB,OAkBIgO,mBAAS2C,GAlBb,mBAkB3BC,EAlB2B,KAkBdC,EAlBc,KAoBlC5B,qBAAU,WAAO,IACPnQ,EAAUuR,KAAYxP,MAAMN,OAAO6K,SAASkF,QAA5CxR,MAGRsC,EAAQmP,QAAQhQ,OAAO6K,SAASF,UAEhC9I,EAAmBtD,GAChBS,MAAK,WACJS,EAASlB,GACT+R,EAAeF,MAEhBnC,OAAM,WACLqC,EAAeF,QAGlB,IAEH,IAAMnF,EAAckC,YAAQ,CAC1BE,KAAM,SACNC,SAAUC,YAAYhB,MAiExB,OACE,6BACE,wBAAInD,UAAU,eAAd,kBACA,yBAAKA,UAAU,aArBnB,SAAiB6B,GACf,OAAQoF,GACN,KAAKD,EACH,OA/CN,SAAiBnF,GAAc,IACrBuC,EAAiBvC,EAAjBuC,aAkBR,OACE,0BAAMI,SAAUJ,GAjBlB,cAAqE,IAAjDnM,EAAgD,EAAhDA,SAAUU,EAAsC,EAAtCA,gBAAqBgM,EAAiB,EAAjBA,cACjDwB,IACAzN,EAAc,CAAEvD,QAAO8C,WAAUU,oBAC9B/C,MAAK,WACJgO,EAAa,CACXvM,QAAS,+CACT4K,QAAS,CAAE2C,sBAAsB,KAEnCnN,EAAQU,KAAK,YAEd0M,OAAM,SAACzN,GACNuN,GAAc,GACdd,EAAW,CAAExM,QAASD,WAMxB,kBAACsK,EAAD,CACEC,KAAK,WACLC,MAAM,WACN3C,KAAK,WACL4C,YAAaA,IAGf,kBAACH,EAAD,CACEC,KAAK,kBACLC,MAAM,mBACN3C,KAAK,WACL4C,YAAaA,IAGf,kBAACM,EAAD,CAAQP,MAAM,iBAAiBC,YAAaA,GAC1C,kBAAC,IAAD,CAAMnB,GAAG,QAAQV,UAAU,eAAe0C,SAAS,SAAnD,YAWKyE,CAAQtF,GACjB,KAAKmF,EACH,OACE,+GAEa,kBAAC,IAAD,CAAMtG,GAAG,mBAAT,mBAFb,UAKJ,KAAKsG,EACH,OAAO,oDACT,QACE,OAAO,sCAOmBH,CAAQhF,KCnH1C,SAASuF,GAAT,GAAsC,IAAnB3P,EAAkB,EAAlBA,QACTyL,EAD2B,EAATD,MAClBC,KACFrM,EAAU2I,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WAU9C,OARAyO,qBAAU,WAEJzO,GACFY,EAAQU,KAAK,OAGd,IAGD,yBAAK6H,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkD,KAAI,UAAKA,EAAL,UAAmBjC,UAAWiF,KACzC,kBAAC,IAAD,CAAOhD,KAAI,UAAKA,EAAL,aAAsBjC,UAAWmF,KAC5C,kBAAC,IAAD,CAAOlD,KAAI,UAAKA,EAAL,iBAA0BjC,UAAWqF,KAChD,kBAAC,IAAD,CACEpD,KAAI,UAAKA,EAAL,oBACJjC,UAAW6F,KAEb,kBAAC,IAAD,CACE5D,KAAI,UAAKA,EAAL,mBACJjC,UAAW8F,U,aCjCZ,SAASM,GAAT,GAAgC,IAAT/N,EAAQ,EAARA,KAC9B7B,EAAU4N,cAGhB,OAFA3O,QAAQC,IAAI2C,GAGV,kBAACgO,GAAA,EAAD,CACEtH,UAAU,gBACVG,QAAS,kBAAM1I,EAAQU,KAAK,UAAYmB,EAAK0B,QAE7C,kBAACsM,GAAA,EAAKC,KAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,KAAalO,EAAKyB,OAClB,kBAACuM,GAAA,EAAKG,SAAN,KAAgBnO,EAAK2B,Y,wCCNd,SAASyM,KACtB,IAAMtO,EAAQoG,aAAc,SAACC,GAAD,OAAOA,EAAEpF,OAAOjB,SACtC0B,EAAa4E,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOS,cAC7CrD,EAAU4N,cAOhB,OACE,oCACE,kBAACsC,GAAA,EAAD,CAAW3H,UAAU,gBACnB,4BACEA,UAAU,gCACVG,QAVe,WACrBrF,IACArD,EAAQU,KAAK,oBAUP,kBAAC,KAAD,CAAQ6H,UAAU,iCAEpB,kBAAC4H,GAAA,EAAD,KACE,wBAAI5H,UAAU,aAAd,kBAGD5G,EAAMqC,KAAI,SAACJ,GAAD,OACT,kBAACuM,GAAA,EAAD,CAAK1H,IAAK7E,EAAErB,KACV,kBAAC6N,GAAA,EAAD,KACE,kBAACR,GAAD,CAAa/N,KAAM+B,W,iCC7BlB,SAASyM,GAAT,GAA4B,IAAT7Q,EAAQ,EAARA,KAC1BQ,EAAU4N,cACV/L,EAAOkG,aAAc,SAACC,GAAD,OAAOA,EAAEpF,OAAOf,QACrCoB,EAAO8E,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WACrCyE,EAAcoE,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOiB,eAC9CuB,EAAgB6C,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOwC,iBAYtD,OACE,kBAACyK,GAAA,EAAD,CAAMtH,UAAU,QACd,kBAACsH,GAAA,EAAKC,KAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,mBAAwBvQ,EAAK2D,UAC7B,kBAAC0M,GAAA,EAAKS,KAAN,KAAY9Q,EAAK0D,UAChBD,GAASA,EAAK5B,KAAO7B,EAAK4D,QAAwB,UAAdH,EAAKmG,KAStC,KARF,yBAAKb,UAAU,eACb,4BAAQA,UAAU,eAAeG,QAZtB,WACnBtD,EAAc5F,GACdQ,EAAQU,KAAK,UAAYmB,EAAK0B,QAWpB,kBAAC,KAAD,CAAUgF,UAAU,2BACZ,IACV,4BAAQA,UAAU,eAAeG,QApBxB,WACjB7E,EAAYrE,GACZQ,EAAQU,KAAK,cAmBH,kBAAC,KAAD,CAAY6H,UAAU,2BACd,OChCP,SAASgI,KAA6B,IAAD,yDAAJ,GAAb9M,EAAiB,EAAjBA,SACjC,OACE,oCACGA,EAASO,KAAI,SAACG,GAAD,OACZ,kBAACkM,GAAD,CAAS5H,IAAKtE,EAAE5B,IAAK/C,KAAM2E,QCGpB,SAASqM,KACtB,IAAM3O,EAAOkG,aAAc,SAAChF,GAAD,OAAWA,EAAMH,OAAOf,QAC7CoB,EAAO8E,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAOjG,WACrCqR,EAAmBxI,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOI,iBAEnDhD,EAAU4N,cAOhB,OACE,oCACE,4BAAK/L,EAAKyB,OAEV,kBAAC,KAAD,CACEoN,OAAQ7O,EAAKqB,QACbyN,YAAY,EACZpI,UAAU,SAEZ,yBAAKA,UAAU,SACf,wBAAIA,UAAU,cACd,kBAAC4H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,wBAAI7H,UAAU,QAAd,aAEF,kBAAC6H,GAAA,EAAD,KACGnN,EACC,4BACEsF,UAAU,2BACVG,QAxBc,WACxB+H,EAAiBxN,GACjBjD,EAAQU,KAAK,cAwBH,kBAAC,KAAD,CAAQ6H,UAAU,gCAElB,OAIR,kBAACgI,GAAD,CACEhI,UAAU,aACV9E,SAAU5B,EAAK4B,SAAW5B,EAAK4B,SAAW,M,aChDnC,SAASmN,GAAT,GAAgD,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,aAK5C,OACE,oCACE,kBAAC,KAAD,CAAiBrG,MAAOoG,EAAKE,OAAO,MAAMC,SANvB,SAACC,EAAGC,EAAGC,GAC5BL,EAAaM,QAAUD,MCDpB,IAAME,GAAe,WAAO,IAAD,EACRzE,qBADQ,mBACzB0E,EADyB,KACnBC,EADmB,OAEA3E,mBAAS,0BAFT,mBAEzB4E,EAFyB,KAEfC,EAFe,KAG1BtF,EAAelE,aAAgB,SAACvG,GAAD,OAAOA,EAAEiF,OAAOY,WAS/CwF,EAAQ,uCAAG,WAAOkE,GAAP,iBAAAvP,EAAA,6DACfuP,EAAES,kBACIhP,EAAW,IAAIiP,UACZC,OAAO,OAAQN,GACxBrS,QAAQC,IAAIwD,GAJG,SAKOF,EAAYC,WAAWC,GAL9B,OAKT9C,EALS,OAMfuM,EAAa,CAAEvM,QAASA,EAASwH,WAAW,IAC5CqK,EAAY,IAPG,2CAAH,sDAUd,OACE,0BAAM1E,SAAUA,EAAU8E,QAAQ,uBAChC,yBAAKtJ,UAAU,gBACb,2BACEf,KAAK,OACLe,UAAU,oBACVlH,GAAG,aACH2P,SAxBS,SAACC,GAChBhS,QAAQC,IAAI+R,EAAE9H,OAAO2I,MAAM,IAC3BP,EAAQN,EAAE9H,OAAO2I,MAAM,IAEvBL,EAAYR,EAAE9H,OAAO2I,MAAM,GAAG5H,SAsB1B,2BAAO3B,UAAU,oBAAoBwJ,QAAQ,cAC1CP,IAIL,2BACEhK,KAAK,SACLiD,MAAM,SACNlC,UAAU,iDCpCH,SAASyJ,GAAT,GAA6B,IAATnQ,EAAQ,EAARA,KAE3BmD,EAAoBiD,aACxB,SAACzD,GAAD,OAAaA,EAAQ5B,OAAOoC,qBAGxBuH,EAAgB,CACpBjJ,MAAO,GACPC,KAAM,GACNC,SAAU,IAT6B,EAcN8I,YAAQ,CAAEC,cAAeA,IAApD3L,EAdiC,EAcjCA,SAAU+L,EAduB,EAcvBA,aACZsF,EAASC,mBAEf,IAAKrQ,EACH,OAAO,wCAGT0K,EAAcjJ,MAAQzB,EAAKyB,MAC3BiJ,EAAc/I,SAAW3B,EAAK2B,SAC9B+I,EAAchJ,KAAO1B,EAAK0B,KAe1B,OACE,oCACE,0BAAMwJ,SAAUJ,GAfH,SAACnN,GAChB,IAAM2S,EAAO,CACX5P,IAAKV,EAAKU,IACVgB,KAAM/D,EAAK+D,KACXD,MAAO9D,EAAK8D,MACZE,SAAUhE,EAAKgE,SACfN,QAAO,OAAE+O,QAAF,IAAEA,OAAF,EAAEA,EAAQb,SAGnBnS,QAAQC,IAAIiT,GACZnN,EAAkBmN,OAMd,4BAAQ3K,KAAK,SAASe,UAAU,8BAC9B,kBAAC,KAAD,OAEF,yBAAKA,UAAU,6BACb,2BAAOwJ,QAAQ,SAAf,SACA,2BACE1Q,GAAG,QACHkH,UAAU,eACV2B,KAAK,QACL1C,KAAK,OACL8C,IAAK1J,KAIT,yBAAK2H,UAAU,eACb,2BAAOwJ,QAAQ,QAAf,QACA,2BACE1Q,GAAG,OACHkH,UAAU,eACV2B,KAAK,OACL1C,KAAK,OACL8C,IAAK1J,KAIT,yBAAK2H,UAAU,cACb,2BAAOwJ,QAAQ,SAAf,YACA,8BACE1Q,GAAG,WACH+Q,KAAK,IACLlI,KAAK,WACL3B,UAAU,eACV+B,IAAK1J,KAIT,yBAAK2H,UAAU,cACZ,IACD,2BAAOwJ,QAAQ,WAAf,WACA,kBAACnB,GAAD,CACEvP,GAAG,UACHwP,IAAKhP,EAAKqB,QACV4N,aAAcmB,IACb,MAGP,kBAAC,GAAD,CAAc1J,UAAU,S,sBClFf,SAAS8J,KAAQ,IACxB9O,EAAS+O,cAAT/O,KACA1B,EAAOkG,aAAc,SAAChF,GAAD,OAAWA,EAAMH,OAAOf,QAC7CoB,EAAO8E,aAAc,SAAChF,GAAD,OAAWA,EAAMsC,OAAOjG,WAC7CsF,EAAWuD,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAO8B,YAC3CQ,EAAa+C,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOsC,cALtB,EAMH0H,mBAAS,QANN,mBAMtB2F,EANsB,KAMfC,EANe,OAOmB5F,qBAPnB,mBAOtB6F,EAPsB,KAOJC,EAPI,KAQvB1S,EAAU4N,cAWhB,GATAC,qBAAU,WACK,YAATtK,EAIJmB,EAASnB,GAHPiP,EAAS,UAKV,KAEE3Q,EACH,OAAO,8CAuBT,OACE,oCACE,kBAACqO,GAAA,EAAD,CAAW3H,UAAU,gBACH,WAAX,OAAJtF,QAAI,IAAJA,OAAA,EAAAA,EAAMmG,MACL,yBAAKb,UAAU,eACF,SAAVgK,EACC,4BAAQhK,UAAU,eAAeG,QAjBxB,WACf+J,GACJC,GAAoB,KAgBR,kBAAC,KAAD,CAAUnK,UAAU,gCAEpB,KAEJ,4BAAQA,UAAU,eAAeG,QA/BxB,WAMjB8J,EALc,SAAVD,EAKK,OAJE,UA8BD,kBAAC,KAAD,CAAYhK,UAAU,iCAGxB,KACO,SAAVgK,EAAmB,kBAAC/B,GAAD,MAAkB,KAC3B,SAAV+B,EAAmB,kBAACP,GAAD,CAAUnQ,KAAMA,IAAW,MAEjD,kBAAC8Q,GAAA,EAAD,CAAOC,KAAMH,EAAkBI,OAAQ,kBAAMH,GAAoB,KAC/D,kBAACC,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAM5C,MAAP,sBAEF,kBAAC4C,GAAA,EAAM7C,KAAP,gDACA,kBAAC6C,GAAA,EAAMK,OAAP,KACE,kBAACC,GAAA,EAAD,CACE5J,QAAQ,YACRX,QAAS,kBAAMgK,GAAoB,KAFrC,UAMA,kBAACO,GAAA,EAAD,CAAQ5J,QAAQ,UAAUX,QArCV,WACtBxD,EAAWrD,GACX6Q,GAAoB,GACpB1S,EAAQU,KAAK,cAkCP,aChFK,SAASwS,KACtB,IAAM/Q,EAAU4F,aAAc,SAACC,GAAD,OAAOA,EAAEpF,OAAOT,WACxCN,EAAOkG,aAAc,SAACC,GAAD,OAAOA,EAAEpF,OAAOf,QACrCsR,EAAgBlL,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOuC,eAChDrB,EAAemE,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAOkB,gBAC/C9D,EAAU4N,cAEVrB,EAAgB,CACpBrJ,QAAO,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAASe,SARgB,EAsBDoJ,YAAQ,CAAEC,cAAeA,IAApD3L,EAtB4B,EAsB5BA,SAAU+L,EAtBkB,EAsBlBA,aAElB,OACE,kBAACuD,GAAA,EAAD,CAAW3H,UAAU,gBACnB,4CACA,0BAAMwE,SAAUJ,GAhBH,SAACnN,GAChB,IAAM4C,EAAc,2BAAQD,GAAR,IAAiBe,QAAS1D,EAAK0D,UACnDiQ,EAAc/Q,GACdpC,EAAQU,KAAK,UAAYmB,EAAK0B,UAc1B,yBAAKgF,UAAU,cACb,2BAAOwJ,QAAQ,WAAf,WACA,8BACE1Q,GAAG,UACH+Q,KAAK,IACLlI,KAAK,UACL3B,UAAU,eACV+B,IAAK1J,KAIT,2BAAO4G,KAAK,SAASiD,MAAM,OAAOlC,UAAU,oBAC5C,4BAAQG,QAvBG,WACf5E,IACA9D,EAAQU,KAAK,UAAYmB,EAAK0B,OAqBCgF,UAAU,2BAArC,SACS,OClCjB,SAAS6K,KAAO,IACNtJ,EAAauJ,cAAbvJ,SACFxF,EAAY2D,aAAgB,SAACvG,GAAD,OAAOA,EAAEkB,OAAO0B,aAC5C3D,EAAeoH,aAAc,SAACC,GAAD,OAAOA,EAAE3C,OAAO1E,gBAC7CuF,EAAkB+B,aAAgB,SAACvG,GAAD,OAAOA,EAAE2D,OAAOa,mBAuBxD,OArBA2H,qBAAU,WACR,IAAIrI,EACJ,GAAI7E,EAAc,CAChB,IAAM9B,EAAWL,KAAKiB,MAAM6T,KAAK3S,EAAa4S,MAAM,KAAK,KAGnDC,EADU,IAAIC,KAAoB,IAAf5U,EAAS6U,KACVC,UAAYF,KAAKG,MAAQ,IAEjDpO,EAAsB8B,YAAW,WAC/BpB,MACCsN,GAEL,OAAO,kBAAMK,aAAarO,MACzB,CAAC7E,EAAcuF,IAElB2H,qBAAU,WACR3H,IACA5B,MAEC,IAGD,yBAAKiE,UAAW,0BACd,kBAACO,EAAD,MACA,kBAACjB,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUkC,KAAK,aAAad,GAAIa,EAASgK,MAAM,GAAI,KACnD,kBAAC,IAAD,CAAO9K,OAAK,EAACyC,KAAK,IAAIjC,UAAW8B,IACjC,kBAAC,IAAD,CAAOtC,OAAK,EAACyC,KAAK,WAAWjC,UAAWyG,KACxC,kBAAC,IAAD,CAAOxE,KAAK,eAAejC,UAAW6I,KAEtC,kBAAC/I,EAAD,CAAcmC,KAAK,WAAWjC,UAAWgE,IACzC,kBAAClE,EAAD,CAAcmC,KAAK,SAAShC,MAAO,CAACvJ,GAAasJ,UAAWgF,KAC5D,kBAAC,IAAD,CAAO/C,KAAK,WAAWjC,UAAWmG,KAClC,kBAAC,IAAD,CAAOlE,KAAK,WAAWjC,UAAW0J,O,OC1C1CvJ,iBACE,kBAAC,IAAMoK,WAAP,KACE,kBAAC,IAAD,CAAepM,MAAOA,GACpB,kBAAC,IAAD,CAAQ3H,QAASA,GACf,kBAACoT,GAAD,SAINY,SAASC,eAAe,S","file":"static/js/main.d0a2af8d.chunk.js","sourcesContent":["let token = null;\r\nexport const fetchWrapper = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: _delete,\r\n  setToken,\r\n};\r\n\r\nfunction get(url) {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction post(url, body) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction put(url, body) {\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\r\n    body: JSON.stringify(body),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// prefixed with underscored because delete is a reserved word in javascript\r\nfunction _delete(url) {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: authHeader(url),\r\n  };\r\n  return fetch(url, requestOptions).then(handleResponse);\r\n}\r\n\r\n// helper functions +\r\n\r\nfunction authHeader(url) {\r\n  /*   let user;\r\n  const json = localStorage.getItem(\"account\");\r\n  console.log(json);\r\n  if (json) {\r\n    user = JSON.parse(json);\r\n    console.log(user);\r\n  } */\r\n\r\n  //const user = window.account;\r\n\r\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\r\n  if (token && isApiUrl) {\r\n    console.log(\"Token added\");\r\n    console.log(window.account);\r\n    return { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n\r\n    if (!response.ok) {\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n\r\nfunction setToken(jwtToken) {\r\n  token = jwtToken;\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const Role = {\r\n    Admin: 'Admin',\r\n    User: 'User'    \r\n}","export const AlertType = {\r\n  Success: \"Success\",\r\n  Error: \"Error\",\r\n  Info: \"Info\",\r\n  Warning: \"Warning\",\r\n};\r\n","import { fetchWrapper, history } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/accounts`;\r\n\r\nexport const accountService = {\r\n  login,\r\n  logout,\r\n  refreshToken,\r\n  register,\r\n  verifyEmail,\r\n  forgotPassword,\r\n  validateResetToken,\r\n  resetPassword,\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n  setToken,\r\n};\r\n\r\nfunction login(email, password) {\r\n  return fetchWrapper.post(`${baseUrl}/authenticate`, { email, password });\r\n}\r\n\r\nfunction logout() {\r\n  // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\r\n  fetchWrapper.post(`${baseUrl}/revoke-token`, {});\r\n\r\n  history.push(\"/\"); // where should this go?????\r\n}\r\n\r\nfunction refreshToken() {\r\n  return fetchWrapper.post(`${baseUrl}/refresh-token`, {});\r\n}\r\n\r\nfunction register(params) {\r\n  return fetchWrapper.post(`${baseUrl}/register`, params);\r\n}\r\n\r\nfunction verifyEmail(token) {\r\n  return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\r\n}\r\n\r\nfunction forgotPassword(email) {\r\n  return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\r\n}\r\n\r\nfunction validateResetToken(token) {\r\n  return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\r\n}\r\n\r\nfunction resetPassword({ token, password, confirmPassword }) {\r\n  return fetchWrapper.post(`${baseUrl}/reset-password`, {\r\n    token,\r\n    password,\r\n    confirmPassword,\r\n  });\r\n}\r\n\r\nfunction getAll() {\r\n  return fetchWrapper.get(baseUrl);\r\n}\r\n\r\nfunction getById(id) {\r\n  return fetchWrapper.get(`${baseUrl}/${id}`);\r\n}\r\n\r\nfunction create(params) {\r\n  return fetchWrapper.post(baseUrl, params);\r\n}\r\n\r\nfunction update(id, params) {\r\n  console.log(params);\r\n  return fetchWrapper.put(`${baseUrl}/${id}`, params);\r\n}\r\n\r\n// prefixed with underscore because 'delete' is a reserved word in javascript\r\nfunction _delete(id) {\r\n  return fetchWrapper.delete(`${baseUrl}/${id}`).then((x) => {\r\n    // auto logout if the logged in user deleted their own record\r\n    /*     if (id === .value.id) {\r\n      logout();\r\n    } */\r\n    return x;\r\n  });\r\n}\r\n\r\nfunction setToken(jwtToken) {\r\n  fetchWrapper.setToken(jwtToken);\r\n}\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/pages`;\r\n\r\nconst getAll = async () => {\r\n  let pages = await fetch(baseUrl);\r\n  pages = await pages.json();\r\n  return pages;\r\n};\r\n\r\nconst getById = async (id) => {\r\n  let page = await fetch(baseUrl + \"/\" + id);\r\n  page = await page.json();\r\n  return page;\r\n};\r\nconst create = async (page) => {\r\n  const newPage = fetchWrapper.post(`${baseUrl}`, page);\r\n  return newPage;\r\n};\r\n\r\nconst update = async (id, page) => {\r\n  let updatedPage = await fetchWrapper.put(`${baseUrl}/${id}`, page);\r\n  return updatedPage;\r\n};\r\n\r\nconst _delete = async (pageId) => {\r\n  let res = await fetchWrapper.delete(`${baseUrl}/${pageId}`);\r\n  return res;\r\n};\r\n\r\nexport const pageService = {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","import { fetchWrapper } from \"../_helpers\";\r\n\r\nconst baseUrlComment = `${process.env.REACT_APP_API_URL}/comments`;\r\n\r\nconst update = async (pageId, comment) => {\r\n  let updatedComment = await fetchWrapper.put(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return updatedComment;\r\n};\r\n\r\nconst create = async (pageId, comment) => {\r\n  let newComment = await fetchWrapper.post(\r\n    `${baseUrlComment}/${pageId}`,\r\n    comment\r\n  );\r\n  return newComment;\r\n};\r\n\r\nconst _delete = async (pageId, comment) => {\r\n  let res = await fetchWrapper.delete(\r\n    `${baseUrlComment}/${pageId}/${comment._id}`\r\n  );\r\n\r\n  return res;\r\n};\r\n\r\nexport const commentService = {\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n};\r\n","const baseUrl = `${process.env.REACT_APP_API_URL}/files/upload`;\r\n\r\nexport const fileService = {\r\n  uploadFile: async (formData) => {\r\n    console.log(\"file upload service\");\r\n\r\n    try {\r\n      let response = await fetch(baseUrl, {\r\n        method: \"POST\",\r\n\r\n        body: formData,\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(response);\r\n      const message = '&lt;img src=\"' + response + '\" width=\"10%\" &gt;';\r\n      return message;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n","import pagesStoreModel from \"./pagesStoreModel\";\r\nimport accountStoreModel from \"./accountsStoreModel\";\r\nimport alertsStoreModel from \"./alertsStoreModel\";\r\n\r\nconst storeModel = {\r\n  pStore: pagesStoreModel,\r\n  aStore: accountStoreModel,\r\n  iStore: alertsStoreModel,\r\n};\r\n\r\nexport default storeModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { pageService } from \"../_services\";\r\nimport { commentService } from \"../_services\";\r\n\r\nconst pagesStoreModel = {\r\n  pages: [],\r\n  page: null,\r\n  comment: null,\r\n\r\n  addLoadedPages: action((state, pages) => {\r\n    state.pages = pages;\r\n  }),\r\n\r\n  createComment: action((state, user) => {\r\n    const newComment = {\r\n      content: \"\",\r\n      userName: user.userName,\r\n      userId: user.id,\r\n    };\r\n    state.comment = newComment;\r\n  }),\r\n\r\n  createPage: action((state) => {\r\n    const newPage = {\r\n      title: \"New Page Title\",\r\n      slug: \"newPage\",\r\n      subtitle: \"\",\r\n      content: \"\",\r\n      comments: [],\r\n    };\r\n    state.page = newPage;\r\n  }),\r\n\r\n  removePage: action((state, page) => {\r\n    state.pages = state.pages.filter((p) => p._id !== page._id);\r\n    state.page = null;\r\n  }),\r\n\r\n  editComment: action((state, comment) => {\r\n    state.comment = comment;\r\n  }),\r\n\r\n  clearComment: action((state) => {\r\n    state.comment = null;\r\n  }),\r\n\r\n  setPage: action((state, page) => {\r\n    state.page = page;\r\n    state.pages = state.pages.map((p) => (p._id === page._id ? page : p));\r\n  }),\r\n\r\n  addPage: action((state, page) => {\r\n    state.pages.push(page);\r\n    state.page = page;\r\n  }),\r\n\r\n  replaceComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.map((c) =>\r\n      c._id === comment._id ? comment : c\r\n    );\r\n  }),\r\n\r\n  removeComment: action((state, comment) => {\r\n    state.page.comments = state.page.comments.filter(\r\n      (c) => c._id !== comment._id\r\n    );\r\n  }),\r\n\r\n  addComment: action((state, comment) => {\r\n    state.page.comments.push(comment);\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  loadPages: thunk(async (actions, payload) => {\r\n    const pages = await pageService.getAll();\r\n    actions.addLoadedPages(pages);\r\n  }),\r\n\r\n  loadPage: thunk(async (actions, slug, helpers) => {\r\n    const localState = helpers.getState();\r\n    /*     if (localState.cachedPages.has(slug)) {\r\n      console.log(\"using Cached version\");\r\n      actions.setPage(localState.cachedPages.get(slug));\r\n      return;\r\n    } */\r\n\r\n    const smallPage = localState.pages.find((p) => p.slug === slug);\r\n\r\n    if (!smallPage) return;\r\n    const page = await pageService.getById(smallPage._id);\r\n    actions.setPage(page);\r\n  }),\r\n\r\n  updatePageContent: thunk(async (actions, payload, helpers) => {\r\n    const { _id, slug, title, subtitle, content } = payload;\r\n    const toUpdate = {\r\n      slug,\r\n      title,\r\n      subtitle,\r\n      content,\r\n    };\r\n\r\n    if (_id) {\r\n      // this is an update\r\n      const updatedPage = await pageService.update(_id, toUpdate);\r\n      actions.setPage(updatedPage);\r\n    } else {\r\n      const newPage = await pageService.create(toUpdate);\r\n      actions.addPage(newPage);\r\n    }\r\n  }),\r\n\r\n  deletePage: thunk(async (actions, page, helpers) => {\r\n    if (page._id) {\r\n      await pageService.delete(page._id);\r\n      actions.removePage(page);\r\n    }\r\n  }),\r\n\r\n  saveComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    console.log(comment);\r\n    if (comment._id) {\r\n      // this is an update\r\n      console.log(localState.page._id);\r\n      const updatedComment = await commentService.update(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n      actions.replaceComment(updatedComment);\r\n    } else {\r\n      const updatedComment = await commentService.create(\r\n        localState.page._id,\r\n        comment\r\n      );\r\n\r\n      actions.addComment(updatedComment);\r\n    }\r\n  }),\r\n\r\n  deleteComment: thunk(async (actions, comment, helpers) => {\r\n    const localState = helpers.getState();\r\n    if (comment._id) {\r\n      await commentService.delete(localState.page._id, comment);\r\n      actions.removeComment(comment);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default pagesStoreModel;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { accountService } from \"../_services\";\r\n\r\nconst accountsStoreModels = {\r\n  accounts: [],\r\n  account: null,\r\n  editAccount: null,\r\n  refreshTokenTimeout: null,\r\n  refreshToken: null,\r\n\r\n  // Actions\r\n\r\n  addAccount: action((state, account) => {\r\n    state.account = account;\r\n    state.refreshToken = account?.jwtToken;\r\n    accountService.setToken(account?.jwtToken);\r\n    window.account = account;\r\n  }),\r\n\r\n  addNewAccount: action((state, account) => {\r\n    state.accounts.push(account);\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setAccount: action((state, account) => {\r\n    console.log(\"Account\", account);\r\n    accountService.setToken(account?.jwtToken);\r\n    state.account = account;\r\n    state.refreshToken = account?.jwtToken;\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  setEditAccount: action((state, account) => {\r\n    state.editAccount = account;\r\n  }),\r\n\r\n  replaceAccount: action((state, account) => {\r\n    state.accounts = state.accounts.map((a) =>\r\n      a.id === account.id || !a.id ? account : a\r\n    );\r\n    if (state.account.id === account.id || !state.account.id) {\r\n      state.account = account;\r\n      state.refreshToken = account?.jwtToken;\r\n      accountService.setToken(account?.jwtToken);\r\n      state.editAccount = account;\r\n    }\r\n  }),\r\n\r\n  removeAccount: action((state, id) => {\r\n    const acc = state.accounts.filter((a) => a.id !== id);\r\n    if (state.account.id === id) {\r\n      state.account = acc;\r\n      state.editAccount = acc;\r\n    }\r\n  }),\r\n\r\n  setAccounts: action((state, accounts) => {\r\n    state.accounts = accounts;\r\n  }),\r\n\r\n  clearAccount: action((state) => {\r\n    accountService.setToken(null);\r\n    state.account = null;\r\n    state.refreshToken = null;\r\n    window.account = null;\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  login: thunk(async (actions, payload) => {\r\n    const { email, password } = payload;\r\n    console.log(email);\r\n    const acc = await accountService.login(email, password);\r\n    actions.setAccount(acc);\r\n  }),\r\n\r\n  logout: thunk(async (actions) => {\r\n    await accountService.logout();\r\n    actions.clearAccount();\r\n  }),\r\n\r\n  refreshTheToken: thunk(async (actions, refreshAction) => {\r\n    const acc = await accountService.refreshToken();\r\n    actions.setAccount(acc);\r\n  }),\r\n\r\n  register: thunk(async (actions, payload) => {\r\n    await accountService.register(payload);\r\n  }),\r\n\r\n  verifyEmail: thunk(async (actions, token) => {\r\n    await accountService.verifyEmail(token);\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, email) => {\r\n    await accountService.forgotPassword(email);\r\n  }),\r\n\r\n  validateResetToken: thunk(async (actions, token) => {\r\n    await accountService.validateResetToken(token);\r\n  }),\r\n\r\n  resetPassword: thunk(async (actions, payload) => {\r\n    const { token, password, confirmPassword } = payload;\r\n    await accountService.resetPassword(token, password, confirmPassword);\r\n  }),\r\n\r\n  getAllAccounts: thunk(async (actions) => {\r\n    const accs = await accountService.getAll();\r\n    actions.setAccounts(accs);\r\n  }),\r\n\r\n  getAccountById: thunk(async (actions, id) => {\r\n    const acc = await accountService.getById(id);\r\n    actions.setEditAccount(acc);\r\n  }),\r\n\r\n  createAccount: thunk(async (actions, newAccount) => {\r\n    console.log(newAccount);\r\n    const acc = await accountService.create(newAccount);\r\n    console.log(acc);\r\n    actions.addNewAccount(acc);\r\n  }),\r\n\r\n  updateAccount: thunk(async (actions, payload) => {\r\n    const { id, params } = payload;\r\n    const acc = await accountService.update(id, params);\r\n    actions.replaceAccount(acc);\r\n  }),\r\n\r\n  deleteAccount: thunk(async (actions, id) => {\r\n    await accountService.delete(id);\r\n    actions.removeAccount(id);\r\n  }),\r\n};\r\n\r\nexport default accountsStoreModels;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst alertsStoreModel = {\r\n  alerts: [],\r\n\r\n  // Actions\r\n\r\n  setAlertInternal: action((state, alert) => {\r\n    state.alerts.push(alert);\r\n  }),\r\n\r\n  removeAlert: action((state, alert) => {\r\n    state.alerts = state.alerts.filter((x) => x.id !== alert.id);\r\n  }),\r\n\r\n  clear: action((state) => {\r\n    state.alerts = [];\r\n  }),\r\n\r\n  // Thunks\r\n\r\n  alert: thunk(async (actions, alert) => {\r\n    alert.id = Math.floor(Math.random() * 10000);\r\n    alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\r\n    actions.setAlertInternal(alert);\r\n    if (alert.autoClose) {\r\n      setTimeout(() => actions.removeAlert(alert), 3500);\r\n    }\r\n  }),\r\n\r\n  success: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Success;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  error: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Error;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  info: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Info;\r\n    await actions.alert(alert);\r\n  }),\r\n\r\n  warn: thunk(async (actions, alert) => {\r\n    alert.type = AlertType.Warning;\r\n    await actions.alert(alert);\r\n  }),\r\n};\r\n\r\nexport default alertsStoreModel;\r\n","import { createStore } from \"easy-peasy\";\r\nimport storeModel from \"./storeModel\";\r\n\r\nconst store = createStore(storeModel);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { AlertType } from \"../_helpers\";\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  fade: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"default-alert\",\r\n  fade: true,\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n  const alerts = useStoreState((s) => s.iStore.alerts);\r\n  const removeAlert = useStoreActions((a) => a.iStore.removeAlert);\r\n\r\n  function cssClasses(alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n\r\n  if (!alerts.length) return null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"m-3\">\r\n        {alerts.map((alert, index) => (\r\n          <div key={index} className={cssClasses(alert)}>\r\n            <button className=\"close\" onClick={() => removeAlert(alert)}>\r\n              &times;\r\n            </button>\r\n            <span dangerouslySetInnerHTML={{ __html: alert.message }}></span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };\r\n","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { history, Role } from \"../_helpers\";\r\n\r\nfunction Nav() {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const logout = useStoreActions((a) => a.aStore.logout);\r\n  const apiDocPath = `${process.env.REACT_APP_API_URL}/api/api-docs`;\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-info larger\">\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <NavLink exact to=\"/\" className=\"nav-item nav-link\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/content\" className=\"nav-item nav-link\">\r\n            Documentation\r\n          </NavLink>\r\n          <a className=\"nav-item nav-link\" href={apiDocPath} target=\"_blank\">\r\n            API-Documentation\r\n          </a>\r\n          <NavLink to=\"/profile\" className=\"nav-item nav-link\">\r\n            Profile\r\n          </NavLink>\r\n          {user && user.role === Role.Admin && (\r\n            <NavLink to=\"/admin\" className=\"nav-item nav-link\">\r\n              Admin\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n        <div className=\"navbar-nav ml-auto\">\r\n          {user && (\r\n            <span className=\"navbar-text mr-4\">User: {user.userName}</span>\r\n          )}\r\n          {user && (\r\n            <a onClick={() => logout()} className=\"nav-item nav-link \">\r\n              Logout\r\n            </a>\r\n          )}\r\n          {!user && (\r\n            <a\r\n              className=\"nav-item nav-link\"\r\n              onClick={() => history.push(\"/account/login\")}\r\n              variant=\"outline-success\"\r\n            >\r\n              Login\r\n            </a>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Nav };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n  const account = useStoreState((s) => s.aStore.account);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(\"Private Route\");\r\n        if (!account) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/account/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n          //return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (roles && roles.indexOf(account.role) === -1) {\r\n          // role not authorized so redirect to home page\r\n          return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // authorized so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\n\r\nexport function Input({ name, label, formMethods, ...rest }) {\r\n  const { register, errors } = formMethods;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label ? label : name}</label>\r\n\r\n      <input\r\n        name={name}\r\n        ref={register}\r\n        {...rest}\r\n        className={\"form-control\" + (errors[name] ? \" is-invalid\" : \"\")}\r\n      />\r\n      <ErrorMessage errors={errors} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Select({ name, label, options, formMethods, ...rest }) {\r\n  const { register, errors } = formMethods;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label ? label : name}</label>\r\n      <select\r\n        name={name}\r\n        ref={register}\r\n        {...rest}\r\n        className={\"form-control\" + (errors[name] ? \" is-invalid\" : \"\")}\r\n      >\r\n        {options.map((value) => (\r\n          <option key={value} value={value}>\r\n            {value}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <ErrorMessage errors={errors} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Submit({ label, formMethods, children, ...rest }) {\r\n  const { isSubmitting } = formMethods;\r\n  console.log(children);\r\n\r\n  let leftChildren;\r\n  let rightChildren;\r\n\r\n  if (Array.isArray(children)) {\r\n    leftChildren = children.filter((c) => c.props.posright !== \"true\");\r\n    rightChildren = children.filter((c) => c.props.posright === \"true\");\r\n  } else {\r\n    leftChildren = [children];\r\n    rightChildren = [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-row\">\r\n      <div className=\"form-group col\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          {isSubmitting && (\r\n            <span className=\"spinner-border spinner-border-sm mr-1\" />\r\n          )}\r\n\r\n          {label}\r\n        </button>\r\n        {React.Children.map(leftChildren, (child) => {\r\n          return child;\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"form-group col text-right\"></div>\r\n      {React.Children.map(rightChildren, (child) => {\r\n        return child;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"m-4\">\r\n      <div className=\"container\">\r\n        <h1 className=\"mb-4  display-4\">Reference App MERN-Stack</h1>\r\n        <h3>A simple app to manage technical documentation.</h3>\r\n        <div className=\"larger\">\r\n          <p>\r\n            It is the purpose of this application to be used as a correct and\r\n            well coded example of the implementation of a CRUD application with\r\n            autherization and messaging system.\r\n          </p>\r\n          <p>\r\n            If your are building an app you can always go to this app an find a\r\n            good and working implementation of the basic functionality needed to\r\n            build such an app.\r\n          </p>\r\n        </div>\r\n\r\n        <h3>Functionality of the App</h3>\r\n        <ul className=\"larger feature\">\r\n          <li>\r\n            The documentation pages can be entered in the markdown syntax, which\r\n            supports many formatting options including including pictures in the\r\n            documents. Pictures can be uploaded and included into the\r\n            documentation.\r\n          </li>\r\n          <li>\r\n            The authorization includes login, sign-up, email verification,\r\n            password reset, user-roles, user can edit their profile and an\r\n            administrator can add, edit and delete all the users.\r\n          </li>\r\n          <li>\r\n            The application is built on the Redux pattern and uses Easy-Peasy to\r\n            implement it\r\n          </li>\r\n          <li>For each documentation page the users can leave comments.</li>\r\n          <li>\r\n            A User can view all the pages even when he is not logged in. A user\r\n            must me logged in to leave a comment.\r\n          </li>\r\n          <li>\r\n            A user can edit and/or delete his comments but can not edit or\r\n            delete comments made by other users\r\n          </li>\r\n          <li>\r\n            Pages can be added, edited and deleted only by users who belong to\r\n            the admin group.\r\n          </li>\r\n          <li>\r\n            Pages can be added, edited and deleted only by users who belong to\r\n            the admin group.\r\n          </li>\r\n          <li>\r\n            An administrator can edit and delete comments even if they were made\r\n            by another user.\r\n          </li>\r\n          <li>\r\n            The swagger documentation of the underlying api can be accessed via\r\n            the menu.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Home };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction Details({ match }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Profile</h1>\r\n      <p>\r\n        <strong>Name: </strong> {user.userName}\r\n        <br />\r\n        <strong>Email: </strong> {user.email}\r\n      </p>\r\n      <p>\r\n        <Link to={`${path}/update`}>Update Profile</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Details };\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string().min(6, \"Password must be at least 6 characters\"),\r\n  confirmPassword: Yup.string()\r\n    .when(\"password\", (password, schema) => {\r\n      if (password) return schema.required(\"Confirm Password is required\");\r\n    })\r\n    .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n});\r\n\r\nfunction Update({ history }) {\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const initialValues = {\r\n    userName: user.userName,\r\n    email: user.email,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const formMethods = useForm({\r\n    defaultValues: initialValues,\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    console.log(user.id);\r\n    console.log(fields);\r\n    update({ id: user.id, params: fields })\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          options: { keepAfterRouteChange: true },\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  function onDelete() {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      setIsDeleting(true);\r\n\r\n      deleteAccount(user.id).then(() =>\r\n        alertSuccess(\"Account deleted successfully\")\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1>Update Profile</h1>\r\n      <Input name=\"userName\" label=\"Username\" formMethods={formMethods} />\r\n      <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n\r\n      <h3 className=\"pt-3\">Change Password</h3>\r\n      <p>Leave blank to keep the same password</p>\r\n      <div className=\"form-row\">\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Submit label=\"Update\" formMethods={formMethods}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onDelete()}\r\n          className=\"btn btn-danger ml-2\"\r\n          style={{ width: \"75px\" }}\r\n          disabled={isDeleting}\r\n        >\r\n          {isDeleting ? (\r\n            <span className=\"spinner-border spinner-border-sm\"></span>\r\n          ) : (\r\n            <span>Delete</span>\r\n          )}\r\n        </button>\r\n        <Link to=\".\" className=\"btn btn-link\">\r\n          Cancel\r\n        </Link>\r\n      </Submit>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Update };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { Details } from './Details';\r\nimport { Update } from './Update';\r\n\r\nfunction Profile({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <div className=\"p-4\">\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path={path} component={Details} />\r\n                    <Route path={`${path}/update`} component={Update} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Profile };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Overview({ match }) {\r\n    const { path } = match;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin</h1>\r\n            <p>This section can only be accessed by administrators.</p>\r\n            <p><Link to={`${path}/users`}>Manage Users</Link></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Overview };","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction List({ match }) {\r\n  const users = useStoreState((s) => s.aStore.accounts);\r\n  const getAllAccounts = useStoreActions((a) => a.aStore.getAllAccounts);\r\n  const setEditAccount = useStoreActions((a) => a.aStore.setEditAccount);\r\n  const deleteAccount = useStoreActions((a) => a.aStore.deleteAccount);\r\n  const { path } = match;\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAllAccounts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function deleteUser(id) {\r\n    deleteAccount(id);\r\n  }\r\n\r\n  function editUser(user) {\r\n    setEditAccount(user);\r\n    history.push(`${path}/edit/${user.id}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <p>All users from secure (admin only) api end point:</p>\r\n      <Link to={`${path}/add`} className=\"btn btn-sm btn-success mb-2\">\r\n        Add User\r\n      </Link>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"30%\" }}>Username</th>\r\n            <th style={{ width: \"30%\" }}>Email</th>\r\n            <th style={{ width: \"30%\" }}>Role</th>\r\n            <th style={{ width: \"10%\" }}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users &&\r\n            users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.userName}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.role}</td>\r\n                <td style={{ whiteSpace: \"nowrap\" }}>\r\n                  <button\r\n                    onClick={() => editUser(user)}\r\n                    style={{ width: \"60px\" }}\r\n                    className=\"btn btn-sm btn-primary mr-1\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => deleteUser(user.id)}\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    style={{ width: \"60px\" }}\r\n                    disabled={user.isDeleting}\r\n                  >\r\n                    {user.isDeleting ? (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    ) : (\r\n                      <span>Delete</span>\r\n                    )}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          {!users && (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">\r\n                <span className=\"spinner-border spinner-border-lg align-center\"></span>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { List };\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\n\r\nimport { Input, Submit, Select } from \"../../_components\";\r\n\r\nfunction AddEdit({ history, match }) {\r\n  const user = useStoreState((s) => s.aStore.editAccount);\r\n  const create = useStoreActions((a) => a.aStore.createAccount);\r\n  const update = useStoreActions((a) => a.aStore.updateAccount);\r\n  const getById = useStoreActions((a) => a.aStore.getAccountById);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const id = match.params.id;\r\n  const isAddMode = !id;\r\n\r\n  useEffect(() => {\r\n    if (!isAddMode) {\r\n      getById(id);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const options = [\"\", \"User\", \"Admin\"];\r\n\r\n  const emptyValues = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const userValues = {\r\n    userName: user?.userName,\r\n    email: user?.email,\r\n    role: user?.role,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const initialValues = isAddMode ? emptyValues : userValues;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    role: Yup.string().required(\"Role is required\"),\r\n    password: Yup.string()\r\n      .concat(isAddMode ? Yup.string().required(\"Password is required\") : null)\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n      .when(\"password\", (password, schema) => {\r\n        if (password) return schema.required(\"Confirm Password is required\");\r\n      })\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\r\n  });\r\n\r\n  function onSubmit(fields, { setStatus, setSubmitting }) {\r\n    setStatus();\r\n    if (isAddMode) {\r\n      createUser(fields, setSubmitting);\r\n    } else {\r\n      updateUser(id, fields, setSubmitting);\r\n    }\r\n  }\r\n\r\n  function createUser(fields, setSubmitting) {\r\n    create(fields)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"User added successfully\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\".\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  function updateUser(id, fields, setSubmitting) {\r\n    update({ id: id, params: fields })\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Update successful\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"..\");\r\n      })\r\n      .catch((error) => {\r\n        setSubmitting(false);\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  const formMethods = useForm({\r\n    defaultValues: initialValues,\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1>{isAddMode ? \"Add User\" : \"Edit User\"}</h1>\r\n\r\n      <Input name=\"userName\" label=\"Username\" formMethods={formMethods} />\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"col-7\">\r\n          <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Select\r\n            name=\"role\"\r\n            label=\"Role\"\r\n            options={options}\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {!isAddMode && (\r\n        <div>\r\n          <h3 className=\"pt-3\">Change Password</h3>\r\n          <p>Leave blank to keep the same password</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            formMethods={formMethods}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Submit label=\"Save\" formMethods={formMethods}>\r\n        <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\r\n          Cancel\r\n        </Link>\r\n      </Submit>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { AddEdit };\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { List } from './List';\r\nimport { AddEdit } from './AddEdit';\r\n\r\nfunction Users({ match }) {\r\n    const { path } = match;\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={path} component={List} />\r\n            <Route path={`${path}/add`} component={AddEdit} />\r\n            <Route path={`${path}/edit/:id`} component={AddEdit} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport { Users };","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Overview } from \"./Overview\";\r\nimport { Users } from \"./users\";\r\n\r\nfunction Admin({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path={path} component={Overview} />\r\n          <Route path={`${path}/users`} component={Users} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Admin };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nfunction Login({ history, location }) {\r\n  const login = useStoreActions((a) => a.aStore.login);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit({ email, password }) {\r\n    clearAlerts();\r\n    login({ email, password })\r\n      .then(() => {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        history.push(from);\r\n      })\r\n      .catch((error) => {\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h3 className=\"card-header\">Login</h3>\r\n      <div className=\"card-body\">\r\n        <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          formMethods={formMethods}\r\n          type=\"password\"\r\n        />\r\n        <Submit label=\"Login\" formMethods={formMethods}>\r\n          <Link to=\"register\" className=\"btn btn-link\">\r\n            Register\r\n          </Link>\r\n          <Link\r\n            to=\"forgot-password\"\r\n            className=\"btn btn-link pr-0\"\r\n            posright=\"true\"\r\n          >\r\n            Forgot Password?\r\n          </Link>\r\n        </Submit>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Login };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is required\"),\r\n});\r\n\r\nfunction Register({ history }) {\r\n  const registerUser = useStoreActions((a) => a.aStore.register);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit(data) {\r\n    registerUser(data)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message:\r\n            \"Registration successful, please check your email for verification instructions\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch((error) => {\r\n        alertError({ message: error });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h3 className=\"card-header\">Register</h3>\r\n      <div className=\"card-body\">\r\n        <Input name=\"userName\" label=\"Username\" formMethods={formMethods} />\r\n        <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              formMethods={formMethods}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Input\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              formMethods={formMethods}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Submit label=\"Register\" formMethods={formMethods}>\r\n          <Link to=\"login\" className=\"btn btn-link\" posright=\"false\">\r\n            Cancel\r\n          </Link>\r\n        </Submit>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Register };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction VerifyEmail({ history }) {\r\n  const verifyEmail = useStoreActions((a) => a.aStore.verifyEmail);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const EmailStatus = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n  };\r\n\r\n  const [emailStatus, setEmailStatus] = useState(EmailStatus.Verifying);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    verifyEmail(token)\r\n      .then(() => {\r\n        alertSuccess({\r\n          message: \"Verification successful, you can now login\",\r\n          keepAfterRouteChange: true,\r\n        });\r\n        history.push(\"login\");\r\n      })\r\n      .catch(() => {\r\n        setEmailStatus(EmailStatus.Failed);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function getBody() {\r\n    switch (emailStatus) {\r\n      case EmailStatus.Verifying:\r\n        return <div>Verifying...</div>;\r\n      case EmailStatus.Failed:\r\n        return (\r\n          <div>\r\n            Verification failed, you can also verify your account using the{\" \"}\r\n            <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Verify Email</h3>\r\n      <div className=\"card-body\">{getBody()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { VerifyEmail };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as Yup from \"yup\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n});\r\n\r\nfunction ForgotPassword() {\r\n  const forgotPassword = useStoreActions((a) => a.aStore.forgotPassword);\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const { handleSubmit } = formMethods;\r\n\r\n  function onSubmit({ email }) {\r\n    clearAlerts();\r\n    forgotPassword(email)\r\n      .then(() =>\r\n        alertSuccess({\r\n          message: \"Please check your email for password reset instructions\",\r\n        })\r\n      )\r\n      .catch((error) => alertError({ message: error }));\r\n    //.finally(() => setSubmitting(false));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h3 className=\"card-header\">Forgot Password</h3>\r\n      <div className=\"card-body\">\r\n        <Input name=\"email\" label=\"Email\" formMethods={formMethods} />\r\n        <Submit label=\"Forgot Password\" formMethods={formMethods}>\r\n          <Link to=\"login\" className=\"btn btn-link\" posright=\"false\">\r\n            Cancel\r\n          </Link>\r\n        </Submit>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { ForgotPassword };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport { Input, Submit } from \"../_components\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be at least 6 characters\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is required\"),\r\n});\r\n\r\nfunction ResetPassword({ history }) {\r\n  const validateResetToken = useStoreActions(\r\n    (a) => a.aStore.validateResetToken\r\n  );\r\n\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n  const alertError = useStoreActions((a) => a.iStore.error);\r\n  const clearAlerts = useStoreActions((a) => a.iStore.clear);\r\n\r\n  const resetPassword = useStoreActions((a) => a.aStore.resetPassword);\r\n\r\n  const TokenStatus = {\r\n    Validating: \"Validating\",\r\n    Valid: \"Valid\",\r\n    Invalid: \"Invalid\",\r\n  };\r\n\r\n  const [token, setToken] = useState(null);\r\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\r\n\r\n  useEffect(() => {\r\n    const { token } = queryString.parse(window.location.search);\r\n\r\n    // remove token from url to prevent http referer leakage\r\n    history.replace(window.location.pathname);\r\n\r\n    validateResetToken(token)\r\n      .then(() => {\r\n        setToken(token);\r\n        setTokenStatus(TokenStatus.Valid);\r\n      })\r\n      .catch(() => {\r\n        setTokenStatus(TokenStatus.Invalid);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const formMethods = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  function getForm(formMethods) {\r\n    const { handleSubmit } = formMethods;\r\n\r\n    function onSubmit({ password, confirmPassword }, { setSubmitting }) {\r\n      clearAlerts();\r\n      resetPassword({ token, password, confirmPassword })\r\n        .then(() => {\r\n          alertSuccess({\r\n            message: \"Password reset successful, you can now login\",\r\n            options: { keepAfterRouteChange: true },\r\n          });\r\n          history.push(\"login\");\r\n        })\r\n        .catch((error) => {\r\n          setSubmitting(false);\r\n          alertError({ message: error });\r\n        });\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          formMethods={formMethods}\r\n        />\r\n\r\n        <Input\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          formMethods={formMethods}\r\n        />\r\n\r\n        <Submit label=\"Reset Password\" formMethods={formMethods}>\r\n          <Link to=\"login\" className=\"btn btn-link\" posright=\"false\">\r\n            Cancel\r\n          </Link>\r\n        </Submit>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function getBody(formMethods) {\r\n    switch (tokenStatus) {\r\n      case TokenStatus.Valid:\r\n        return getForm(formMethods);\r\n      case TokenStatus.Invalid:\r\n        return (\r\n          <div>\r\n            Token validation failed, if the token has expired you can get a new\r\n            one at the <Link to=\"forgot-password\">forgot password</Link> page.\r\n          </div>\r\n        );\r\n      case TokenStatus.Validating:\r\n        return <div>Validating token...</div>;\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"card-header\">Reset Password</h3>\r\n      <div className=\"card-body\">{getBody(formMethods)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { ResetPassword };\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nimport { Login } from \"./Login\";\r\nimport { Register } from \"./Register\";\r\nimport { VerifyEmail } from \"./VerifyEmail\";\r\nimport { ForgotPassword } from \"./ForgotPassword\";\r\nimport { ResetPassword } from \"./ResetPassword\";\r\n\r\nfunction Account({ history, match }) {\r\n  const { path } = match;\r\n  const account = useStoreState((s) => s.aStore.account);\r\n\r\n  useEffect(() => {\r\n    // redirect to home if already logged in\r\n    if (account) {\r\n      history.push(\"/\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8 offset-sm-2 mt-5\">\r\n          <div className=\"card m-3\">\r\n            <Switch>\r\n              <Route path={`${path}/login`} component={Login} />\r\n              <Route path={`${path}/register`} component={Register} />\r\n              <Route path={`${path}/verify-email`} component={VerifyEmail} />\r\n              <Route\r\n                path={`${path}/forgot-password`}\r\n                component={ForgotPassword}\r\n              />\r\n              <Route\r\n                path={`${path}/reset-password`}\r\n                component={ResetPassword}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Account };\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function PageSummary({ page }) {\r\n  const history = useHistory();\r\n  console.log(page);\r\n\r\n  return (\r\n    <Card\r\n      className=\"mb-3 mx-5 p-3\"\r\n      onClick={() => history.push(\"/topic/\" + page.slug)}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{page.title}</Card.Title>\r\n        <Card.Subtitle>{page.subtitle}</Card.Subtitle>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport PageSummary from \"./PageSummary\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Pages() {\r\n  const pages = useStoreState((s) => s.pStore.pages);\r\n  const createPage = useStoreActions((a) => a.pStore.createPage);\r\n  const history = useHistory();\r\n\r\n  const addPageHandler = () => {\r\n    createPage();\r\n    history.push(\"/topic/newPage\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"w-auto mt-5 \">\r\n        <button\r\n          className=\"float-right btn btn-link mr-5\"\r\n          onClick={addPageHandler}\r\n        >\r\n          <GoPlus className=\"larger mt-1  text-secondary\" />\r\n        </button>\r\n        <Row>\r\n          <h2 className=\"mb-3 ml-5\">Documentation</h2>\r\n        </Row>\r\n\r\n        {pages.map((p) => (\r\n          <Row key={p._id}>\r\n            <Col>\r\n              <PageSummary page={p} />\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function Comment({ data }) {\r\n  const history = useHistory();\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const editComment = useStoreActions((a) => a.pStore.editComment);\r\n  const deleteComment = useStoreActions((a) => a.pStore.deleteComment);\r\n\r\n  const handleEdit = () => {\r\n    editComment(data);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteComment(data);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <Card.Title>Comment by {data.userName}</Card.Title>\r\n        <Card.Text>{data.content}</Card.Text>\r\n        {user && (user.id === data.userId || user.role === \"Admin\") ? (\r\n          <div className=\"float-right\">\r\n            <button className=\"btn btn-link\" onClick={handleDelete}>\r\n              <MdDelete className=\"larger text-secondary\" />\r\n            </button>{\" \"}\r\n            <button className=\"btn btn-link\" onClick={handleEdit}>\r\n              <MdModeEdit className=\"larger text-secondary\" />\r\n            </button>{\" \"}\r\n          </div>\r\n        ) : null}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function Comments({ comments } = []) {\r\n  return (\r\n    <>\r\n      {comments.map((c) => (\r\n        <Comment key={c._id} data={c} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Comments from \"../page/Comments\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function PageDisplay() {\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((s) => s.aStore.account);\r\n  const createNewComment = useStoreActions((a) => a.pStore.createComment);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCommentHandler = () => {\r\n    createNewComment(user);\r\n    history.push(\"/comment\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{page.title}</h2>\r\n\r\n      <ReactMarkdown\r\n        source={page.content}\r\n        escapeHtml={false}\r\n        className=\"mb-4\"\r\n      />\r\n      <div className=\"mt-5\"></div>\r\n      <hr className=\"mt-3 mb-3\" />\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"mt-1\">Comments</h4>\r\n        </Col>\r\n        <Col>\r\n          {user ? (\r\n            <button\r\n              className=\"float-right btn btn-link\"\r\n              onClick={addCommentHandler}\r\n            >\r\n              <GoPlus className=\"larger text-secondary mb-1\" />\r\n            </button>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n\r\n      <Comments\r\n        className=\"float-none\"\r\n        comments={page.comments ? page.comments : []}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MarkdownEditor2 from \"@uiw/react-markdown-editor\";\r\n\r\nexport default function MarkdownEditor({ val, updatedValue }) {\r\n  const updateMarkdown = (e, d, v) => {\r\n    updatedValue.current = v;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MarkdownEditor2 value={val} height=\"300\" onChange={updateMarkdown} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { fileService } from \"../_services\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nexport const FileUploader = () => {\r\n  const [file, setFile] = useState();\r\n  const [filename, setFilename] = useState(\"Choose image to upload\");\r\n  const alertSuccess = useStoreActions((a) => a.iStore.success);\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    console.log(formData);\r\n    const message = await fileService.uploadFile(formData);\r\n    alertSuccess({ message: message, autoClose: false });\r\n    setFilename(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n      <div className=\"custom-file \">\r\n        <input\r\n          type=\"file\"\r\n          className=\"custom-file-input\"\r\n          id=\"customFile\"\r\n          onChange={onChange}\r\n        />\r\n        <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n          {filename}\r\n        </label>\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Upload\"\r\n        className=\"btn,  btn-light btn-block mt-3  float-left\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport MarkdownEditor from \"./MarkdownEditor\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { FileUploader } from \"./FileUploader\";\r\n\r\nexport default function PageEdit({ page }) {\r\n  //const page = useStoreState((state) => state.pStore.page);\r\n  const updatePageContent = useStoreActions(\r\n    (actions) => actions.pStore.updatePageContent\r\n  );\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    slug: \"\",\r\n    subtitle: \"\",\r\n  };\r\n\r\n  //     <input type=\"submit\"  className=\"btn btn-primary\" />\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n  const eduRef = useRef();\r\n\r\n  if (!page) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  defaultValues.title = page.title;\r\n  defaultValues.subtitle = page.subtitle;\r\n  defaultValues.slug = page.slug;\r\n\r\n  const onSubmit = (data) => {\r\n    const para = {\r\n      _id: page._id,\r\n      slug: data.slug,\r\n      title: data.title,\r\n      subtitle: data.subtitle,\r\n      content: eduRef?.current,\r\n    };\r\n\r\n    console.log(para);\r\n    updatePageContent(para);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <button type=\"submit\" className=\"btn btn-light float-right \">\r\n          <MdSave />\r\n        </button>\r\n        <div className=\"form-group input-group-lg\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            id=\"title\"\r\n            className=\"form-control\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"slug\">Slug</label>\r\n          <input\r\n            id=\"slug\"\r\n            className=\"form-control\"\r\n            name=\"slug\"\r\n            type=\"text\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Subtitle</label>\r\n          <textarea\r\n            id=\"subtitle\"\r\n            rows=\"4\"\r\n            name=\"subtitle\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          {\" \"}\r\n          <label htmlFor=\"content\">Content</label>\r\n          <MarkdownEditor\r\n            id=\"content\"\r\n            val={page.content}\r\n            updatedValue={eduRef}\r\n          />{\" \"}\r\n        </div>\r\n      </form>\r\n      <FileUploader className=\"m-3\" />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PageDisplay from \"./PageDisplay\";\r\nimport PageEdit from \"./PageEdit\";\r\nimport Modal from \"react-bootstrap/modal\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\n\r\nexport default function Page() {\r\n  let { slug } = useParams();\r\n  const page = useStoreState((state) => state.pStore.page);\r\n  const user = useStoreState((state) => state.aStore.account);\r\n  const loadPage = useStoreActions((a) => a.pStore.loadPage);\r\n  const deletePage = useStoreActions((a) => a.pStore.deletePage);\r\n  const [modus, setModus] = useState(\"show\");\r\n  const [showConfirmation, setShowConfirmation] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (slug === \"NewPage\") {\r\n      setModus(\"edit\");\r\n      return;\r\n    }\r\n    loadPage(slug);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!page) {\r\n    return <div>still loading</div>;\r\n  }\r\n\r\n  const toogleEdit = () => {\r\n    if (modus === \"edit\") {\r\n      setModus(\"show\");\r\n      return;\r\n    }\r\n\r\n    setModus(\"edit\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (showConfirmation) return;\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const deleteConfirmed = () => {\r\n    deletePage(page);\r\n    setShowConfirmation(false);\r\n    history.push(\"/content\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"w-auto mt-5 \">\r\n        {user?.role === \"Admin\" ? (\r\n          <div className=\"float-right\">\r\n            {modus === \"show\" ? (\r\n              <button className=\"btn btn-link\" onClick={handleDelete}>\r\n                <MdDelete className=\"larger mt-1 text-secondary\" />\r\n              </button>\r\n            ) : null}\r\n\r\n            <button className=\"btn btn-link\" onClick={toogleEdit}>\r\n              <MdModeEdit className=\"larger mt-1 text-secondary\" />\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        {modus === \"show\" ? <PageDisplay /> : null}\r\n        {modus === \"edit\" ? <PageEdit page={page} /> : null}\r\n      </Container>\r\n      <Modal show={showConfirmation} onHide={() => setShowConfirmation(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirmation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Do you really want to delete this page?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => setShowConfirmation(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={deleteConfirmed}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function CommentEdit() {\r\n  const comment = useStoreState((s) => s.pStore.comment);\r\n  const page = useStoreState((s) => s.pStore.page);\r\n  const updateComment = useStoreActions((a) => a.pStore.saveComment);\r\n  const clearComment = useStoreActions((a) => a.pStore.clearComment);\r\n  const history = useHistory();\r\n\r\n  const defaultValues = {\r\n    content: comment?.content,\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const updatedComment = { ...comment, content: data.content };\r\n    updateComment(updatedComment);\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    clearComment();\r\n    history.push(\"/topic/\" + page.slug);\r\n  };\r\n\r\n  const { register, handleSubmit } = useForm({ defaultValues: defaultValues });\r\n\r\n  return (\r\n    <Container className=\"w-auto mt-5 \">\r\n      <h3>Edit Comment</h3>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"content\">Comment</label>\r\n          <textarea\r\n            id=\"content\"\r\n            rows=\"4\"\r\n            name=\"content\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n        <button onClick={onCancel} className=\"btn btn-secondary ml-2 \">\r\n          Cancel{\" \"}\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport { Role } from \"../_helpers\";\r\nimport { Nav, PrivateRoute, Alert } from \"../_components\";\r\nimport { Home } from \"../home\";\r\nimport { Profile } from \"../profile\";\r\nimport { Admin } from \"../admin\";\r\nimport { Account } from \"../account\";\r\nimport Pages from \"../page/Pages\";\r\nimport Page from \"../page/Page\";\r\nimport CommentEdit from \"../page/CommentEdit\";\r\n\r\nfunction App() {\r\n  const { pathname } = useLocation();\r\n  const loadPages = useStoreActions((a) => a.pStore.loadPages);\r\n  const refreshToken = useStoreState((s) => s.aStore.refreshToken);\r\n  const refreshTheToken = useStoreActions((a) => a.aStore.refreshTheToken);\r\n\r\n  useEffect(() => {\r\n    let refreshTokenTimeout;\r\n    if (refreshToken) {\r\n      const jwtToken = JSON.parse(atob(refreshToken.split(\".\")[1]));\r\n\r\n      const expires = new Date(jwtToken.exp * 1000);\r\n      const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n\r\n      refreshTokenTimeout = setTimeout(() => {\r\n        refreshTheToken();\r\n      }, timeout);\r\n    }\r\n    return () => clearTimeout(refreshTokenTimeout);\r\n  }, [refreshToken, refreshTheToken]);\r\n\r\n  useEffect(() => {\r\n    refreshTheToken();\r\n    loadPages();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"app-container bg-light\"}>\r\n      <Nav />\r\n      <Alert />\r\n      <Switch>\r\n        <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/content\" component={Pages} />\r\n        <Route path=\"/topic/:slug\" component={Page} />\r\n\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n        <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\r\n        <Route path=\"/account\" component={Account} />\r\n        <Route path=\"/comment\" component={CommentEdit} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport { history } from \"./_helpers\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport store from \"./store\";\r\nimport { App } from \"./app\";\r\n\r\nimport \"./styles.css\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"app\")\r\n);\r\n"],"sourceRoot":""}